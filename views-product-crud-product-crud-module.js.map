{"version":3,"sources":["webpack:///./src/app/directives/DateValidator.directive.ts","webpack:///./src/app/model/ProductModel.model .ts","webpack:///./src/app/views/client/client.service.ts","webpack:///./src/app/views/product-crud/product-crud-common.component.ts","webpack:///./src/app/views/product-crud/product-crud.module.ts","webpack:///./src/app/views/product-crud/product-crud.routing.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.ts"],"names":[],"mappings":"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","file":"views-product-crud-product-crud-module.js","sourcesContent":["import { Directive, ElementRef, Renderer, OnInit } from '@angular/core';\r\nimport { min } from \"date-fns\";\r\n\r\n@Directive({\r\n  selector: \"[dateValidator]\"\r\n})\r\nexport class DateValidator implements OnInit {\r\n  constructor(private el: ElementRef, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.renderer.setElementProperty(\r\n      this.el.nativeElement,\r\n      \"[min]\",\r\n      this.dateValidate()\r\n    );\r\n  }\r\n\r\n  dateValidate() {\r\n    console.log(\"date validator\");\r\n    const today =  new Date();\r\n    const tomorrow =  new Date(today.setDate(today.getDate() + 1));\r\n    console.log(today)\r\n    console.log(tomorrow)\r\n    return tomorrow;\r\n  }\r\n\r\n\r\n}\r\n","export class ProductCreationRequest {\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  batchNumber: string;\r\n  quantity: string;\r\n  expireDate: string;\r\n  communityId: string;\r\n  categoryId: string;\r\n  videoUrl: string;\r\n  file: any;\r\n\r\n  constructor(public formValue: any) {\r\n    this.code = formValue.code;\r\n    this.name = formValue.name;\r\n    this.description = formValue.description;\r\n    this.batchNumber = formValue.batchNumber;\r\n    this.quantity = formValue.quantity;\r\n    this.expireDate = formValue.expireDate;\r\n    this.communityId = formValue.communityId;\r\n    this.categoryId = formValue.categoryId;\r\n    this.file = formValue.file;\r\n    this.videoUrl = formValue.videoUrl;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment.prod';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n  clientUrl: string = environment.userApiUrl + \"clients\";\r\n  specsUrl: string = environment.userApiUrl + \"spec\";\r\n  licenseUrl: string = this.clientUrl + \"/license\";\r\n  userUrl: string = environment.userApiUrl + \"platform-users\";\r\n  roleUrl: string = environment.userApiUrl + \"platform-user-roles\";\r\n  geoUrl: string = environment.userApiUrl + \"geo\";\r\n  imageUrl: string = environment.userApiUrl + 'downloads/client/';\r\n  sectionsUrl: string = environment.userApiUrl + \"sections/\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getClients(): Observable<any> {\r\n    return this.http.get(this.clientUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getClientsByFilter(name, pageSize, pageNumber): Observable<any> {\r\n    return this.http.get(\r\n      this.clientUrl +\r\n      \"?name=\" +\r\n      name +\r\n      \"&pageNumber=\" +\r\n      pageNumber +\r\n      \"&pageSize=\" +\r\n      pageSize\r\n    ).pipe(catchError(this.handleError));\r\n  }\r\n  getUsers(clientId, keyword, pageSize, pageNumber, isSuperAdmin): Observable<any> {\r\n    return this.http.get(\r\n      this.userUrl +\r\n      \"?id=\" +\r\n      clientId +\r\n      \"&keyword=\" +\r\n      keyword +\r\n      \"&pageNumber=\" +\r\n      pageNumber +\r\n      \"&pageSize=\" +\r\n      pageSize +\r\n      \"&isSuperAdmin=\" +\r\n      isSuperAdmin\r\n    ).pipe(catchError(this.handleError));\r\n  }\r\n  // getUsers(id): Observable<any> {\r\n  //   return this.http.get(this.clientUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  // }\r\n  getClientsSuggestions(): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/suggestions\").pipe(catchError(this.handleError));\r\n  }\r\n  getRoles(): Observable<any> {\r\n    return this.http.get(this.roleUrl + \"/suggestions\").pipe(catchError(this.handleError));\r\n  }\r\n  getCategory(): Observable<any> {\r\n    return this.http.get(this.specsUrl + \"/categories\").pipe(catchError(this.handleError));\r\n  }\r\n  getCountry(): Observable<any> {\r\n    return this.http.get(this.geoUrl + \"/countries\").pipe(catchError(this.handleError));\r\n  }\r\n  getDisplayAuthority(): Observable<any> {\r\n    return this.http.get(this.sectionsUrl + \"types?types=D\").pipe(catchError(this.handleError));\r\n  }\r\n  getAllUserAuthority(): Observable<any> {\r\n    return this.http.get(this.sectionsUrl + \"types?types=U&types=D\").pipe(catchError(this.handleError));\r\n  }\r\n  getCommonAndAdminAuthority(): Observable<any> {\r\n    return this.http.get(this.sectionsUrl + \"types?types=C&types=A\").pipe(catchError(this.handleError));\r\n  }\r\n  getRoleAuthorities(roleId): any {\r\n    return this.http.get(this.roleUrl + '/' + roleId).pipe(catchError(this.handleError));\r\n  }\r\n  getAdminAuthority(id): Observable<any> {\r\n    return this.http.get(this.roleUrl + \"/authorities/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n  getClientCategories(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/categories/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n  // Service is accessed by two places - In Product creation popup , New User Creation\r\n  getClientCommunities(id): Observable<any> {\r\n    return this.http.get(environment.userApiUrl + \"communities/client/\" + id + \"/\" + undefined).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  addClient(item): Observable<any> {\r\n    return this.http.post<any>(this.clientUrl, item).pipe(\r\n      map(data => {\r\n        // console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getClient(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClient(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientLicense(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.licenseUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientCategory(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientUrl + \"/categories/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientStatus(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/status/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  addUser(item): Observable<any> {\r\n    return this.http.post<any>(this.userUrl, item).pipe(\r\n      map(data => {\r\n        console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getUser(id): Observable<any> {\r\n    return this.http.get(this.userUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateUser(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  deleteUser(id): Observable<any> {\r\n    return this.http.delete(this.userUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateUserCategories(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userUrl + \"/categories/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateUserCommunity(id, item): Observable<any> {\r\n    console.log(this.userUrl + \"/communities/\" + id);\r\n\r\n    return this.http\r\n      .put<any>(this.userUrl + \"/communities/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  deleteUserById(userId) {\r\n    return this.http\r\n      .delete(this.userUrl + \"/\" + userId)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /*\r\n  * Create New User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  createNewRole(roleObj) {\r\n    return this.http.post(this.roleUrl, roleObj)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Update New User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  updateRloe(roleId, roleObj) {\r\n    return this.http.put(this.roleUrl + '/' + roleId, roleObj)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get All User Role From Data Base\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllUserRoles(): any {\r\n    return this.http.get(this.roleUrl)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get All Authorities From Data Base\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllAuthorities(): any {\r\n    return this.http.get(environment.userApiUrl + 'platform-authorities')\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    // console.log(error);\r\n    if (error.status !== 401) {\r\n      return throwError(error);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ResponseModel } from \"../../model/ResponseModel.model\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SurveyService } from \"../survey/survey.service\";\r\nimport { CrudService } from \"../cruds/crud.service\";\r\nimport { ClientService } from \"../client/client.service\";\r\n\r\n// -----------------------------------------\r\n// Product Crud Common Function and Operator\r\n// -----------------------------------------\r\n\r\n@Component({\r\n  selector: \"product-common\",\r\n  template: \"\"\r\n})\r\nexport class ProductCommonComponent {\r\n  public getCategoriesSub: Subscription;\r\n\r\n  public categories: any[];\r\n\r\n  constructor(\r\n    public surveyService: SurveyService,\r\n    public clientService: ClientService\r\n  ) {}\r\n\r\n  /** RAVEEN - 2019/04/04\r\n   * Fetch All the categories bound to client\r\n   *\r\n   * TODO : if Super admin log into system, this service should fetch all the categories without client filtering.\r\n   * local storage way can be good for identify which user is logged into system and user's roles data\r\n   *\r\n   * @param clientId\r\n   *\r\n   */\r\n  getClientCategories(clientId) {\r\n    this.getCategoriesSub = this.clientService\r\n      .getClientCategories(clientId)\r\n      .subscribe(data => {\r\n        this.categories = data.content;\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ProductFilterTableComponent } from \"./product-filter-table/product-filter-table.component\";\r\nimport { RouterModule } from \"../../../../node_modules/@angular/router\";\r\nimport { ProductCrudRouts } from \"./product-crud.routing\";\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatAutocompleteModule,\r\n  MatProgressBarModule,\r\n  MatMenuModule,\r\n  MatToolbarModule\r\n} from \"../../../../node_modules/@angular/material\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { ProductCrudService } from \"./product-crud.service\";\r\nimport { ProductCrudPopupComponent } from \"./product-filter-table/product-crud-popup/product-crud-popup.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { DateValidator } from \"../../directives/DateValidator.directive\";\r\nimport { FileUploadModule } from \"ng2-file-upload\";\r\nimport { SurveyService } from \"../survey/survey.service\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { ProductCommonComponent } from \"./product-crud-common.component\";\r\nimport { ClientService } from \"../client/client.service\";\r\nimport { AuthenticationService } from \"../sessions/authentication.service\";\r\nimport { ComunityService } from '../community/community.service';\r\nimport { AppInfoService } from '../../shared/services/app-info/app-info.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatAutocompleteModule,\r\n    FileUploadModule,\r\n    MatProgressBarModule,\r\n    SharedModule,\r\n    MatToolbarModule,\r\n    RouterModule.forChild(ProductCrudRouts)\r\n  ],\r\n  declarations: [\r\n    ProductFilterTableComponent,\r\n    ProductCrudPopupComponent,\r\n    DateValidator,\r\n    ProductCommonComponent\r\n  ],\r\n  providers: [\r\n    ProductCrudService,\r\n    ClientService,\r\n    SurveyService,\r\n    AuthenticationService,\r\n    ComunityService,\r\n    AppInfoService\r\n  ],\r\n  entryComponents: [ProductCrudPopupComponent]\r\n})\r\nexport class ProductCrudModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ProductFilterTableComponent } from './product-filter-table/product-filter-table.component';\r\n\r\nexport const ProductCrudRouts: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'show'\r\n    },\r\n    {\r\n        path: 'show',\r\n        component: ProductFilterTableComponent,\r\n        data: { title: 'Product Section', breadcrumb: 'Product' }\r\n    }\r\n];","module.exports = \"<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <!-- <input matInput [formControl]=\\\"productForm.controls['name']\\\" required name=\\\"name\\\" letterOnly placeholder=\\\"Product Name\\\"> -->\\r\\n          <input matInput [formControl]=\\\"productForm.controls['name']\\\" required name=\\\"name\\\" pattern=\\\"[a-zA-Z\\\\s]*\\\" placeholder=\\\"Product Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- Category dropdown -->\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [formControl]=\\\"productForm.controls['categoryId']\\\" required placeholder=\\\"Select A Category\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">{{category.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- Quantity Input -->\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input type=\\\"number\\\" matInput name=\\\"quantity\\\" [formControl]=\\\"productForm.controls['quantity']\\\"  pattern=\\\"^[+]?\\\\d+$\\\" required placeholder=\\\"Quantity\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- Description Input -->\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"desc\\\" [formControl]=\\\"productForm.controls['description']\\\" required name=\\\"description\\\"\\r\\n            placeholder=\\\"Description\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- Batch Number Input -->\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"batchNumber\\\" [formControl]=\\\"productForm.controls['batchNumber']\\\" required placeholder=\\\"Batch Number\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- Expire Date Input -->\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"expireDate\\\" [min]=\\\"tomorrow\\\" [matDatepicker]=\\\"picker\\\"\\r\\n            [formControl]=\\\"productForm.controls['expireDate']\\\" required placeholder=\\\"Expire Date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- Community AutoComplete box -->\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Select A Community\\\" matInput\\r\\n            [formControl]=\\\"productForm.controls['communityId']\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n            (focusout)=\\\"communityOnFocusOut($event)\\\">\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onCommunitySelectionChanged($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let option of communityFilteredOption | async; let i = index\\\" [value]=\\\"communityIDs[i]\\\">\\r\\n              {{option}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <!-- Youtube Video URL Input -->\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <!-- <input matInput name=\\\"videoUrl\\\" [formControl]=\\\"productForm.controls['videoUrl']\\\" placeholder=\\\"Youtube Video URL\\\" type=\\\"text\\\"> -->\\r\\n          <input matInput name=\\\"videoUrl\\\" [formControl]=\\\"productForm.controls['videoUrl']\\\" placeholder=\\\"Youtube Video URL\\\" type=\\\"text\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <!-- --------- New Code ----------------- -->\\r\\n\\r\\n      <!-- --------- hidden file input --------- -->\\r\\n      <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" [formControl]=\\\"productForm.controls['file']\\\"\\r\\n        multiple style=\\\"display: none\\\" />\\r\\n\\r\\n\\r\\n      <!-- --------- file input click button --------- -->\\r\\n      <!-- *ngIf=\\\"data.isNew\\\"  -->\\r\\n      <div layout-margin layout-padding>\\r\\n        <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"productImgs.click()\\\" [disabled]=\\\"this.maxUploadableFileCount === null || this.maxUploadableFileCount < 1 ?\\r\\n        (false) :\\r\\n        (this.currentTotalImageCount === this.maxUploadableFileCount)\\\" type=\\\"button\\\">\\r\\n          Browse Images\\r\\n          <span *ngIf=\\\"this.maxUploadableFileCount === null || this.maxUploadableFileCount < 1 ?\\r\\n          (false) :\\r\\n          (this.currentTotalImageCount > 0)\\\"> ({{this.currentTotalImageCount}} / 4)</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <!-- --------- start images preview container --------- -->\\r\\n      <div id=\\\"cp_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n        <!-- --------- start card --------- -->\\r\\n        <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngFor='let url of urls; let i = index'\\r\\n          fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex.sm=\\\"50\\\" style=\\\"display: flex;\\\">\\r\\n          <mat-card class=\\\"p-0\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"removeSelectedImg(i)\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n            <img [src]=\\\"url\\\">\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <!-- --------- end card --------- -->\\r\\n\\r\\n      </div>\\r\\n      <!-- --------- end images preview container --------- -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"productForm.invalid || urls.length === 0\\\">Save</button>\\r\\n    <span fxFlex></span>\\r\\n    <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n  </mat-dialog-actions>\\r\\n\\r\\n\\r\\n</form>\"","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MAT_DATE_FORMATS,\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE,\r\n  MatSnackBar\r\n} from \"@angular/material\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\n\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport { startWith, map } from \"rxjs/operators\";\r\nimport { DateValidator } from \"../../../../utility/dateValidator\";\r\n\r\nimport { FileUploader } from \"ng2-file-upload\";\r\nimport * as moment from \"moment\";\r\nimport { SurveyService } from \"../../../survey/survey.service\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { egretAnimations } from \"../../../../shared/animations/egret-animations\";\r\nimport { ProductCommonComponent } from \"../../product-crud-common.component\";\r\nimport { ClientService } from \"../../../client/client.service\";\r\nimport { AuthenticationService } from \"../../../sessions/authentication.service\";\r\nimport { ComunityService } from \"../../../community/community.service\";\r\nimport { AppInfoService } from \"../../../../shared/services/app-info/app-info.service\";\r\nimport { ProductCreationRequest } from \"app/model/ProductModel.model \";\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\"\r\n  },\r\n  display: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"YYYY-MM-DD\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"app-product-crud-popup\",\r\n  templateUrl: \"./product-crud-popup.component.html\",\r\n  animations: egretAnimations,\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ]\r\n})\r\nexport class ProductCrudPopupComponent extends ProductCommonComponent\r\n  implements OnInit {\r\n  public productForm: FormGroup;\r\n  tomorrow: Date;\r\n  imageUrl: any = \"assets/images/placeholder.jpg\";\r\n\r\n  // image uploader related properties\r\n  public uploader: FileUploader = new FileUploader({ url: \"upload_url\" });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  imageObject: any;\r\n  //------- new --------\r\n  maxUploadableFileCount: number = 4; // IF THIS IS NULL, THERE IS NO IMAGE LIMIT FOR FILE UPLOADER\r\n  urls = [];\r\n  newlySelectedFileList = [];\r\n  remainImagesID = [];\r\n  currentTotalImageCount: number = 0;\r\n\r\n  public clientId: string;\r\n\r\n  public getClientCommunitySub: Subscription;\r\n  public communities: string[] = [];\r\n  public communityIDs: string[] = [];\r\n  public communityFilteredOption: Observable<string[]>;\r\n  public selectedCommunityId: string;\r\n\r\n  // .............REGEX for Youtube link validation...............\r\n  public youtubeRegex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\r\n  public youTubeIdRegex = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\/)|(\\?v=|\\&v=))([^#\\&\\?]*).*/;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ProductCrudPopupComponent>,\r\n    public clientService: ClientService,\r\n    public surveyService: SurveyService,\r\n    public authService: AuthenticationService,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar,\r\n    private communityService: ComunityService,\r\n    private appInfoService: AppInfoService\r\n  ) {\r\n    super(surveyService, clientService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // validate back dates\r\n    this.tomorrow = DateValidator.getTomorrow();\r\n    const detailObj = this.authService.getLoggedUserDetail();\r\n    this.clientId = detailObj.userData.client.id;\r\n\r\n    this.getClientCategories(this.clientId);\r\n\r\n    if (!this.data.isNew) {\r\n      let images: any[] = this.data.payload.imageObjects;\r\n      images.forEach(image => {\r\n        let img = environment.productimageUrl + \"downloadFile/\" + image.id;\r\n        this.remainImagesID.push(image.id);\r\n        this.urls.push(img);\r\n      });\r\n\r\n      this.currentTotalImageCount = this.remainImagesID.length;\r\n    }\r\n\r\n    this.getAllClientCommunities(this.clientId);\r\n    this.buildProductForm(this.data.payload, this.data.isNew);\r\n  }\r\n\r\n  communityOnChange() {\r\n    this.communityFilteredOption = this.productForm.controls[\r\n      \"communityId\"\r\n    ].valueChanges.pipe(\r\n      startWith(\"\"),\r\n      map(value => this._communityFilter(value))\r\n    );\r\n    this.onCommunitySelectionChanged();\r\n  }\r\n\r\n  private _communityFilter(value: string): string[] {\r\n    if (value === \"\" || isNaN(Number(value))) {\r\n      const filterValue = value.toLowerCase();\r\n      return this.communities.filter(option =>\r\n        option.toLowerCase().includes(filterValue)\r\n      );\r\n    }\r\n  }\r\n\r\n  onCommunitySelectionChanged() {\r\n    const inputVal = this.productForm.controls[\"communityId\"].value;\r\n    const id = this.communityIDs.indexOf(inputVal);\r\n    if (id > -1) {\r\n      this.productForm.controls[\"communityId\"].setValue(this.communities[id]);\r\n      this.selectedCommunityId = inputVal;\r\n    } else {\r\n      console.log(\"============ else ==================\");\r\n    }\r\n  }\r\n\r\n  communityOnFocusOut(event) {\r\n    if (!(this.communities.indexOf(event.currentTarget.value) > -1)) {\r\n      this.productForm.controls[\"communityId\"].setValue(\"\");\r\n    }\r\n  }\r\n\r\n  getAllClientCommunities(clientId) {\r\n    this.clientService.getClientCommunities(clientId).subscribe(data => {\r\n      const communities = data.content;\r\n      communities.forEach(element => {\r\n        this.communities.push(element.name);\r\n        this.communityIDs.push(element.id);\r\n        this.communityOnChange();\r\n      });\r\n    });\r\n  }\r\n\r\n  buildProductForm(fieldItem, isNew) {\r\n    // const client = fieldItem.client;\r\n    // const clientId = client ? client.id : null;\r\n\r\n    const videoUrl = fieldItem.videoUrl;\r\n    let youtubeUrl = null;\r\n    if (videoUrl) {\r\n      youtubeUrl = isNew\r\n        ? videoUrl\r\n        : \"https://www.youtube.com/watch?v=\" + videoUrl;\r\n      console.log(youtubeUrl);\r\n    }\r\n\r\n    this.productForm = this.fb.group({\r\n      name: new FormControl(fieldItem.name || \"\", Validators.required),\r\n      description: new FormControl(\r\n        fieldItem.description || \"\",\r\n        Validators.required\r\n      ),\r\n      batchNumber: new FormControl(\r\n        fieldItem.batchNumber || \"\",\r\n        Validators.required\r\n      ),\r\n      quantity: new FormControl(fieldItem.quantity || \"\", [Validators.required, Validators.min(1)]),\r\n      expireDate: new FormControl(\r\n        fieldItem.expireDate || \"\",\r\n        Validators.required\r\n      ),\r\n\r\n      videoUrl: new FormControl(youtubeUrl || \"\", Validators.required),\r\n      file: new FormControl(),\r\n      categoryId: new FormControl(\r\n        fieldItem.categoryId || \"\",\r\n        Validators.required\r\n      ),\r\n      communityId: new FormControl(\r\n        fieldItem.communityId || \"\",\r\n        Validators.required\r\n      )\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.communityService\r\n      .licenseExpireState(this.clientId, \"tags\")\r\n      .subscribe(response => {\r\n        const tempRes: any = response;\r\n        const quotaExpire: boolean = tempRes.content.expired;\r\n        const usage = tempRes.content.usage;\r\n        const quota = tempRes.content.quota;\r\n        const qty = this.productForm.get(\"quantity\").value;\r\n\r\n        const balance = quota - usage;\r\n\r\n        if (qty > balance) {\r\n          const infoData = {\r\n            title: \"Quantity Exceed!\",\r\n            message:\r\n              \"To extend the order quantity please contact your Administrator.\",\r\n            linkData: {\r\n              url: \"https://www.google.com/gmail/\",\r\n              buttonText: \"Extend\"\r\n            }\r\n          };\r\n          this.appInfoService.showInfo(infoData);\r\n        } else {\r\n          const productRequest: ProductCreationRequest = new ProductCreationRequest(\r\n            this.productForm.value\r\n          );\r\n          let formData;\r\n          formData = this.prepareToSave(productRequest);\r\n          this.dialogRef.close(formData);\r\n        }\r\n      });\r\n  }\r\n\r\n  // image uploader related functions from here\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  // --------- New Code -----------------\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      if (\r\n        this.maxUploadableFileCount == null || this.maxUploadableFileCount < 1\r\n          ? true\r\n          : this.currentTotalImageCount + filesAmount <=\r\n          this.maxUploadableFileCount\r\n      ) {\r\n        for (let i = 0; i < filesAmount; i++) {\r\n          var reader = new FileReader();\r\n\r\n          reader.onload = (event: any) => {\r\n            this.urls.push(event.target.result);\r\n          };\r\n\r\n          reader.readAsDataURL(event.target.files[i]);\r\n          this.newlySelectedFileList.push(event.target.files[i]);\r\n        }\r\n        this.currentTotalImageCount += filesAmount;\r\n      } else {\r\n        // alert for file upload limit\r\n        this.snackBar.open(\r\n          \"Can't upload more than \" + this.maxUploadableFileCount + \" photos\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  removeSelectedImg(index: number) {\r\n    this.urls.splice(index, 1);\r\n    this.currentTotalImageCount -= 1;\r\n\r\n    if (this.remainImagesID.length < index + 1) {\r\n      this.newlySelectedFileList.splice(index - this.remainImagesID.length, 1);\r\n    } else {\r\n      this.remainImagesID.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  prepareToSave(formvalue): FormData {\r\n    let input: FormData = new FormData();\r\n\r\n    // RAVEEN - 2014/04/04 : client id is no longer an input\r\n    input.append(\"client\", this.clientId);\r\n\r\n    if (formvalue.communityId) {\r\n      input.append(\"communityId\", this.selectedCommunityId);\r\n    }\r\n\r\n    let videoUrl = formvalue.videoUrl;\r\n    if (videoUrl) {\r\n      let match = videoUrl.match(this.youTubeIdRegex);\r\n      if (match && match[8].length == 11) {\r\n        console.log(\"---------------- youtubeVideoId: - \" + match[8]);\r\n      }\r\n      input.append(\"videoUrl\", match[8]);\r\n    }\r\n\r\n    input.append(\"code\", formvalue.code);\r\n    input.append(\"quantity\", formvalue.quantity);\r\n\r\n    input.append(\r\n      \"expireDate\",\r\n      moment(formvalue.expireDate).format(\"YYYY-MM-DD\")\r\n    );\r\n    input.append(\"name\", formvalue.name);\r\n    input.append(\"description\", formvalue.description);\r\n    input.append(\"batchNumber\", formvalue.batchNumber);\r\n    input.append(\"categoryId\", formvalue.categoryId);\r\n\r\n    if (this.remainImagesID != null && this.remainImagesID.length > 0) {\r\n      input.append(\"remainImagesID\", this.remainImagesID.toString());\r\n    }\r\n\r\n    for (let i = 0; i < this.newlySelectedFileList.length; i++) {\r\n      let selectedFile: File = this.newlySelectedFileList[i];\r\n      let type = selectedFile.type.split(\"/\");\r\n      let imageName = \"image_\" + i + \".\" + type[1];\r\n      input.append(\"file\", selectedFile, imageName);\r\n    }\r\n\r\n    console.log('------------------------- input', input);\r\n\r\n\r\n    return input;\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<!-- -------- JA Sprint 1 - MVP -------- -->\\r\\n<!-- --------- Buddhi Hasanka ---------- -->\\r\\n\\r\\n<mat-card class=\\\"p-10\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <mat-form-field class=\\\"margin-333\\\" style=\\\"width: 99%\\\">\\r\\n      <input matInput placeholder=\\\"Search by name...\\\" value=\\\"\\\" (keyup)='updateFilter($event)'>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"m-333\\\">\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\" placeholder=\\\"Favorite food\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-raised-button class=\\\"mb-05\\\" (click)=\\\"handleNewProductSave()\\\" color=\\\"accent\\\">Add Product</button>\\r\\n    </div>\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"pl-1\\\">Product Name</th>\\r\\n          <th width=\\\"250px\\\">Description</th>\\r\\n          <th>Batch Number</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Expire Date</th>\\r\\n          <th width=\\\"150px\\\" class=\\\"\\\">Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let row of rows;\\\">\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.name }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.description }}</td>\\r\\n          <td class=\\\"pt-1 pb-1 text-cente\\\">{{ row?.batchNumber }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.quantity }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.expireDate }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">\\r\\n\\r\\n            <button class=\\\"card-control\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n              <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n              <button mat-menu-item (click)=\\\"openProductPopup(row)\\\">\\r\\n                <mat-icon>edit</mat-icon>Edit\\r\\n              </button>\\r\\n\\r\\n              <button mat-menu-item color=\\\"warn\\\" (click)=\\\"deleteProduct(row)\\\">\\r\\n                <mat-icon>delete</mat-icon>Delete\\r\\n              </button>\\r\\n\\r\\n              <button mat-menu-item (click)=\\\"downloadCsv(row)\\\">\\r\\n                <mat-icon>file_download</mat-icon>Download CSV\\r\\n              </button>\\r\\n            </mat-menu>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <nav aria-label=\\\"Page navigation example\\\">\\r\\n            <ul class=\\\"pagination\\\" *ngIf=\\\"totalPages.length > 1\\\">\\r\\n              <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber <= 1}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"this.getPageClient(pageNumber-1);\\\" aria-label=\\\"Previous\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                  <span class=\\\"sr-only\\\">Previous</span>\\r\\n                </a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" *ngFor=\\\"let page of totalPages\\\" [ngClass]=\\\"{'active':pageNumber === page}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"this.getPageClient(page);\\\">\\r\\n                  {{page}}\\r\\n                </a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber >= totalPages.length}\\\">\\r\\n                <a class=\\\"page-link\\\" (click)=\\\"this.getPageClient(pageNumber+1);\\\" aria-label=\\\"Next\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                  <span class=\\\"sr-only\\\">Next</span>\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n          <div class=\\\"pagination\\\">{{totalRecords}} Total</div>\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table>\\r\\n\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ProductCrudService } from \"../product-crud.service\";\r\nimport { MatDialogRef, MatDialog, DateAdapter } from \"@angular/material\";\r\nimport { ProductCrudPopupComponent } from \"./product-crud-popup/product-crud-popup.component\";\r\n\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { AppFileDownloadService } from \"../../../shared/services/file-download.service\";\r\nimport { AppDataConversionService } from \"../../../shared/services/data-conversion.service\";\r\nimport { AuthenticationService } from \"../../sessions/authentication.service\";\r\nimport { ComunityService } from \"../../community/community.service\";\r\nimport { AppInfoService } from \"../../../shared/services/app-info/app-info.service\";\r\n\r\n@Component({\r\n  selector: \"app-product-filter-table\",\r\n  templateUrl: \"./product-filter-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class ProductFilterTableComponent implements OnInit, OnDestroy {\r\n  rows: any[];\r\n  columns = [];\r\n  temp = [];\r\n\r\n  // pagination\r\n  public keyword = \"\";\r\n  public pageNumber = 1;\r\n  public pageSize = 10;\r\n  public totalPages = [];\r\n  public totalRecords = 0;\r\n\r\n  public getProductsSub: Subscription;\r\n  updatable: boolean;\r\n\r\n  public categories: any[];\r\n  public clientId: string;\r\n  public predefined: string;\r\n\r\n  constructor(\r\n    private prodService: ProductCrudService,\r\n    private dialog: MatDialog,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private confirmService: AppConfirmService,\r\n    private downloadService: AppFileDownloadService,\r\n    private conversionService: AppDataConversionService,\r\n    private authService: AuthenticationService,\r\n    private communityService: ComunityService,\r\n    private appInfoService: AppInfoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const userObj = this.authService.getLoggedUserDetail();\r\n    this.categories = userObj.userData.categories;\r\n    this.clientId = userObj.userData.client.id;\r\n    const predefinedStatus: boolean = userObj.userData.role.predefined;\r\n    this.predefined = predefinedStatus ? \"1\" : \"0\";\r\n    this.getPageProduct(this.pageNumber);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getProductsSub) {\r\n      this.getProductsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  downloadCsv(selectedRow) {\r\n    console.log(\"------------------------------- ProductFilterTableComponent : SELECTED RAW : \" + selectedRow.id);\r\n    this.prodService\r\n      .getProductDetails(selectedRow.id)\r\n      .subscribe(successResp => {\r\n        let auths = successResp.content;\r\n        const fileName =\r\n          selectedRow.name.toUpperCase() +\r\n          \"_BATCH_\" +\r\n          selectedRow.batchNumber;\r\n        const csvData = this.conversionService.convertToCsv(auths);\r\n        console.log(\"fileName : \" + fileName);\r\n        this.downloadService.downloadFile({\r\n          name: fileName,\r\n          type: \"csv\",\r\n          data: csvData\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  changeValue() {\r\n    this.pageNumber = 1;\r\n    this.getPageProduct(this.pageNumber);\r\n  }\r\n\r\n  updateFilter(event) {\r\n    if (event.keyCode === 13) {\r\n      this.keyword = event.target.value.toLowerCase();\r\n      this.pageNumber = 1;\r\n      this.getPageProduct(this.pageNumber);\r\n    }\r\n  }\r\n\r\n  getCategoryIDs(categories) {\r\n    let categoryIDs = [];\r\n    categories.forEach(cat => {\r\n      categoryIDs.push(cat.id);\r\n    });\r\n    return categoryIDs\r\n  }\r\n\r\n  getPageProduct(pageNumber) {\r\n\r\n    if (pageNumber === 1 || (0 < pageNumber && pageNumber <= this.totalPages.length)) {\r\n      this.pageNumber = pageNumber;\r\n\r\n      this.getProductsSub = this.prodService\r\n        .getPageProducts(this.keyword, this.pageNumber, this.pageSize, this.clientId, this.getCategoryIDs(this.categories), this.predefined)\r\n        .subscribe(\r\n          successResp => {\r\n            this.rows = this.temp = successResp.content;\r\n            let totalPages = successResp.pagination.totalPages;\r\n            let totalPagesArray = [];\r\n\r\n            if (totalPages > 1) {\r\n              for (let i = 1; i <= totalPages; i++) {\r\n                totalPagesArray.push(i);\r\n              }\r\n            }\r\n            this.totalPages = totalPagesArray;\r\n            this.totalRecords = successResp.pagination.totalRecords;\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            console.log('------------------------------- ProductFilterTableComponent : error - ', error);\r\n            console.log('------------------------------- ProductFilterTableComponent : error.status - ', error.status);\r\n            this.errDialog.showError(error);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n\r\n  deleteProduct(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Are you sure that you want to delete this product?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.prodService.removeProduct(row, this.rows).subscribe(\r\n            data => {\r\n              this.getPageProduct(this.pageNumber);\r\n              this.loader.close();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError(error);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  handleNewProductSave() {\r\n    this.communityService\r\n      .licenseExpireState(this.clientId, \"tags\")\r\n      .subscribe(response => {\r\n        const tempRes: any = response;\r\n        const quotaExpire: boolean = tempRes.content.expired;\r\n\r\n        if (quotaExpire) {\r\n          const infoData = {\r\n            title: \"License\",\r\n            message:\r\n              \"You subscribed number of tags count has expired!</br>\" +\r\n              '<small class=\"text-muted\">Do you like to extend the plan?</small>',\r\n            linkData: {\r\n              url: \"https://www.google.com/gmail/\",\r\n              buttonText: \"Extend\"\r\n            }\r\n          };\r\n          this.appInfoService.showInfo(infoData);\r\n        } else {\r\n          this.openProductPopup({}, true);\r\n        }\r\n      });\r\n  }\r\n\r\n  openProductPopup(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add new Product\" : \"Update Product\";\r\n\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      ProductCrudPopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, isNew: isNew }\r\n      }\r\n    );\r\n\r\n    console.log(\"------------------------------- ProductFilterTableComponent : RES data - \", data);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n\r\n      console.log(\"------------------------------- ProductFilterTableComponent : RES obj - \", res);\r\n\r\n      //res.expireDate = moment(res.expireDate).format(\"YYYY-MM-DD\");\r\n\r\n      if (isNew) {\r\n        this.prodService.addProduct(res, this.rows).subscribe(\r\n          data => {\r\n            let id = data;\r\n            this.prodService.getProductById(id).subscribe(data => {\r\n              this.rows = this.rows.concat(data.content);\r\n              console.log(this.rows);\r\n            });\r\n\r\n            this.loader.close();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError(error);\r\n          }\r\n        );\r\n      } else {\r\n        this.prodService.updateProduct(data.id, res).subscribe(\r\n          response => {\r\n            console.log(response.content);\r\n            this.prodService\r\n              .getProductById(response.content.id)\r\n              .subscribe(data => {\r\n                this.rows = this.rows.map(i => {\r\n                  if (i.id === data.content.id) {\r\n                    console.log(\"------------------------------- ProductFilterTableComponent : recent obj - \" + JSON.stringify(data.content));\r\n                    return Object.assign({}, i, data.content);\r\n                  }\r\n                  return i;\r\n                });\r\n              });\r\n\r\n            this.loader.close();\r\n            return this.rows.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError(error);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  // getProductById(productId) {\r\n  //   this.prodService.getProductById(productId).subscribe(\r\n  //     response => {\r\n  //       this.recentProduct = response.content;\r\n  //       console.log(\r\n  //         \"recent product obj : \" + JSON.stringify(this.recentProduct)\r\n  //       );\r\n  //     },\r\n  //     error => {\r\n  //       this.loader.close();\r\n  //       this.errDialog.showError({\r\n  //         title: \"Error\",\r\n  //         status: error.status,\r\n  //         type: \"http_error\"\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n}\r\n\r\nexport class CSVDTO {\r\n  productDetails: any;\r\n  authenticationCode: any;\r\n\r\n  constructor(public proDetails: any, public authCodes: any) { }\r\n}\r\n"],"sourceRoot":""}