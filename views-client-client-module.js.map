{"version":3,"sources":["webpack:///./src/app/shared/helpers/countries.ts","webpack:///./src/app/views/client/client.component.html","webpack:///./src/app/views/client/client.component.ts","webpack:///./src/app/views/client/client.module.ts","webpack:///./src/app/views/client/client.routing.ts","webpack:///./src/app/views/client/client.service.ts","webpack:///./src/app/views/client/clients/client-category-popup/client-category-popup.component.html","webpack:///./src/app/views/client/clients/client-category-popup/client-category-popup.component.ts","webpack:///./src/app/views/client/clients/client-create-popup/client-create-popup.component.html","webpack:///./src/app/views/client/clients/client-create-popup/client-create-popup.component.ts","webpack:///./src/app/views/client/clients/client-license-update-popup/client-license-update-popup.component.html","webpack:///./src/app/views/client/clients/client-license-update-popup/client-license-update-popup.component.ts","webpack:///./src/app/views/client/clients/client-table.component.html","webpack:///./src/app/views/client/clients/client-table.component.ts","webpack:///./src/app/views/client/clients/client-update-popup/client-update-popup.component.html","webpack:///./src/app/views/client/clients/client-update-popup/client-update-popup.component.ts","webpack:///./src/app/views/client/clients/user/roles/role-table-popup/role-table-popup.component.html","webpack:///./src/app/views/client/clients/user/roles/role-table-popup/role-table-popup.component.ts","webpack:///./src/app/views/client/clients/user/roles/role-table.component.html","webpack:///./src/app/views/client/clients/user/roles/role-table.component.ts","webpack:///./src/app/views/client/clients/user/user-table/user-category-popup/user-category-popup.component.html","webpack:///./src/app/views/client/clients/user/user-table/user-category-popup/user-category-popup.component.ts","webpack:///./src/app/views/client/clients/user/user-table/user-community-popup/user-community-popup.component.html","webpack:///./src/app/views/client/clients/user/user-table/user-community-popup/user-community-popup.component.ts","webpack:///./src/app/views/client/clients/user/user-table/user-create-popup/user-create-popup.component.html","webpack:///./src/app/views/client/clients/user/user-table/user-create-popup/user-create-popup.component.ts","webpack:///./src/app/views/client/clients/user/user-table/user-table-popup/user-table-popup.component.html","webpack:///./src/app/views/client/clients/user/user-table/user-table-popup/user-table-popup.component.ts","webpack:///./src/app/views/client/clients/user/user-table/user-table.component.html","webpack:///./src/app/views/client/clients/user/user-table/user-table.component.ts","webpack:///./src/app/views/client/clients/user/user.component.html","webpack:///./src/app/views/client/clients/user/user.component.ts"],"names":[],"mappings":"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","file":"views-client-client-module.js","sourcesContent":["export class CountryDB {\r\n  public countries = [\r\n    { name: 'Afghanistan', code: 'AF' },\r\n    { name: 'Åland Islands', code: 'AX' },\r\n    { name: 'Albania', code: 'AL' },\r\n    { name: 'Algeria', code: 'DZ' },\r\n    { name: 'American Samoa', code: 'AS' },\r\n    { name: 'AndorrA', code: 'AD' },\r\n    { name: 'Angola', code: 'AO' },\r\n    { name: 'Anguilla', code: 'AI' },\r\n    { name: 'Antarctica', code: 'AQ' },\r\n    { name: 'Antigua and Barbuda', code: 'AG' },\r\n    { name: 'Argentina', code: 'AR' },\r\n    { name: 'Armenia', code: 'AM' },\r\n    { name: 'Aruba', code: 'AW' },\r\n    { name: 'Australia', code: 'AU' },\r\n    { name: 'Austria', code: 'AT' },\r\n    { name: 'Azerbaijan', code: 'AZ' },\r\n    { name: 'Bahamas', code: 'BS' },\r\n    { name: 'Bahrain', code: 'BH' },\r\n    { name: 'Bangladesh', code: 'BD' },\r\n    { name: 'Barbados', code: 'BB' },\r\n    { name: 'Belarus', code: 'BY' },\r\n    { name: 'Belgium', code: 'BE' },\r\n    { name: 'Belize', code: 'BZ' },\r\n    { name: 'Benin', code: 'BJ' },\r\n    { name: 'Bermuda', code: 'BM' },\r\n    { name: 'Bhutan', code: 'BT' },\r\n    { name: 'Bolivia', code: 'BO' },\r\n    { name: 'Bosnia and Herzegovina', code: 'BA' },\r\n    { name: 'Botswana', code: 'BW' },\r\n    { name: 'Bouvet Island', code: 'BV' },\r\n    { name: 'Brazil', code: 'BR' },\r\n    { name: 'British Indian Ocean Territory', code: 'IO' },\r\n    { name: 'Brunei Darussalam', code: 'BN' },\r\n    { name: 'Bulgaria', code: 'BG' },\r\n    { name: 'Burkina Faso', code: 'BF' },\r\n    { name: 'Burundi', code: 'BI' },\r\n    { name: 'Cambodia', code: 'KH' },\r\n    { name: 'Cameroon', code: 'CM' },\r\n    { name: 'Canada', code: 'CA' },\r\n    { name: 'Cape Verde', code: 'CV' },\r\n    { name: 'Cayman Islands', code: 'KY' },\r\n    { name: 'Central African Republic', code: 'CF' },\r\n    { name: 'Chad', code: 'TD' },\r\n    { name: 'Chile', code: 'CL' },\r\n    { name: 'China', code: 'CN' },\r\n    { name: 'Christmas Island', code: 'CX' },\r\n    { name: 'Cocos (Keeling) Islands', code: 'CC' },\r\n    { name: 'Colombia', code: 'CO' },\r\n    { name: 'Comoros', code: 'KM' },\r\n    { name: 'Congo', code: 'CG' },\r\n    { name: 'Congo, The Democratic Republic of the', code: 'CD' },\r\n    { name: 'Cook Islands', code: 'CK' },\r\n    { name: 'Costa Rica', code: 'CR' },\r\n    { name: 'Cote D\\'Ivoire', code: 'CI' },\r\n    { name: 'Croatia', code: 'HR' },\r\n    { name: 'Cuba', code: 'CU' },\r\n    { name: 'Cyprus', code: 'CY' },\r\n    { name: 'Czech Republic', code: 'CZ' },\r\n    { name: 'Denmark', code: 'DK' },\r\n    { name: 'Djibouti', code: 'DJ' },\r\n    { name: 'Dominica', code: 'DM' },\r\n    { name: 'Dominican Republic', code: 'DO' },\r\n    { name: 'Ecuador', code: 'EC' },\r\n    { name: 'Egypt', code: 'EG' },\r\n    { name: 'El Salvador', code: 'SV' },\r\n    { name: 'Equatorial Guinea', code: 'GQ' },\r\n    { name: 'Eritrea', code: 'ER' },\r\n    { name: 'Estonia', code: 'EE' },\r\n    { name: 'Ethiopia', code: 'ET' },\r\n    { name: 'Falkland Islands (Malvinas)', code: 'FK' },\r\n    { name: 'Faroe Islands', code: 'FO' },\r\n    { name: 'Fiji', code: 'FJ' },\r\n    { name: 'Finland', code: 'FI' },\r\n    { name: 'France', code: 'FR' },\r\n    { name: 'French Guiana', code: 'GF' },\r\n    { name: 'French Polynesia', code: 'PF' },\r\n    { name: 'French Southern Territories', code: 'TF' },\r\n    { name: 'Gabon', code: 'GA' },\r\n    { name: 'Gambia', code: 'GM' },\r\n    { name: 'Georgia', code: 'GE' },\r\n    { name: 'Germany', code: 'DE' },\r\n    { name: 'Ghana', code: 'GH' },\r\n    { name: 'Gibraltar', code: 'GI' },\r\n    { name: 'Greece', code: 'GR' },\r\n    { name: 'Greenland', code: 'GL' },\r\n    { name: 'Grenada', code: 'GD' },\r\n    { name: 'Guadeloupe', code: 'GP' },\r\n    { name: 'Guam', code: 'GU' },\r\n    { name: 'Guatemala', code: 'GT' },\r\n    { name: 'Guernsey', code: 'GG' },\r\n    { name: 'Guinea', code: 'GN' },\r\n    { name: 'Guinea-Bissau', code: 'GW' },\r\n    { name: 'Guyana', code: 'GY' },\r\n    { name: 'Haiti', code: 'HT' },\r\n    { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\r\n    { name: 'Holy See (Vatican City State)', code: 'VA' },\r\n    { name: 'Honduras', code: 'HN' },\r\n    { name: 'Hong Kong', code: 'HK' },\r\n    { name: 'Hungary', code: 'HU' },\r\n    { name: 'Iceland', code: 'IS' },\r\n    { name: 'India', code: 'IN' },\r\n    { name: 'Indonesia', code: 'ID' },\r\n    { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n    { name: 'Iraq', code: 'IQ' },\r\n    { name: 'Ireland', code: 'IE' },\r\n    { name: 'Isle of Man', code: 'IM' },\r\n    { name: 'Israel', code: 'IL' },\r\n    { name: 'Italy', code: 'IT' },\r\n    { name: 'Jamaica', code: 'JM' },\r\n    { name: 'Japan', code: 'JP' },\r\n    { name: 'Jersey', code: 'JE' },\r\n    { name: 'Jordan', code: 'JO' },\r\n    { name: 'Kazakhstan', code: 'KZ' },\r\n    { name: 'Kenya', code: 'KE' },\r\n    { name: 'Kiribati', code: 'KI' },\r\n    { name: 'Korea, Democratic People\\'S Republic of', code: 'KP' },\r\n    { name: 'Korea, Republic of', code: 'KR' },\r\n    { name: 'Kuwait', code: 'KW' },\r\n    { name: 'Kyrgyzstan', code: 'KG' },\r\n    { name: 'Lao People\\'S Democratic Republic', code: 'LA' },\r\n    { name: 'Latvia', code: 'LV' },\r\n    { name: 'Lebanon', code: 'LB' },\r\n    { name: 'Lesotho', code: 'LS' },\r\n    { name: 'Liberia', code: 'LR' },\r\n    { name: 'Libyan Arab Jamahiriya', code: 'LY' },\r\n    { name: 'Liechtenstein', code: 'LI' },\r\n    { name: 'Lithuania', code: 'LT' },\r\n    { name: 'Luxembourg', code: 'LU' },\r\n    { name: 'Macao', code: 'MO' },\r\n    { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\r\n    { name: 'Madagascar', code: 'MG' },\r\n    { name: 'Malawi', code: 'MW' },\r\n    { name: 'Malaysia', code: 'MY' },\r\n    { name: 'Maldives', code: 'MV' },\r\n    { name: 'Mali', code: 'ML' },\r\n    { name: 'Malta', code: 'MT' },\r\n    { name: 'Marshall Islands', code: 'MH' },\r\n    { name: 'Martinique', code: 'MQ' },\r\n    { name: 'Mauritania', code: 'MR' },\r\n    { name: 'Mauritius', code: 'MU' },\r\n    { name: 'Mayotte', code: 'YT' },\r\n    { name: 'Mexico', code: 'MX' },\r\n    { name: 'Micronesia, Federated States of', code: 'FM' },\r\n    { name: 'Moldova, Republic of', code: 'MD' },\r\n    { name: 'Monaco', code: 'MC' },\r\n    { name: 'Mongolia', code: 'MN' },\r\n    { name: 'Montserrat', code: 'MS' },\r\n    { name: 'Morocco', code: 'MA' },\r\n    { name: 'Mozambique', code: 'MZ' },\r\n    { name: 'Myanmar', code: 'MM' },\r\n    { name: 'Namibia', code: 'NA' },\r\n    { name: 'Nauru', code: 'NR' },\r\n    { name: 'Nepal', code: 'NP' },\r\n    { name: 'Netherlands', code: 'NL' },\r\n    { name: 'Netherlands Antilles', code: 'AN' },\r\n    { name: 'New Caledonia', code: 'NC' },\r\n    { name: 'New Zealand', code: 'NZ' },\r\n    { name: 'Nicaragua', code: 'NI' },\r\n    { name: 'Niger', code: 'NE' },\r\n    { name: 'Nigeria', code: 'NG' },\r\n    { name: 'Niue', code: 'NU' },\r\n    { name: 'Norfolk Island', code: 'NF' },\r\n    { name: 'Northern Mariana Islands', code: 'MP' },\r\n    { name: 'Norway', code: 'NO' },\r\n    { name: 'Oman', code: 'OM' },\r\n    { name: 'Pakistan', code: 'PK' },\r\n    { name: 'Palau', code: 'PW' },\r\n    { name: 'Palestinian Territory, Occupied', code: 'PS' },\r\n    { name: 'Panama', code: 'PA' },\r\n    { name: 'Papua New Guinea', code: 'PG' },\r\n    { name: 'Paraguay', code: 'PY' },\r\n    { name: 'Peru', code: 'PE' },\r\n    { name: 'Philippines', code: 'PH' },\r\n    { name: 'Pitcairn', code: 'PN' },\r\n    { name: 'Poland', code: 'PL' },\r\n    { name: 'Portugal', code: 'PT' },\r\n    { name: 'Puerto Rico', code: 'PR' },\r\n    { name: 'Qatar', code: 'QA' },\r\n    { name: 'Reunion', code: 'RE' },\r\n    { name: 'Romania', code: 'RO' },\r\n    { name: 'Russian Federation', code: 'RU' },\r\n    { name: 'RWANDA', code: 'RW' },\r\n    { name: 'Saint Helena', code: 'SH' },\r\n    { name: 'Saint Kitts and Nevis', code: 'KN' },\r\n    { name: 'Saint Lucia', code: 'LC' },\r\n    { name: 'Saint Pierre and Miquelon', code: 'PM' },\r\n    { name: 'Saint Vincent and the Grenadines', code: 'VC' },\r\n    { name: 'Samoa', code: 'WS' },\r\n    { name: 'San Marino', code: 'SM' },\r\n    { name: 'Sao Tome and Principe', code: 'ST' },\r\n    { name: 'Saudi Arabia', code: 'SA' },\r\n    { name: 'Senegal', code: 'SN' },\r\n    { name: 'Serbia and Montenegro', code: 'CS' },\r\n    { name: 'Seychelles', code: 'SC' },\r\n    { name: 'Sierra Leone', code: 'SL' },\r\n    { name: 'Singapore', code: 'SG' },\r\n    { name: 'Slovakia', code: 'SK' },\r\n    { name: 'Slovenia', code: 'SI' },\r\n    { name: 'Solomon Islands', code: 'SB' },\r\n    { name: 'Somalia', code: 'SO' },\r\n    { name: 'South Africa', code: 'ZA' },\r\n    { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\r\n    { name: 'Spain', code: 'ES' },\r\n    { name: 'Sri Lanka', code: 'LK' },\r\n    { name: 'Sudan', code: 'SD' },\r\n    { name: 'Suriname', code: 'SR' },\r\n    { name: 'Svalbard and Jan Mayen', code: 'SJ' },\r\n    { name: 'Swaziland', code: 'SZ' },\r\n    { name: 'Sweden', code: 'SE' },\r\n    { name: 'Switzerland', code: 'CH' },\r\n    { name: 'Syrian Arab Republic', code: 'SY' },\r\n    { name: 'Taiwan, Province of China', code: 'TW' },\r\n    { name: 'Tajikistan', code: 'TJ' },\r\n    { name: 'Tanzania, United Republic of', code: 'TZ' },\r\n    { name: 'Thailand', code: 'TH' },\r\n    { name: 'Timor-Leste', code: 'TL' },\r\n    { name: 'Togo', code: 'TG' },\r\n    { name: 'Tokelau', code: 'TK' },\r\n    { name: 'Tonga', code: 'TO' },\r\n    { name: 'Trinidad and Tobago', code: 'TT' },\r\n    { name: 'Tunisia', code: 'TN' },\r\n    { name: 'Turkey', code: 'TR' },\r\n    { name: 'Turkmenistan', code: 'TM' },\r\n    { name: 'Turks and Caicos Islands', code: 'TC' },\r\n    { name: 'Tuvalu', code: 'TV' },\r\n    { name: 'Uganda', code: 'UG' },\r\n    { name: 'Ukraine', code: 'UA' },\r\n    { name: 'United Arab Emirates', code: 'AE' },\r\n    { name: 'United Kingdom', code: 'GB' },\r\n    { name: 'United States', code: 'US' },\r\n    { name: 'United States Minor Outlying Islands', code: 'UM' },\r\n    { name: 'Uruguay', code: 'UY' },\r\n    { name: 'Uzbekistan', code: 'UZ' },\r\n    { name: 'Vanuatu', code: 'VU' },\r\n    { name: 'Venezuela', code: 'VE' },\r\n    { name: 'Viet Nam', code: 'VN' },\r\n    { name: 'Virgin Islands, British', code: 'VG' },\r\n    { name: 'Virgin Islands, U.S.', code: 'VI' },\r\n    { name: 'Wallis and Futuna', code: 'WF' },\r\n    { name: 'Western Sahara', code: 'EH' },\r\n    { name: 'Yemen', code: 'YE' },\r\n    { name: 'Zambia', code: 'ZM' },\r\n    { name: 'Zimbabwe', code: 'ZW' }\r\n  ]\r\n}","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n  <!-- <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\r\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\r\\n      <div class=\\\"propic text-center\\\">\\r\\n        <img src=\\\"assets/images/ui_icons/users.png\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n      <div class=\\\"profile-title text-center mb-1\\\">\\r\\n        <div class=\\\"main-title\\\">Clients</div>\\r\\n        <div class=\\\"subtitle mb-05\\\">ClearPicture</div>\\r\\n        <div class=\\\"text-muted\\\"> Provides the tools you need to easily manage Users.</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"profile-nav\\\">\\r\\n        <mat-nav-list>\\r\\n          <mat-list-item routerLink=\\\"/clients/client-table\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>person</mat-icon>\\r\\n            Clients\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n          <mat-list-item routerLink=\\\"/clients/role-table\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n            User Roles\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n        </mat-nav-list>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n  </div> -->\\r\\n\\r\\n  <!-- Profile Views -->\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-md=\\\"calc(100% - 300px)\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { egretAnimations } from '../../shared/animations/egret-animations';\r\nimport { NavigationExtras, Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  animations: egretAnimations\r\n})\r\nexport class ClientComponent implements OnInit {\r\n\r\n constructor( private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    // this.router.navigate([\"clients/client-table\"]);\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ClientComponent } from \"./client.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { ClientRoute } from \"./client.routing\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatListModule,\r\n  MatExpansionModule,\r\n  MatButtonToggleModule,\r\n  MatSidenavModule,\r\n  MatStepperModule,\r\n  MatToolbarModule,\r\n  MatOptionModule,\r\n  MatCheckboxModule,\r\n  MatTabsModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatAutocompleteModule\r\n} from \"@angular/material\";\r\nimport { NgxIntlTelInputModule } from 'ngx-intl-tel-input';\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { ClientService } from \"./client.service\";\r\nimport { ClientTableComponent } from './clients/client-table.component';\r\nimport { ClientUpdatePopupComponent } from './clients/client-update-popup/client-update-popup.component';\r\nimport { ClientCreatePopupComponent } from './clients/client-create-popup/client-create-popup.component';\r\nimport { ClientCategoryPopupComponent } from './clients/client-category-popup/client-category-popup.component';\r\nimport { ClientLicenseUpdatePopupComponent } from './clients/client-license-update-popup/client-license-update-popup.component';\r\nimport { UserComponent } from './clients/user/user.component';\r\nimport { UserTableComponent } from './clients/user/user-table/user-table.component';\r\nimport { UserCreatePopupComponent } from './clients/user/user-table/user-create-popup/user-create-popup.component';\r\nimport { UserTablePopupComponent } from './clients/user/user-table/user-table-popup/user-table-popup.component';\r\nimport { RoleTableComponent } from './clients/user/roles/role-table.component';\r\nimport { RoleTablePopupComponent } from './clients/user/roles/role-table-popup/role-table-popup.component';\r\nimport { UserCommunityPopupComponent } from './clients/user/user-table/user-community-popup/user-community-popup.component';\r\nimport { UserCategoryPopupComponent } from './clients/user/user-table/user-category-popup/user-category-popup.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatSidenavModule,\r\n    RouterModule.forChild(ClientRoute),\r\n    SharedModule,\r\n    MatStepperModule,\r\n    MatToolbarModule,\r\n    MatOptionModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatAutocompleteModule,\r\n    NgxIntlTelInputModule,\r\n  ],\r\n  declarations: [\r\n    ClientComponent,\r\n    ClientComponent,\r\n    ClientTableComponent,\r\n    ClientCreatePopupComponent,\r\n    ClientCategoryPopupComponent,\r\n    ClientUpdatePopupComponent,\r\n    ClientLicenseUpdatePopupComponent,\r\n    UserComponent,\r\n    UserTableComponent,\r\n    UserCreatePopupComponent,\r\n    UserTablePopupComponent,\r\n    RoleTableComponent,\r\n    RoleTablePopupComponent,\r\n    UserCommunityPopupComponent,\r\n    UserCategoryPopupComponent\r\n  ],\r\n  entryComponents: [\r\n    ClientCreatePopupComponent,\r\n    ClientCategoryPopupComponent,\r\n    ClientUpdatePopupComponent,\r\n    ClientLicenseUpdatePopupComponent,\r\n    UserCreatePopupComponent,\r\n    UserTablePopupComponent,\r\n    RoleTablePopupComponent,\r\n    UserCommunityPopupComponent,\r\n    UserCategoryPopupComponent\r\n  ],\r\n  providers: [ClientService]\r\n})\r\nexport class ClientModule { }\r\n","import { Routes } from \"@angular/router\";\r\nimport { ClientComponent } from \"./client.component\";\r\nimport { ClientTableComponent } from \"./clients/client-table.component\";\r\nimport { UserComponent } from \"./clients/user/user.component\";\r\nimport { UserTableComponent } from \"./clients/user/user-table/user-table.component\";\r\nimport { RoleTableComponent } from \"./clients/user/roles/role-table.component\";\r\n\r\nexport const ClientRoute: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ClientComponent,\r\n    children: [\r\n      {\r\n        path: \"client-table\",\r\n        component: ClientTableComponent,\r\n        data: { title: \"Clients\", breadcrumb: \"Clients\" }\r\n      },\r\n      {\r\n        path: \"user\",\r\n        component: UserComponent,\r\n        data: { title: \"Users\", breadcrumb: \"Users\" },\r\n        children: [\r\n          {\r\n            path: \"user-table\",\r\n            component: UserTableComponent,\r\n            data: { title: \"Users\", breadcrumb: \"Users\" }\r\n          },\r\n          {\r\n            path: \"role-table\",\r\n            component: RoleTableComponent,\r\n            data: { title: \"Roles\", breadcrumb: \"Roles\" }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: \"role-table\",\r\n        component: RoleTableComponent,\r\n        data: { title: \"Roles\", breadcrumb: \"Roles\" }\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment.prod';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n  clientUrl: string = environment.userApiUrl + \"clients\";\r\n  specsUrl: string = environment.userApiUrl + \"spec\";\r\n  licenseUrl: string = this.clientUrl + \"/license\";\r\n  userUrl: string = environment.userApiUrl + \"platform-users\";\r\n  roleUrl: string = environment.userApiUrl + \"platform-user-roles\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getClients(): Observable<any> {\r\n    return this.http.get(this.clientUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getClientsSuggestions() : Observable<any>{\r\n    return this.http.get(this.clientUrl + \"/suggestions\").pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getUsers(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getRoles(): Observable<any> {\r\n    return this.http.get(this.roleUrl + \"/suggestions\").pipe(catchError(this.handleError));\r\n  }\r\n  getCategory(): Observable<any> {\r\n    return this.http.get(this.specsUrl + \"/categories\").pipe(catchError(this.handleError));\r\n  }\r\n  getClientCategories(id){\r\n    return this.http.get(this.clientUrl + \"/categories/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  addClient(item): Observable<any> {\r\n    return this.http.post<any>(this.clientUrl, item).pipe(\r\n      map(data => {\r\n        // console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getClient(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClient(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientLicense(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.licenseUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addUser(item): Observable<any> {\r\n    return this.http.post<any>(this.userUrl, item).pipe(\r\n      map(data => {\r\n        console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateUser(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  * Create New User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  createNewRole(roleObj) {\r\n    return this.http.post(this.roleUrl, roleObj)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Update New User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  updateRloe(roleId, roleObj) {\r\n    return this.http.put(this.roleUrl + '/' + roleId, roleObj)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get All User Role From Data Base\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllUserRoles(): any {\r\n    return this.http.get(this.roleUrl)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get All Authorities From Data Base\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllAuthorities(): any {\r\n    return this.http.get(environment.userApiUrl + 'platform-authorities')\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get Role Assign Authorities\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getOneRoleAuthorities(roleId): any {\r\n    return this.http.get(this.roleUrl + '/' + roleId)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    // console.log(error);\r\n    if (error.status !== 401) {\r\n      return throwError(error);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <span class=\\\"title dialog-title\\\">Category</span>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n  <mat-form-field class=\\\"matAutocomplete-chip-list\\\">\\r\\n    <mat-chip-list #chipList>\\r\\n      <mat-chip *ngFor=\\\"let category of categories\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n        (removed)=\\\"remove(category)\\\">\\r\\n        {{category}}\\r\\n        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n      </mat-chip>\\r\\n      <input placeholder=\\\"Select category...\\\" #categoryInput [formControl]=\\\"categoryCtrl\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n        [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" (matChipInputTokenEnd)=\\\"add($event)\\\"\\r\\n        [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n    </mat-chip-list>\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n        <mat-option *ngFor=\\\"let category of filteredCategories | async; let i = index\\\" [value]=\\\"categoriesObj[i].id\\\">\\r\\n        {{category}}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\">Save</button>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</mat-dialog-content>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { ElementRef, ViewChild } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client-category-popup',\r\n  templateUrl: './client-category-popup.component.html'\r\n})\r\nexport class ClientCategoryPopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public roles: any[];\r\n  public formStatus = false;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  categoryCtrl = new FormControl();\r\n  filteredCategories: Observable<string[]>;\r\n  categories: string[] = [];\r\n  categoriesValue: string[] = [];\r\n  allCategories: string[] = [];\r\n  public categoriesObj;\r\n\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ClientCategoryPopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.filteredCategories = this.categoryCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((category: string | null) => category ? this._filter(category) : this.allCategories.slice()));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.categoriesObj = this.data.category;\r\n    this.categoriesObj.forEach(element => {\r\n      this.allCategories.push(element.name);\r\n    });\r\n    this.data.selectedCategory.content.forEach(element => {\r\n      this.categories.push(element.name);\r\n      this.categoriesValue.push(element.id);\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n\r\n\r\n  add(event: MatChipInputEvent): void {\r\n\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // if we need to add custom texts as Chips,\r\n      // Add our category\r\n      // if ((value || '').trim()) {\r\n      //   this.categories.push(value.trim());\r\n      // }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.categoryCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(category: string): void {\r\n    const index = this.categories.indexOf(category);\r\n\r\n    if (index >= 0) {\r\n      this.categories.splice(index, 1);\r\n      this.categoriesValue.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.categories.push(event.option.viewValue);\r\n    this.categoriesValue.push(event.option.value);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.categoryCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allCategories.filter(category => category.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <span class=\\\"title dialog-title\\\">Create Client</span>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<mat-dialog-content class=\\\"mat-typography mt-1\\\" id=\\\"client-create\\\">\\r\\n\\r\\n\\r\\n  <mat-horizontal-stepper [linear]=\\\"true\\\">\\r\\n\\r\\n    <mat-step [stepControl]=\\\"clientFormGroup\\\">\\r\\n\\r\\n      <form [formGroup]=\\\"clientFormGroup\\\">\\r\\n\\r\\n        <ng-template matStepLabel>Client</ng-template>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"clientName\\\" letterOnly placeholder=\\\"Name\\\"\\r\\n                [formControl]=\\\"clientFormGroup.controls['name']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <textarea matInput name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n                [formControl]=\\\"clientFormGroup.controls['description']\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n    <mat-step [stepControl]=\\\"profilePicFormGroup\\\">\\r\\n      <form [formGroup]=\\\"profilePicFormGroup\\\">\\r\\n        <ng-template matStepLabel>Profile Picture</ng-template>\\r\\n\\r\\n        <!-- --------- hidden file input --------- -->\\r\\n        <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" style=\\\"display: none\\\"\\r\\n          [formControl]=\\\"profilePicFormGroup.controls['profilePic']\\\" base-sixty-four-input>\\r\\n\\r\\n\\r\\n        <!-- --------- file input click button --------- -->\\r\\n        <div layout-margin layout-padding>\\r\\n          <button mat-raised-button class=\\\"mr-1 mb-1\\\" (click)=\\\"productImgs.click()\\\" type=\\\"button\\\">\\r\\n            Browse Images</button>\\r\\n        </div>\\r\\n\\r\\n        <!-- --------- start images preview container --------- -->\\r\\n        <div id=\\\"client_create_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n          <!-- --------- start card --------- -->\\r\\n          <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngIf=\\\"url\\\" fxFlex=\\\"100\\\" style=\\\"display: flex;\\\">\\r\\n            <mat-card class=\\\"p-0\\\">\\r\\n\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n                <span fxFlex></span>\\r\\n                <button type=\\\"button\\\" class=\\\"close p-1\\\" aria-label=\\\"Close\\\" (click)=\\\"removeSelectedImg()\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n              </div>\\r\\n\\r\\n              <img [src]=\\\"url\\\">\\r\\n            </mat-card>\\r\\n          </div>\\r\\n          <!-- --------- end card --------- -->\\r\\n\\r\\n        </div>\\r\\n        <!-- --------- end images preview container --------- -->\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious class=\\\"mr-1\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n    <mat-step [stepControl]=\\\"adminFormGroup\\\">\\r\\n      <form [formGroup]=\\\"adminFormGroup\\\">\\r\\n        <ng-template matStepLabel>Admin User</ng-template>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"username\\\" positiveNumberAndLetterOnly placeholder=\\\"Username\\\"\\r\\n                [formControl]=\\\"adminFormGroup.controls['username']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1 mb-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"email\\\" placeholder=\\\"Email\\\" [formControl]=\\\"adminFormGroup.controls['email']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious class=\\\"mr-1\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step [stepControl]=\\\"categoryFormGroup\\\">\\r\\n      <form [formGroup]=\\\"categoryFormGroup\\\">\\r\\n        <ng-template matStepLabel>Category</ng-template>\\r\\n\\r\\n        <mat-form-field class=\\\"matAutocomplete-chip-list\\\">\\r\\n          <mat-chip-list #chipList>\\r\\n            <mat-chip *ngFor=\\\"let category of categories\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n              (removed)=\\\"remove(category)\\\">\\r\\n              {{category}}\\r\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n            </mat-chip>\\r\\n            <input placeholder=\\\"Select category...\\\" #categoryInput [formControl]=\\\"categoryFormGroup.controls['category']\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n              [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" (matChipInputTokenEnd)=\\\"add($event)\\\"\\r\\n              [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n          </mat-chip-list>\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let category of filteredCategories | async; let i = index\\\" [value]=\\\"categoriesObj[i].id\\\">\\r\\n              {{category}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious class=\\\"mr-1\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step [stepControl]=\\\"licenseFormGroup\\\">\\r\\n      <form [formGroup]=\\\"licenseFormGroup\\\">\\r\\n        <ng-template matStepLabel>License</ng-template>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          \\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"tagCount\\\" placeholder=\\\"Tag Count\\\" positiveNumberOnly\\r\\n                [formControl]=\\\"licenseFormGroup.controls['tagCount']\\\">\\r\\n            </mat-form-field>\\r\\n            <span *ngIf=\\\"licenseFormGroup.controls['tagCount'].hasError('max')\\\" class=\\\"form-error-msg\\\">\\r\\n              {{this.license.tagCount}} max ! </span>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"userCount\\\" placeholder=\\\"User Count\\\" positiveNumberOnly\\r\\n                [formControl]=\\\"licenseFormGroup.controls['userCount']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"comunityCount\\\" placeholder=\\\"Comunity Count\\\" positiveNumberOnly\\r\\n                [formControl]=\\\"licenseFormGroup.controls['comunityCount']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"feedbackCount\\\" placeholder=\\\"Feedback Count\\\" positiveNumberOnly\\r\\n                [formControl]=\\\"licenseFormGroup.controls['feedbackCount']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"eventkCount\\\" placeholder=\\\"Event Count\\\" positiveNumberOnly\\r\\n                [formControl]=\\\"licenseFormGroup.controls['eventCount']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"promoCount\\\" placeholder=\\\"Promo Count\\\" positiveNumberOnly\\r\\n                [formControl]=\\\"licenseFormGroup.controls['promoCount']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious class=\\\"mr-1\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Submit</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n  </mat-horizontal-stepper>\\r\\n\\r\\n\\r\\n</mat-dialog-content>\"","import { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar, MatAutocomplete, MatChipInputEvent, MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { egretAnimations } from \"../../../../shared/animations/egret-animations\";\r\nimport { GlobalVariable } from \"../../../../shared/helpers/global-variable\";\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client-create-popup',\r\n  templateUrl: './client-create-popup.component.html',\r\n  animations: egretAnimations,\r\n})\r\nexport class ClientCreatePopupComponent implements OnInit {\r\n\r\n  public globalVariable: GlobalVariable = new GlobalVariable();\r\n  public license = this.globalVariable.client.license;\r\n  public regex = this.globalVariable.validators.regex;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  categoryCtrl = new FormControl();\r\n  filteredCategories: Observable<string[]>;\r\n  categories: string[] = [];\r\n  categoriesValue: string[] = [];\r\n  allCategories: string[] = [];\r\n\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n\r\n  public clientFormGroup: FormGroup;\r\n  public profilePicFormGroup: FormGroup;\r\n  public adminFormGroup: FormGroup;\r\n  public categoryFormGroup: FormGroup;\r\n  public licenseFormGroup: FormGroup;\r\n  public formStatus = false;\r\n  url;\r\n\r\n  public categoriesObj;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ClientCreatePopupComponent>,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) {\r\n    this.filteredCategories = this.categoryCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((category: string | null) => category ? this._filter(category) : this.allCategories.slice()));\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.categoriesObj = this.data.category;\r\n    this.categoriesObj.forEach(element => {\r\n      this.allCategories.push(element.name);\r\n    });\r\n\r\n    this.buildItemForm()\r\n  }\r\n\r\n  buildItemForm() {\r\n    \r\n    // this.clientFormGroup = this.fb.group({\r\n    //   name: [''],\r\n    //   description: ['']\r\n    // });\r\n    // this.profilePicFormGroup = this.fb.group({\r\n    //   profilePic: [\"\"]\r\n    // });\r\n    // this.adminFormGroup = this.fb.group({\r\n    //   username: [''],\r\n    //   email: ['']\r\n    // });\r\n    \r\n    this.clientFormGroup = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(this.regex._Letter)]],\r\n      description: ['', Validators.required]\r\n    });\r\n    this.profilePicFormGroup = this.fb.group({\r\n      profilePic: [\"\", Validators.required]\r\n    });\r\n    this.adminFormGroup = this.fb.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n    this.categoryFormGroup = this.fb.group({\r\n      category: this.categoryCtrl\r\n    });\r\n    this.licenseFormGroup = this.fb.group({\r\n      tagCount: ['', Validators.required],\r\n      userCount: ['', Validators.required],\r\n      comunityCount: ['', Validators.required],\r\n      feedbackCount: ['', Validators.required],\r\n      eventCount: ['', Validators.required],\r\n      promoCount: ['', Validators.required]\r\n    });\r\n    // promoCount: ['', Validators.required, Validators.max(this.license.promoCount), Validators.min(0)], Validators.pattern(this.regex._PosNumber)]\r\n\r\n  }\r\n\r\n  submit() {\r\n    let forms = [this.clientFormGroup.value, this.url, this.adminFormGroup.value, this.licenseFormGroup.value, this.categoriesValue];\r\n    this.dialogRef.close(forms);\r\n  }\r\n\r\n\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n\r\n      let file = event.dataTransfer ? event.dataTransfer.files[0] : event.target.files[0];\r\n      let pattern = /image-*/;\r\n      let reader = new FileReader();\r\n      if (!file.type.match(pattern)) {\r\n        this.snackBar.open(\r\n          \"Invalid Format!\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n        return;\r\n      }\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n    } else {\r\n      this.snackBar.open(\r\n        \"Can't upload\",\r\n        \"close\",\r\n        { duration: 2000 }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  removeSelectedImg() {\r\n    this.url = null;\r\n  }\r\n  \r\n  add(event: MatChipInputEvent): void {\r\n\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // if we need to add custom texts as Chips,\r\n      // Add our category\r\n      // if ((value || '').trim()) {\r\n      //   this.categories.push(value.trim());\r\n      // }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.categoryCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(category: string): void {\r\n    const index = this.categories.indexOf(category);\r\n    if (index >= 0) {\r\n      this.categories.splice(index, 1);\r\n      this.categoriesValue.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.categories.push(event.option.viewValue);\r\n    this.categoriesValue.push(event.option.value);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.categoryCtrl.setValue(null);\r\n    \r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.allCategories.filter(category => category.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<form [formGroup]=\\\"licenseFormGroup\\\" (ngSubmit)=\\\"submit()\\\" id=\\\"client-update\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">Update Client</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"tagCount\\\" placeholder=\\\"Tag Count\\\" positiveNumberOnly\\r\\n            [formControl]=\\\"licenseFormGroup.controls['tagCount']\\\">\\r\\n        </mat-form-field>\\r\\n        <span *ngIf=\\\"licenseFormGroup.controls['tagCount'].hasError('max')\\\" class=\\\"form-error-msg\\\">\\r\\n          {{this.license.tagCount}} max ! </span>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"userCount\\\" placeholder=\\\"User Count\\\" positiveNumberOnly\\r\\n            [formControl]=\\\"licenseFormGroup.controls['userCount']\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"communityCount\\\" placeholder=\\\"Community Count\\\" positiveNumberOnly\\r\\n            [formControl]=\\\"licenseFormGroup.controls['communityCount']\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"feedbackCount\\\" placeholder=\\\"Feedback Count\\\" positiveNumberOnly\\r\\n            [formControl]=\\\"licenseFormGroup.controls['feedbackCount']\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"eventkCount\\\" placeholder=\\\"Event Count\\\" positiveNumberOnly\\r\\n            [formControl]=\\\"licenseFormGroup.controls['eventCount']\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"promoCount\\\" placeholder=\\\"Promo Count\\\" positiveNumberOnly\\r\\n            [formControl]=\\\"licenseFormGroup.controls['promoCount']\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-card-footer>\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"licenseFormGroup.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-footer>\\r\\n\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar, MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { egretAnimations } from \"../../../../shared/animations/egret-animations\";\r\nimport { GlobalVariable } from 'app/shared/helpers/global-variable';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client-license-update-popup',\r\n  templateUrl: './client-license-update-popup.component.html',\r\n  animations: egretAnimations,\r\n})\r\nexport class ClientLicenseUpdatePopupComponent implements OnInit {\r\n  \r\n  public globalVariable: GlobalVariable = new GlobalVariable();\r\n  public license = this.globalVariable.client.license;\r\n  public regex = this.globalVariable.validators.regex;\r\n\r\n  public licenseFormGroup: FormGroup;\r\n  public formStatus = false;\r\n  public url;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ClientLicenseUpdatePopupComponent>,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload.license)\r\n  }\r\n\r\n  buildItemForm(item) {\r\n\r\n    console.log(item);\r\n    \r\n    this.licenseFormGroup = this.fb.group({\r\n      tagCount: [item.tagCount || '', Validators.required],\r\n      userCount: [item.userCount || '', Validators.required],\r\n      communityCount: [item.communityCount || '', Validators.required],\r\n      feedbackCount: [item.feedbackCount || '', Validators.required],\r\n      eventCount: [item.eventCount || '', Validators.required],\r\n      promoCount: [item.promoCount || '', Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.licenseFormGroup.value);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"card-title-text\\\">Clients</div>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <div class=\\\"m-333\\\">\\r\\n      <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"clientCreatePopUp()\\\">Add Client</button>\\r\\n      <span fxFlex></span>\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"clients\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n      <ngx-datatable-column name=\\\"Name\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Status\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <mat-chip mat-sm-chip color=\\\"{{statusArray[row?.status].style}}\\\" [selected]=\\\"true\\\">\\r\\n            {{statusArray[row?.status].status}}</mat-chip>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\"  [maxWidth]=\\\"80\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n\\r\\n          <!-- <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"navigateUserTable(row)\\\">\\r\\n            <mat-icon>list</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openPopUp(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button> -->\\r\\n          <!-- <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteItem(row)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button> -->\\r\\n\\r\\n          <button class=\\\"card-control\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <mat-icon>more_vert</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item (click)=\\\"navigateUserTable(row)\\\"><mat-icon>list</mat-icon>View</button>\\r\\n            <button mat-menu-item (click)=\\\"clientUpdatePopUp(row)\\\"><mat-icon>edit</mat-icon>Edit</button>\\r\\n            <button mat-menu-item (click)=\\\"openlicensePopUp(row)\\\"><mat-icon>edit</mat-icon>License</button>\\r\\n            <button mat-menu-item (click)=\\\"openCategoryPopUp(row)\\\"><mat-icon>assignment_ind</mat-icon><span>Category</span></button>\\r\\n            <button mat-menu-item (click)=\\\"openPopUp(row)\\\"><mat-icon>delete</mat-icon>Delete</button>\\r\\n          </mat-menu>\\r\\n\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ClientService } from \"../client.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { ClientUpdatePopupComponent } from \"./client-update-popup/client-update-popup.component\";\r\nimport { ClientCreatePopupComponent } from \"./client-create-popup/client-create-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { NavigationExtras, Router } from \"@angular/router\";\r\nimport { ClientCreateReq, UserData, ClientUpdateReq, ClientLicenseData, CountryData, ClientData, LicenseUpdateReq, CategoryData } from \"app/model/ClientModel.model\";\r\nimport { authProperties } from './../../../shared/services/auth/auth-properties';\r\nimport * as jwt_decode from \"jwt-decode\";\r\nimport { ClientCategoryPopupComponent } from './client-category-popup/client-category-popup.component';\r\nimport { ClientLicenseUpdatePopupComponent } from './client-license-update-popup/client-license-update-popup.component';\r\n\r\n@Component({\r\n  selector: \"app-client-table\",\r\n  templateUrl: \"./client-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\n\r\nexport class ClientTableComponent implements OnInit, OnDestroy {\r\n\r\n  public clients: any[];\r\n  public category: any[];\r\n  public statusArray = {\r\n    'A': { status: \"Active\", style: \"primary\" },\r\n    'I': { status: \"Inactive\", style: \"accent\" }\r\n  };\r\n\r\n  public pageSize = 10;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getClients();\r\n    this.getCategory();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getClients() {\r\n    this.getItemSub = this.clientService.getClients().subscribe(successResp => {\r\n      this.clients = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCategory() {\r\n    this.getItemSub = this.clientService.getCategory().subscribe(successResp => {\r\n      this.category = successResp.content;\r\n      console.log(this.category);\r\n\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  clientUpdatePopUp(data: any = {}) {\r\n\r\n    this.clientService.getClient(data.id).subscribe(successResp => {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n        ClientUpdatePopupComponent,\r\n        {\r\n          width: \"720px\",\r\n          disableClose: true,\r\n          data: { payload: successResp.content }\r\n        }\r\n      );\r\n\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        if (!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n        console.log(res);\r\n\r\n        this.loader.open();\r\n        const country: CountryData = new CountryData('a65715e919d0995f361360cf0b8c2c03', 'Åland Islands', 'AX');\r\n        const req: ClientUpdateReq = new ClientUpdateReq(\r\n          res[0].name, res[0].description, res[1], res[0].contactNo, res[0].addressLine1, res[0].addressLine2, res[0].city, res[0].state, res[0].zipCode, country\r\n        );\r\n\r\n        this.clientService.updateClient(data.id, req).subscribe(\r\n          response => {\r\n            this.getClients();\r\n            this.loader.close();\r\n            this.snack.open(\"Client Updated!\", \"OK\", { duration: 4000 });\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError(error);\r\n          }\r\n        );\r\n\r\n      });\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  clientCreatePopUp() {\r\n\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      ClientCreatePopupComponent,\r\n      {\r\n        width: \"900px\",\r\n        disableClose: true,\r\n        data: { category: this.category }\r\n      }\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      console.log(res);\r\n\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      this.loader.open();\r\n\r\n      let users: UserData[] = [];\r\n      let categories: CategoryData[] = [];\r\n      users.push(new UserData(res[2].username, res[2].email));\r\n      let license: ClientLicenseData = new ClientLicenseData(res[3].tagCount, res[3].userCount, res[3].communityCount, res[3].feedbackCount, res[3].eventCount, res[3].promoCount);\r\n\r\n      res[4].forEach(element => {\r\n        let category: CategoryData = new CategoryData(element);\r\n        categories.push(category);\r\n      });\r\n\r\n      const req: ClientCreateReq = new ClientCreateReq(res[0].name, res[0].description, res[1], users, categories, license);\r\n\r\n      this.clientService.addClient(req).subscribe(\r\n        response => {\r\n          this.getClients();\r\n          this.clients = response;\r\n          this.loader.close();\r\n          this.snack.open(\"New Client added !\", \"OK\", { duration: 4000 });\r\n        },\r\n        error => {\r\n          this.loader.close();\r\n          this.errDialog.showError(error);\r\n        }\r\n      );\r\n\r\n    });\r\n\r\n  }\r\n\r\n  openCategoryPopUp(data: any = {}) {\r\n\r\n    this.clientService.getClientCategories(data.id).subscribe(successResp => {\r\n      console.log(successResp);\r\n\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n        ClientCategoryPopupComponent,\r\n        {\r\n          width: \"720px\",\r\n          disableClose: true,\r\n          data: { category: this.category, selectedCategory:  successResp}\r\n        }\r\n      );\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        if (!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n          console.log(res);\r\n\r\n          // this.loader.open();\r\n          // const country: CountryData = new CountryData('a65715e919d0995f361360cf0b8c2c03', 'Åland Islands', 'AX');\r\n          // const req: ClientUpdateReq = new ClientUpdateReq(\r\n          //   res[0].name, res[0].description, res[1], res[0].contactNo, res[0].addressLine1, res[0].addressLine2, res[0].city, res[0].state, res[0].zipCode, country\r\n          // );\r\n\r\n          // this.clientService.updateClient(data.id, req).subscribe(\r\n          //   response => {\r\n          //     this.getClients();\r\n          //     this.loader.close();\r\n          //     this.snack.open(\"Client Updated!\", \"OK\", { duration: 4000 });\r\n          //   },\r\n          //   error => {\r\n          //     this.loader.close();\r\n          //     this.errDialog.showError(error);\r\n          //   }\r\n          // );\r\n\r\n      });\r\n\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  openlicensePopUp(data: any = {}) {\r\n\r\n    this.clientService.getClient(data.id).subscribe(successResp => {\r\n      let resClient = successResp.content;\r\n\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n        ClientLicenseUpdatePopupComponent,\r\n        {\r\n          width: \"720px\",\r\n          disableClose: true,\r\n          data: { payload: resClient }\r\n        }\r\n      );\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        if (!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n        console.log(res);\r\n\r\n\r\n        this.loader.open();\r\n\r\n        let clientData: ClientData = new ClientData(resClient.id);\r\n        const req: LicenseUpdateReq = new LicenseUpdateReq(res.tagCount, res.userCount, res.communityCount, res.feedbackCount, res.eventCount, res.promoCount, clientData);\r\n\r\n        this.clientService.updateClientLicense(resClient.license.id, req).subscribe(\r\n          response => {\r\n            this.getClients();\r\n            this.clients = response;\r\n            this.loader.close();\r\n            this.snack.open(\"License Data Updated !\", \"OK\", { duration: 4000 });\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError(error);\r\n          }\r\n        );\r\n\r\n      });\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  navigateUserTable(res: any) {\r\n    this.clientService.getClient(res.id).subscribe(successResp => {\r\n      console.log(successResp.content);\r\n      localStorage.setItem('currentClient', JSON.stringify(successResp.content));\r\n      this.router.navigate([\"clients/user/user-table\"]);\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\"  id=\\\"client-update\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">Update Client</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"clientName\\\" [formControl]=\\\"itemForm.controls['name']\\\" letterOnly placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <textarea matInput name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n            [formControl]=\\\"itemForm.controls['description']\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"contactNo\\\" [formControl]=\\\"itemForm.controls['contactNo']\\\"  placeholder=\\\"Contact No\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"addressLine1\\\" [formControl]=\\\"itemForm.controls['addressLine1']\\\"\\r\\n            placeholder=\\\"Address Line 1\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"addressLine2\\\" [formControl]=\\\"itemForm.controls['addressLine2']\\\"\\r\\n            placeholder=\\\"Address Line 2\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"city\\\" [formControl]=\\\"itemForm.controls['city']\\\" letterOnly placeholder=\\\"City\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"state\\\" [formControl]=\\\"itemForm.controls['state']\\\" positiveNumberAndLetterOnly placeholder=\\\"State\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"zipCode\\\" [formControl]=\\\"itemForm.controls['zipCode']\\\" positiveNumberOnly placeholder=\\\"ZipCode\\\" maxlength=\\\"6\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [formControl]=\\\"itemForm.controls['country']\\\" placeholder=\\\"Country\\\" [matAutocomplete]=\\\"auto\\\" (blur)=\\\"onBlurCountry()\\\">\\r\\n          <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n            <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option.name\\\">\\r\\n              {{option.name}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- --------- hidden file input --------- -->\\r\\n      <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" style=\\\"display: none\\\"\\r\\n        [formControl]=\\\"itemForm.controls['profilePic']\\\" base-sixty-four-input>\\r\\n\\r\\n\\r\\n      <!-- --------- file input click button --------- -->\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <div layout-margin layout-padding>\\r\\n          <button mat-raised-button class=\\\"mr-1 mb-1\\\" (click)=\\\"productImgs.click()\\\" type=\\\"button\\\">\\r\\n            Browse Images</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- --------- start images preview container --------- -->\\r\\n      <div id=\\\"client_update_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n        <!-- --------- start card --------- -->\\r\\n        <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngIf=\\\"url\\\" fxFlex=\\\"100\\\" style=\\\"display: flex;\\\">\\r\\n          <mat-card class=\\\"p-0\\\">\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n              <span fxFlex></span>\\r\\n              <button type=\\\"button\\\" class=\\\"close p-1\\\" aria-label=\\\"Close\\\" (click)=\\\"removeSelectedImg()\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n\\r\\n            <img [src]=\\\"url\\\">\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <!-- --------- end card --------- -->\\r\\n\\r\\n      </div>\\r\\n      <!-- --------- end images preview container --------- -->\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <mat-card-footer>\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-footer>\\r\\n\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar, MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { CountryDB } from \"../../../../shared/helpers/countries\";\r\nimport { egretAnimations } from \"../../../../shared/animations/egret-animations\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-client-update-popup',\r\n  templateUrl: './client-update-popup.component.html',\r\n  animations: egretAnimations,\r\n})\r\nexport class ClientUpdatePopupComponent implements OnInit {\r\n\r\n  public countryDB: CountryDB = new CountryDB();\r\n  public countries = this.countryDB.countries;\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  public itemForm: FormGroup;\r\n  public formStatus = false;\r\n  public url;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ClientUpdatePopupComponent>,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload)\r\n  }\r\n  buildItemForm(item) {\r\n\r\n    console.log(item);\r\n\r\n    let country = null;\r\n    if(item.country){\r\n      country = item.country.name;\r\n    }\r\n    this.url = item.clientLogo;\r\n    console.log(this.url);\r\n    \r\n    \r\n    this.itemForm = this.fb.group({\r\n      name: [item.name || '', Validators.required],\r\n      description: [item.description || '', Validators.required],\r\n      profilePic: ['test', Validators.required],\r\n      contactNo: [item.primaryContactNo || '', Validators.required],\r\n      addressLine1: [item.addressLine1 || '', Validators.required],\r\n      addressLine2: [item.addressLine2 || '', Validators.required],\r\n      city: [item.city || '', Validators.required],\r\n      state: [item.state || '', Validators.required],\r\n      zipCode: [item.zipCode || '', Validators.required],\r\n      country: [country || '', Validators.required]\r\n    })\r\n\r\n    this.filteredOptions = this.itemForm.get(\"country\").valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n\r\n  }\r\n\r\n  private _filter(value: string): any {\r\n    const filterValue = value.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  submit() {\r\n    let surl: String = this.url;\r\n    // surl.slice(24)\r\n    let forms = [this.itemForm.value,this.url];\r\n    this.dialogRef.close(forms)\r\n  }\r\n\r\n\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n\r\n      let file = event.dataTransfer ? event.dataTransfer.files[0] : event.target.files[0];\r\n      let pattern = /image-*/;\r\n      let reader = new FileReader();\r\n      if (!file.type.match(pattern)) {\r\n        this.snackBar.open(\r\n          \"Invalid Format!\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n        return;\r\n      }\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n        console.log(this.url);\r\n        \r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n    } else {\r\n      this.snackBar.open(\r\n        \"Can't upload\",\r\n        \"close\",\r\n        { duration: 2000 }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  removeSelectedImg() {\r\n    this.url = null;\r\n  }\r\n\r\n  onBlurCountry(): void {\r\n    let value = this.itemForm.get(\"country\").value;\r\n    let status = true;\r\n    this.countries.forEach(element => {\r\n      if(element.name === value){\r\n        status = false;\r\n      }\r\n    });\r\n\r\n    if (status) {\r\n      this.itemForm.get(\"country\").setValue(\"\");\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<mat-dialog-content class=\\\"mat-typography mt-1\\\" style=\\\"overflow: unset; max-height: unset;\\\">\\r\\n  <form [formGroup]=\\\"roleFormGroup\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput required formControlName=\\\"name\\\" placeholder=\\\"Role Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput required formControlName=\\\"description\\\" placeholder=\\\"Description\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <span>Select Role Authorities</span>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-tab-group>\\r\\n        <div *ngFor=\\\"let module of this.componentList; let i = index\\\">\\r\\n          <mat-tab label=\\\"{{module.moduleName}}\\\">\\r\\n            <form [formGroup]=\\\"authoritiesFormGroup\\\">\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" style=\\\"padding-top: 5px;\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n                <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\" style=\\\"padding-top: 5px;\\\" *ngFor=\\\"let item of module.data\\\">\\r\\n                  <mat-checkbox [checked]=\\\"item.checked\\\" (change)=\\\"onChange(item.id, module.moduleName, item.code, $event.checked)\\\" class=\\\"full-width\\\" value=\\\"{{item.code}}\\\">{{item.name}}</mat-checkbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n        </div>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"this.selectedAuthorities.length == 0 || roleFormGroup.invalid\\\" (click)=\\\"submit()\\\">Save</button>\\r\\n  <span fxFlex></span>\\r\\n  <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { ClientService } from '../../../../client.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-role-table-popup',\r\n  templateUrl: './role-table-popup.component.html'\r\n})\r\nexport class RoleTablePopupComponent implements OnInit {\r\n  public authoritiesFormGroup: FormGroup;\r\n  public roleFormGroup: FormGroup;\r\n  //Raveen : need to implement a custom directive for the pattern validation\r\n  //public codeRegex = '/^-?[0-9]+(\\.[0-9]*){0,1}$/g';\r\n  public componentList = [];\r\n  public numberOfComponent = this.componentList.length - 1;\r\n  public selectedAuthorities: Array<any> = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<RoleTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n    private clientService: ClientService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildRoleForms(this.data.payload);\r\n    this.buildauthoritiesForm();\r\n    this.getAllAuthorities();\r\n  }\r\n\r\n  /*\r\n  * Build New Role Form Group\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  buildRoleForms(item) {\r\n    this.roleFormGroup = this.fb.group({\r\n      name: [item.name || '', Validators.required],\r\n      description: [item.description || '', Validators.required]\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Create New User Role Authorities Form Group\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  buildauthoritiesForm() {\r\n    this.authoritiesFormGroup = this.fb.group({\r\n      data: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Form Data Submit\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  submit() {\r\n    const roleFormValue = this.roleFormGroup.value;\r\n    const roleData = {\r\n      name: roleFormValue.name,\r\n      description: roleFormValue.description,\r\n      authorities: this.selectedAuthorities\r\n    };\r\n    this.dialogRef.close(roleData);\r\n  }\r\n\r\n  /*\r\n  * Check box onchange function for get selected check box value\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  onChange(id: String, name: String, auth_key: String, isChecked: boolean) {\r\n    const dataArray = <FormArray>this.authoritiesFormGroup.controls.data;\r\n    console.log('--------- role update onchange -------------');\r\n    if (isChecked) {\r\n      dataArray.push(new FormControl(auth_key));\r\n      const tempJson = {\r\n        id: id\r\n      };\r\n      console.log(id, auth_key);\r\n      this.selectedAuthorities.push(tempJson);\r\n    } else {\r\n      const index = dataArray.controls.findIndex(x => x.value === auth_key);\r\n      dataArray.removeAt(index);\r\n      // for (let i = 0; i < this.selectedAuthorities.length; i++) {\r\n      //   if (this.selectedAuthorities[i].id === id) {\r\n          const i = this.selectedAuthorities.findIndex(y => y.id === id);\r\n          console.log(id, auth_key, i);\r\n          this.selectedAuthorities.splice(i, 1);\r\n          // break;\r\n      //   }\r\n      // }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Set Selected role authorities when update popup window open\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  setSelectedRoleAuthorities() {\r\n    if (this.data.payload.hasOwnProperty('authorities')) {\r\n      const temList = this.componentList;\r\n      temList.forEach(element => {\r\n        element.data.forEach(data => {\r\n          if (data.checked) {\r\n            const tempJson = {\r\n              id: data.id\r\n            };\r\n            this.selectedAuthorities.push(tempJson);\r\n          }\r\n        });\r\n      });\r\n      console.log('-------------- setSelectedRoleAuthorities -------------------');\r\n      console.log(this.selectedAuthorities);\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Get All Authorities\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllAuthorities() {\r\n    this.clientService.getAllAuthorities()\r\n      .subscribe(\r\n        response => {\r\n          this.createComponentArray(response.content);\r\n        }\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Create Componet tab view data array\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  createComponentArray(dataArray: any) {\r\n    dataArray.forEach(data => {\r\n      const name = this.getModuleName(data.code);\r\n      if (name === 'Clients') {\r\n        const i = this.componentList.findIndex(x => x.moduleName === name);\r\n        const status =  this.setSelectedAuthorities(data.id);\r\n        if (i < 0) {\r\n          const tempdata = data;\r\n          tempdata['checked'] = status;\r\n          this.componentList.push({\r\n            moduleName: name,\r\n            data: [tempdata]\r\n          });\r\n        }else {\r\n          const tempdata = data;\r\n          tempdata['checked'] = status;\r\n          this.componentList[i].data.push(tempdata);\r\n        }\r\n      }\r\n    });\r\n    // console.log('--------------- component list --------------------');\r\n    // console.log(this.componentList);\r\n    this.setSelectedRoleAuthorities();\r\n  }\r\n\r\n  /*\r\n  * Get module name according to the code\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getModuleName(code): any {\r\n    const x = code.split('-');\r\n    if (x[0] === 'pc' || x[0] === 'pur' || x[0] === 'pu') {\r\n      return 'Clients';\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /*\r\n  * Set Selected Authorities checke function\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  setSelectedAuthorities(id): boolean {\r\n    let status = false;\r\n    if (this.data.payload.hasOwnProperty('authorities')) {\r\n      const dataArray = this.data.payload.authorities;\r\n      dataArray.forEach(elements => {\r\n        if (elements.id === id) {\r\n          status = true;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"card-title-text\\\">Roles</div>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <div class=\\\"m-333\\\">\\r\\n      <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"openPopUp({}, true)\\\">Add Role</button>\\r\\n      <span fxFlex></span>\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"items\\\" [columnMode]=\\\"'flex'\\\" [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n      <ngx-datatable-column name=\\\"Role Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Role Description\\\" [flexGrow]=\\\"2\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Last Modified Date\\\" [flexGrow]=\\\"2\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.lastModifiedDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <!-- <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"editRole(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteRole(row)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button> -->\\r\\n          <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <mat-icon>more_vert</mat-icon>\\r\\n          </button>\\r\\n          <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item (click)=\\\"editRole(row)\\\"><mat-icon>edit</mat-icon>Edit</button>\\r\\n            <button mat-menu-item (click)=\\\"deleteRole(row)\\\"><mat-icon>delete</mat-icon>Delete</button>\\r\\n          </mat-menu>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n    </ngx-datatable>\\r\\n\\r\\n\\r\\n    <!-- <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"pl-1\\\">Feedback Topic</th>\\r\\n          <th>Feedback Type</th>\\r\\n          <th>Start Date</th>\\r\\n          <th>End Date</th>\\r\\n          <th width=\\\"150px\\\" class=\\\"\\\">Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let row of rows;\\\">\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">{{row?.topic}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{row?.type =='P' ? 'Product' : 'E Vote'}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{row?.startDate}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{row?.endDate}}</td>\\r\\n          <td class=\\\"pt-1 pb-1 pr-1\\\">\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)='navigateSurveyBuilder(row)' color=\\\"primary\\\" class=\\\"\\\">\\r\\n                  <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)='openSurveyPopup(row,false)' color=\\\"primary\\\" class=\\\"\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)=\\\"deleteSurvey(row)\\\" color=\\\"warn\\\" class=\\\"\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">\\r\\n            <div class=\\\"pagination\\\">{{totalRecords}} Total</div>\\r\\n          </td>\\r\\n          <td colspan=\\\"4\\\">\\r\\n\\r\\n            <nav aria-label=\\\"Page navigation example\\\">\\r\\n              <ul class=\\\"pagination\\\" *ngIf=\\\"totalPages.length > 1\\\">\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber <= 1}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageSurvey(pageNumber-1);\\\" aria-label=\\\"Previous\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Previous</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let page of totalPages\\\" [ngClass]=\\\"{'active':pageNumber === page}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageSurvey(page);\\\">\\r\\n                    {{page}}\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber >= totalPages.length}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageSurvey(pageNumber+1);\\\" aria-label=\\\"Next\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Next</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table> -->\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ClientService } from \"../../../client.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppConfirmService } from \"../../../../../shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"../../../../../shared/services/app-loader/app-loader.service\";\r\nimport { RoleTablePopupComponent } from \"./role-table-popup/role-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../../../shared/services/app-error/app-error.service\";\r\nimport { NavigationExtras, Router } from \"@angular/router\";\r\nimport { UserService } from './../../../../sessions/UserService.service';\r\nimport { authProperties } from './../../../../../shared/services/auth/auth-properties';\r\nimport * as jwt_decode from \"jwt-decode\";\r\n\r\n@Component({\r\n  selector: \"app-role-table\",\r\n  templateUrl: \"./role-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class RoleTableComponent implements OnInit, OnDestroy {\r\n  public items: any[];\r\n  public pageSize = 10;\r\n\r\n  public componentList = [];\r\n  public editRoleId: String;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Get All Roles And Create to the Ngx table\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getItems() {\r\n    this.getItemSub = this.clientService.getAllUserRoles().subscribe(\r\n      response => {\r\n        // console.log('-------------- get all roles response--------------');\r\n        // console.log(response);\r\n        this.items = response.content;\r\n      },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n  * Open Create and Update Role popup window\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Create New User Role\" : \"Update User Role\";\r\n    data['isNew'] = isNew;\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      RoleTablePopupComponent,\r\n      {\r\n        width: \"900px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n      this.loader.open();\r\n      if (isNew) {\r\n        // console.log('------------ create user role object ---------------');\r\n        // console.log(res);\r\n        this.clientService.createNewRole(res).subscribe(response => {\r\n          // console.log('--------------- create user role response ----------------');\r\n          // console.log(response);\r\n          this.snack.open('User Role Created', 'close', {\r\n            duration: 2000\r\n          });\r\n          this.getItems();\r\n        },\r\n        error => {\r\n          this.errDialog.showError(error);\r\n        });\r\n      } else {\r\n        // console.log('------------ update user role object ---------------');\r\n        res['localizedName'] = '';\r\n        // console.log(res);\r\n        this.clientService.updateRloe(this.editRoleId, res)\r\n          .subscribe(response => {\r\n            // console.log('--------------- create user role response ----------------');\r\n            // console.log(response);\r\n            this.snack.open('User Role Updated', 'close', {\r\n              duration: 2000\r\n            });\r\n            this.getItems();\r\n          },\r\n          error => {\r\n            this.errDialog.showError(error);\r\n          });\r\n      }\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Edit User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  editRole(role) {\r\n    // console.log('------------- edit role ----------------');\r\n    // console.log(role);\r\n    this.editRoleId = role.id;\r\n    this.clientService.getOneRoleAuthorities(role.id)\r\n      .subscribe(response => {\r\n        // console.log(response.content);\r\n        const roleData = {\r\n          name: response.content.name,\r\n          description: response.content.description,\r\n          authorities: response.content.authorities\r\n        };\r\n        this.openPopUp(roleData, false);\r\n      },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      });\r\n  }\r\n\r\n  /*\r\n  * Delete User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  deleteRole(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.name}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          // this.loader.open();\r\n          this.getItems();\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <span class=\\\"title dialog-title\\\">Category</span>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n  <mat-form-field class=\\\"matAutocomplete-chip-list\\\">\\r\\n    <mat-chip-list #chipList>\\r\\n      <mat-chip *ngFor=\\\"let category of categories\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n        (removed)=\\\"remove(category)\\\">\\r\\n        {{category}}\\r\\n        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n      </mat-chip>\\r\\n      <input placeholder=\\\"Select category...\\\" #categoryInput [formControl]=\\\"categoryCtrl\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n        [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" (matChipInputTokenEnd)=\\\"add($event)\\\"\\r\\n        [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n    </mat-chip-list>\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n      <mat-option *ngFor=\\\"let category of filteredCategories | async\\\" [value]=\\\"category\\\">\\r\\n        {{category}}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\">Save</button>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</mat-dialog-content>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { ElementRef, ViewChild } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-category-popup',\r\n  templateUrl: './user-category-popup.component.html'\r\n})\r\nexport class UserCategoryPopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public roles: any[];\r\n  public formStatus = false;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  categoryCtrl = new FormControl();\r\n  filteredCategories: Observable<string[]>;\r\n  categories: string[] = ['Lifestyle'];\r\n  allCategories: string[] = ['SNKRS Launch Calendar', 'Lifestyle', 'Running', 'Training & Gym', 'Basketball', 'Jordan', 'Football', 'Soccer', 'Baseball', 'Golf', 'Skateboarding', 'Tennis', 'Boots'];\r\n\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<UserCategoryPopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.filteredCategories = this.categoryCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((category: string | null) => category ? this._filter(category) : this.allCategories.slice()));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n\r\n\r\n  add(event: MatChipInputEvent): void {\r\n\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // if we need to add custom texts as Chips,\r\n      // Add our category\r\n      // if ((value || '').trim()) {\r\n      //   this.categories.push(value.trim());\r\n      // }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.categoryCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(category: string): void {\r\n    const index = this.categories.indexOf(category);\r\n\r\n    if (index >= 0) {\r\n      this.categories.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.categories.push(event.option.viewValue);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.categoryCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allCategories.filter(category => category.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">Community</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\" id=\\\"community-popup\\\">\\r\\n\\r\\n    <!-- <div class=\\\"example-container\\\">\\r\\n      <h2>To do</h2>\\r\\n\\r\\n      <div cdkDropList #todoList=\\\"cdkDropList\\\" [cdkDropListData]=\\\"todo\\\" [cdkDropListConnectedTo]=\\\"[doneList]\\\"\\r\\n        class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\r\\n        <div class=\\\"example-box\\\" *ngFor=\\\"let item of todo\\\" cdkDrag>{{item}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"example-container\\\">\\r\\n      <h2>Done</h2>\\r\\n\\r\\n      <div cdkDropList #doneList=\\\"cdkDropList\\\" [cdkDropListData]=\\\"done\\\" [cdkDropListConnectedTo]=\\\"[todoList]\\\"\\r\\n        class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\r\\n        <div class=\\\"example-box\\\" *ngFor=\\\"let item of done\\\" cdkDrag>{{item}}</div>\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-community-popup',\r\n  templateUrl: './user-community-popup.component.html'\r\n})\r\nexport class UserCommunityPopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public roles: any[];\r\n  public formStatus = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<UserCommunityPopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload);\r\n\r\n    this.roles = this.data.roles;\r\n\r\n  }\r\n\r\n  buildItemForm(item) {\r\n\r\n    console.log(item);\r\n    \r\n\r\n    let role = null;\r\n    let userStatus = 0;\r\n    if (item.id === undefined) {\r\n      this.formStatus = true;\r\n    } else {\r\n      role = item.roles[0].id;\r\n      if(item.status===\"ACTIVE\"){\r\n        userStatus = 1;\r\n      }\r\n    }\r\n\r\n\r\n    this.itemForm = this.fb.group({\r\n      // username: new FormControl(item.userName || '', Validators.required),\r\n      // password: new FormControl(item.password || '', Validators.required),\r\n      // email: new FormControl(item.email || '', [Validators.required, Validators.email]),\r\n      // role: new FormControl(role, Validators.required),\r\n      // isActive: new FormControl(userStatus)\r\n    })\r\n\r\n    if (item.id !== undefined) {\r\n      role = item.roles[0].id;\r\n      this.itemForm.get('password').clearValidators();\r\n      this.itemForm.get('password').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n}\r\n","module.exports = \"<mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <span class=\\\"title dialog-title\\\">Create Client</span>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<mat-dialog-content class=\\\"mat-typography mt-1\\\" id=\\\"client-create\\\">\\r\\n\\r\\n\\r\\n  <mat-horizontal-stepper [linear]=\\\"true\\\">\\r\\n\\r\\n    <mat-step [stepControl]=\\\"userFormGroup\\\">\\r\\n\\r\\n      <form [formGroup]=\\\"userFormGroup\\\">\\r\\n\\r\\n        <ng-template matStepLabel>Client</ng-template>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"username\\\" [formControl]=\\\"userFormGroup.controls['username']\\\" placeholder=\\\"User Name\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"password\\\" type=\\\"password\\\" [formControl]=\\\"userFormGroup.controls['password']\\\"\\r\\n                positiveNumberAndLetterOnly placeholder=\\\"Password\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"email\\\" [formControl]=\\\"userFormGroup.controls['email']\\\" placeholder=\\\"Email\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-select [formControl]=\\\"userFormGroup.controls['role']\\\" placeholder=\\\"Select A User Role\\\">\\r\\n                <mat-option>none</mat-option>\\r\\n                <mat-option *ngFor=\\\"let roles of roles\\\" [value]=\\\"roles.id\\\">{{roles.name}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n    <mat-step [stepControl]=\\\"categoryFormGroup\\\">\\r\\n      <form [formGroup]=\\\"categoryFormGroup\\\">\\r\\n        <ng-template matStepLabel>Category</ng-template>\\r\\n\\r\\n        <mat-form-field class=\\\"matAutocomplete-chip-list\\\">\\r\\n          <mat-chip-list #chipList>\\r\\n            <mat-chip *ngFor=\\\"let category of categories\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n              (removed)=\\\"remove(category)\\\">\\r\\n              {{category}}\\r\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n            </mat-chip>\\r\\n            <input placeholder=\\\"Select category...\\\" #categoryInput [formControl]=\\\"categoryFormGroup.controls['category']\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n              [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" (matChipInputTokenEnd)=\\\"add($event)\\\"\\r\\n              [matChipInputAddOnBlur]=\\\"addOnBlur\\\">\\r\\n          </mat-chip-list>\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let category of filteredCategories | async\\\" [value]=\\\"category\\\">\\r\\n              {{category}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious class=\\\"mr-1\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step [stepControl]=\\\"communityFormGroup\\\">\\r\\n      <form [formGroup]=\\\"communityFormGroup\\\">\\r\\n        <ng-template matStepLabel>Community</ng-template>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput name=\\\"username\\\" positiveNumberAndLetterOnly placeholder=\\\"Username\\\"\\r\\n                [formControl]=\\\"communityFormGroup.controls['username']\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious class=\\\"mr-1\\\">Back</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Submit</button>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n      </form>\\r\\n    </mat-step>\\r\\n\\r\\n  </mat-horizontal-stepper>\\r\\n\\r\\n\\r\\n</mat-dialog-content>\"","import { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar, MatAutocomplete, MatAutocompleteSelectedEvent, MatChipInputEvent } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { egretAnimations } from \"../../../../../../shared/animations/egret-animations\";\r\nimport { GlobalVariable } from \"../../../../../../shared/helpers/global-variable\";\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-create-popup',\r\n  templateUrl: './user-create-popup.component.html',\r\n  animations: egretAnimations,\r\n})\r\nexport class UserCreatePopupComponent implements OnInit {\r\n\r\n  public globalVariable: GlobalVariable = new GlobalVariable();\r\n  public license = this.globalVariable.client.license;\r\n  public regex = this.globalVariable.validators.regex;\r\n\r\n  public userFormGroup: FormGroup;\r\n  public categoryFormGroup: FormGroup;\r\n  public communityFormGroup: FormGroup;\r\n  public licenseFormGroup: FormGroup;\r\n  // public formStatus = false;\r\n\r\n  public roles;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  categoryCtrl = new FormControl();\r\n  filteredCategories: Observable<string[]>;\r\n  categories: string[] = ['Lifestyle'];\r\n  allCategories: string[] = ['SNKRS Launch Calendar', 'Lifestyle', 'Running', 'Training & Gym', 'Basketball', 'Jordan', 'Football', 'Soccer', 'Baseball', 'Golf', 'Skateboarding', 'Tennis', 'Boots'];\r\n\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<UserCreatePopupComponent>,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) {\r\n    this.filteredCategories = this.categoryCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((category: string | null) => category ? this._filter(category) : this.allCategories.slice()));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.roles = this.data.roles;\r\n    this.buildItemForm()\r\n  }\r\n\r\n  buildItemForm() {\r\n\r\n    // this.userFormGroup = this.fb.group({\r\n    //   username: new FormControl(''),\r\n    //   password: new FormControl(''),\r\n    //   email: new FormControl(''),\r\n    //   role: new FormControl('')\r\n    // });\r\n    \r\n    this.userFormGroup = this.fb.group({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: new FormControl('', Validators.required)\r\n    });\r\n    this.categoryFormGroup = this.fb.group({\r\n      category: this.categoryCtrl\r\n    });\r\n    this.communityFormGroup = this.fb.group({\r\n      username: [''],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    let forms = [this.userFormGroup.value, this.categories, this.communityFormGroup.value];\r\n    this.dialogRef.close(forms);\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // if we need to add custom texts as Chips,\r\n      // Add our category\r\n      // if ((value || '').trim()) {\r\n      //   this.categories.push(value.trim());\r\n      // }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.categoryCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  remove(category: string): void {\r\n    const index = this.categories.indexOf(category);\r\n\r\n    if (index >= 0) {\r\n      this.categories.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.categories.push(event.option.viewValue);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.categoryCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allCategories.filter(category => category.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"username\\\" [formControl]=\\\"itemForm.controls['username']\\\" placeholder=\\\"User Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\" *ngIf=\\\"formStatus\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"password\\\" type=\\\"password\\\" [formControl]=\\\"itemForm.controls['password']\\\"\\r\\n            positiveNumberAndLetterOnly placeholder=\\\"Password\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"email\\\" [formControl]=\\\"itemForm.controls['email']\\\" placeholder=\\\"Email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [formControl]=\\\"itemForm.controls['role']\\\" placeholder=\\\"Select A User Role\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let roles of roles\\\" [value]=\\\"roles.id\\\">{{roles.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <!-- <div fxFlex=\\\"50\\\" class=\\\"pt-1 pr-1\\\">\\r\\n        <mat-slide-toggle [formControl]=\\\"itemForm.controls['isActive']\\\">Active User</mat-slide-toggle>\\r\\n      </div> -->\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-table-popup',\r\n  templateUrl: './user-table-popup.component.html'\r\n})\r\nexport class UserTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public roles: any[];\r\n  public formStatus = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<UserTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload);\r\n    console.log(this.data);\r\n    \r\n    this.roles = this.data.roles;\r\n\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    let role = null;\r\n    let userStatus = 0;\r\n    if (item.id === undefined) {\r\n      this.formStatus = true;\r\n    } else {\r\n      role = item.role.id;\r\n      if(item.status===\"ACTIVE\"){\r\n        userStatus = 1;\r\n      }\r\n    }\r\n\r\n\r\n    this.itemForm = this.fb.group({\r\n      username: new FormControl(item.userName || '', Validators.required),\r\n      password: new FormControl(item.password || '', Validators.required),\r\n      email: new FormControl(item.email || '', [Validators.required, Validators.email]),\r\n      role: new FormControl(role, Validators.required),\r\n      // isActive: new FormControl(userStatus)\r\n    })\r\n\r\n    if (item.id !== undefined) {\r\n      // role = item.role.id;\r\n      this.itemForm.get('password').clearValidators();\r\n      this.itemForm.get('password').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-title>\\r\\n\\r\\n    <div class=\\\"m-333 mt-3\\\">\\r\\n      <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"userCreatePopup()\\\">Add User</button>\\r\\n      <span fxFlex></span>\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"users\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n\\r\\n      <ngx-datatable-column name=\\\"\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"80\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <img mat-list-avatar class=\\\"\\\" src=\\\"assets/images/face-1.jpg\\\" alt=\\\"\\\"\\r\\n            style=\\\"flex-shrink: 0; width: 40px; height: 40px; border-radius: 50%; object-fit: cover;\\\">\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.userName }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Email\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.email }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Role\\\" [flexGrow]=\\\"1\\\"  [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <mat-chip mat-sm-chip color=\\\"warn\\\" [selected]=\\\"true\\\">{{row?.role.name}}</mat-chip>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Status\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <mat-chip mat-sm-chip color=\\\"{{statusArray[row?.status]}}\\\" [selected]=\\\"true\\\">{{row?.status}}</mat-chip>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"80\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button class=\\\"card-control\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu1\\\">\\r\\n            <mat-icon>more_vert</mat-icon>\\r\\n          </button>\\r\\n          <mat-menu #menu1=\\\"matMenu\\\">\\r\\n            <button mat-menu-item (click)=\\\"openEditPopUp(row)\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n              <span>Edit</span>\\r\\n            </button>\\r\\n            <button mat-menu-item (click)=\\\"openCommunityPopUp(row)\\\">\\r\\n              <mat-icon>assignment_ind</mat-icon>\\r\\n              <span>Community</span>\\r\\n            </button>\\r\\n            <button mat-menu-item (click)=\\\"openCategoryPopUp(row)\\\">\\r\\n              <mat-icon>assistant</mat-icon>\\r\\n              <span>Category</span>\\r\\n            </button>\\r\\n          </mat-menu>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ClientService } from \"../../../client.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppLoaderService } from \"../../../../../shared/services/app-loader/app-loader.service\";\r\nimport { UserCreatePopupComponent } from \"../user-table/user-create-popup/user-create-popup.component\";\r\nimport { UserTablePopupComponent } from \"../user-table/user-table-popup/user-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../../../shared/services/app-error/app-error.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserCreateReq, ClientData, RoleData, CommunityData, CategoryData } from 'app/model/ClientModel.model';\r\nimport { UserCategoryPopupComponent } from './user-category-popup/user-category-popup.component';\r\nimport { UserCommunityPopupComponent } from './user-community-popup/user-community-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-user-table',\r\n  templateUrl: './user-table.component.html',\r\n  animations: egretAnimations\r\n})\r\nexport class UserTableComponent implements OnInit {\r\n\r\n  public users: any[];\r\n  public roles: any[];\r\n  public statusArray = {\r\n    'Active': \"primary\",\r\n    'Inactive': \"accent\"\r\n  };\r\n  public pageSize = 10;\r\n  public clientId;\r\n  public name;\r\n  public url;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private activeRoute: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    const client = JSON.parse(localStorage.getItem('currentClient'));\r\n    console.log(client);\r\n\r\n    this.clientId = client.id;\r\n    this.name = client.name;\r\n    this.url = client.clientLogo;\r\n\r\n    this.getUsers();\r\n    this.getUserRoles();\r\n    // this.getCategory();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getUsers() {\r\n    this.getItemSub = this.clientService.getUsers(this.clientId).subscribe(successResp => {\r\n      this.users = successResp.content.users;\r\n      console.log(this.users);\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserRoles() {\r\n    this.getItemSub = this.clientService.getRoles().subscribe(successResp => {\r\n      successResp.content.forEach((item, index) => {\r\n        if (item.name === \"Super Administrator\") successResp.content.splice(index, 1);\r\n      });\r\n      this.roles = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCategory(){\r\n    this.getItemSub = this.clientService.getRoles().subscribe(successResp => {\r\n      successResp.content.forEach((item, index) => {\r\n        if (item.name === \"Super Administrator\") successResp.content.splice(index, 1);\r\n      });\r\n      this.roles = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  userCreatePopup() {\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      UserCreatePopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { roles: this.roles }\r\n      }\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      console.log(res);\r\n\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      this.loader.open();\r\n      // let users: UserData[] = [];\r\n      // users.push(new UserData(res[2].username, res[2].email));\r\n      // let license: ClientLicenseData = new ClientLicenseData(res[3].tagCount, res[3].userCount, res[3].communityCount, res[3].feedbackCount, res[3].eventCount, res[3].promoCount);\r\n      // const req: ClientCreateReq = new ClientCreateReq(res[0].name, res[0].description, res[1], users, license);\r\n\r\n      // let roles: UserRole[] = [];\r\n      // roles.push(new UserRole(res[0].role));\r\n\r\n\r\n      let role: RoleData = new RoleData(res[0].role);\r\n\r\n      let communities: CommunityData[] = [];\r\n      // communities.push(new CommunityData(res[0].role));\r\n\r\n      let categories: CategoryData[] = [];\r\n      categories.push(new CategoryData('d36eeebd8b1f0cde16210339e97b9408'));\r\n      categories.push(new CategoryData('ec21ff12b34a21bece175e48a059ec7f'));\r\n\r\n      const client: ClientData = new ClientData(this.clientId);\r\n\r\n      const req: UserCreateReq = new UserCreateReq(res[0].username, res[0].password, res[0].email, role, client, communities, categories);\r\n      this.clientService.addUser(req).subscribe(\r\n        response => {\r\n          this.getUsers;\r\n          this.users = response;\r\n          this.loader.close();\r\n          this.snack.open(\"New User added !\", \"OK\", { duration: 4000 });\r\n        },\r\n          error => {\r\n            this.errDialog.showError(error);\r\n          }\r\n      );\r\n\r\n    });\r\n  }\r\n\r\n  openEditPopUp(data: any = {}, isNew?) {\r\n\r\n    let title = isNew ? \"Add new User\" : \"Update User\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      UserTablePopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, roles: this.roles }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      // let roles: UserRole[] = [];\r\n      // roles.push(new UserRole(res.role));\r\n      // const client: ClientData = new ClientData(this.clientId);\r\n      // const req: UserCreateReq = new UserCreateReq(res.username, res.password, res.email, roles, client);\r\n\r\n      // this.loader.open();\r\n      // if (isNew) {\r\n\r\n      //   this.clientService.addUser(req).subscribe(\r\n      //     response => {\r\n      //       this.getUsers();\r\n      //       this.loader.close();\r\n      //       this.snack.open(\"New User added !\", \"OK\", { duration: 4000 });\r\n      //     },\r\n      //     error => {\r\n      //       this.loader.close();\r\n      //       this.errDialog.showError({\r\n      //         title: \"Error\",\r\n      //         status: error.status,\r\n      //         type: \"http_error\"\r\n      //       });\r\n      //     }\r\n      //   );\r\n      // } else {\r\n      //   this.clientService.updateUser(data.id, req).subscribe(\r\n      //     response => {\r\n      //       this.getUsers();\r\n      //       this.loader.close();\r\n      //       this.snack.open(\"User Updated!\", \"OK\", { duration: 4000 });\r\n      //       // return this.users.slice();\r\n      //     },\r\n      //     error => {\r\n      //       this.loader.close();\r\n      //       this.errDialog.showError({\r\n      //         title: \"Error\",\r\n      //         status: error.status,\r\n      //         type: \"http_error\"\r\n      //       });\r\n      //     }\r\n      //   );\r\n      // }\r\n    });\r\n  }\r\n\r\n\r\n  openCommunityPopUp(data: any = {}, isNew?) {\r\n\r\n    let title = isNew ? \"Add new User\" : \"Update User\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      UserCommunityPopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, roles: this.roles }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      // let roles: UserRole[] = [];\r\n      // roles.push(new UserRole(res.role));\r\n      // const client: ClientData = new ClientData(this.clientId);\r\n      // const req: UserCreateReq = new UserCreateReq(res.username, res.password, res.email, roles, client);\r\n\r\n      // this.loader.open();\r\n      // if (isNew) {\r\n\r\n      //   this.clientService.addUser(req).subscribe(\r\n      //     response => {\r\n      //       this.getUsers();\r\n      //       this.loader.close();\r\n      //       this.snack.open(\"New User added !\", \"OK\", { duration: 4000 });\r\n      //     },\r\n      //     error => {\r\n      //       this.loader.close();\r\n      //       this.errDialog.showError({\r\n      //         title: \"Error\",\r\n      //         status: error.status,\r\n      //         type: \"http_error\"\r\n      //       });\r\n      //     }\r\n      //   );\r\n      // } else {\r\n      //   this.clientService.updateUser(data.id, req).subscribe(\r\n      //     response => {\r\n      //       this.getUsers();\r\n      //       this.loader.close();\r\n      //       this.snack.open(\"User Updated!\", \"OK\", { duration: 4000 });\r\n      //       // return this.users.slice();\r\n      //     },\r\n      //     error => {\r\n      //       this.loader.close();\r\n      //       this.errDialog.showError({\r\n      //         title: \"Error\",\r\n      //         status: error.status,\r\n      //         type: \"http_error\"\r\n      //       });\r\n      //     }\r\n      //   );\r\n      // }\r\n    });\r\n  }\r\n\r\n\r\n  openCategoryPopUp(data: any = {}, isNew?) {\r\n\r\n    let title = isNew ? \"Add new User\" : \"Update User\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      UserCategoryPopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, roles: this.roles }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      // let roles: UserRole[] = [];\r\n      // roles.push(new UserRole(res.role));\r\n      // const client: ClientData = new ClientData(this.clientId);\r\n      // const req: UserCreateReq = new UserCreateReq(res.username, res.password, res.email, roles, client);\r\n\r\n      // this.loader.open();\r\n      // if (isNew) {\r\n\r\n      //   this.clientService.addUser(req).subscribe(\r\n      //     response => {\r\n      //       this.getUsers();\r\n      //       this.loader.close();\r\n      //       this.snack.open(\"New User added !\", \"OK\", { duration: 4000 });\r\n      //     },\r\n      //     error => {\r\n      //       this.loader.close();\r\n      //       this.errDialog.showError({\r\n      //         title: \"Error\",\r\n      //         status: error.status,\r\n      //         type: \"http_error\"\r\n      //       });\r\n      //     }\r\n      //   );\r\n      // } else {\r\n      //   this.clientService.updateUser(data.id, req).subscribe(\r\n      //     response => {\r\n      //       this.getUsers();\r\n      //       this.loader.close();\r\n      //       this.snack.open(\"User Updated!\", \"OK\", { duration: 4000 });\r\n      //       // return this.users.slice();\r\n      //     },\r\n      //     error => {\r\n      //       this.loader.close();\r\n      //       this.errDialog.showError({\r\n      //         title: \"Error\",\r\n      //         status: error.status,\r\n      //         type: \"http_error\"\r\n      //       });\r\n      //     }\r\n      //   );\r\n      // }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\r\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\r\\n      <div class=\\\"propic text-center\\\">\\r\\n        <img src=\\\"assets/images/ui_icons/users.png\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n      <div class=\\\"profile-title text-center mb-1\\\">\\r\\n        <div class=\\\"main-title\\\">{{this.name}}</div>\\r\\n        <div class=\\\"subtitle mb-05\\\">ClearPicture</div>\\r\\n        <div class=\\\"text-muted\\\"> Provides the tools you need to easily manage Users.</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"profile-nav\\\">\\r\\n        <mat-nav-list>\\r\\n          <mat-list-item routerLink=\\\"/clients/user/user-table\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>person</mat-icon>\\r\\n            Users\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n          <mat-list-item routerLink=\\\"/clients/user/role-table\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n            User Roles\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n        </mat-nav-list>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- Profile Views -->\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-md=\\\"calc(100% - 300px)\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { egretAnimations } from '../../../../shared/animations/egret-animations';\r\nimport { ActivatedRoute, NavigationExtras, Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  animations: egretAnimations\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  id; name; url;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if(JSON.parse(localStorage.getItem('currentClient'))){\r\n      const client = JSON.parse(localStorage.getItem('currentClient'));\r\n      this.id = client.id;\r\n      this.name = client.name;\r\n      this.url = client.clientLogo;\r\n    } else {\r\n      this.router.navigate([\"clients/client-table\"]);\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}