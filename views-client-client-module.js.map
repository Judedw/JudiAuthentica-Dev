{"version":3,"sources":["webpack:///./src/app/model/ClientModel.model.ts","webpack:///./src/app/shared/animations/egret-animations.ts","webpack:///./src/app/views/client/client.component.html","webpack:///./src/app/views/client/client.component.ts","webpack:///./src/app/views/client/client.module.ts","webpack:///./src/app/views/client/client.routing.ts","webpack:///./src/app/views/client/client.service.ts","webpack:///./src/app/views/client/clients/client-table-popup/client-table-popup.component.html","webpack:///./src/app/views/client/clients/client-table-popup/client-table-popup.component.ts","webpack:///./src/app/views/client/clients/client-table.component.html","webpack:///./src/app/views/client/clients/client-table.component.ts","webpack:///./src/app/views/client/clients/user-table/user-table-popup/user-table-popup.component.html","webpack:///./src/app/views/client/clients/user-table/user-table-popup/user-table-popup.component.ts","webpack:///./src/app/views/client/clients/user-table/user-table.component.html","webpack:///./src/app/views/client/clients/user-table/user-table.component.ts","webpack:///./src/app/views/client/roles/role-table-popup/role-table-popup.component.html","webpack:///./src/app/views/client/roles/role-table-popup/role-table-popup.component.ts","webpack:///./src/app/views/client/roles/role-table.component.html","webpack:///./src/app/views/client/roles/role-table.component.ts"],"names":[],"mappings":"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","file":"views-client-client-module.js","sourcesContent":["export class Content{\r\n    constructor(public id:string, public name:string){}\r\n}\r\n\r\nexport interface Clients{\r\n    status: string;\r\n    statusCode: string;\r\n    content: Content[];\r\n}\r\n\r\nexport class ClientCreateReq {\r\n    constructor(\r\n      public name: string,\r\n      public description: string,\r\n      public users: any[]\r\n    ) { }\r\n  }\r\n  \r\n  export class ClientUpdateReq {\r\n    constructor(\r\n      public name: string,\r\n      public description: string\r\n    ) { }\r\n  }\r\n  \r\n  export class UserData {\r\n    constructor(\r\n      public userName: string,\r\n      public email: string\r\n    ) { }\r\n  }\r\n\r\nexport class UserCreateReq {\r\n    constructor(\r\n      public userName: string,\r\n      public password: string,\r\n      public email: string,\r\n      public roles: any[],\r\n      public client: ClientData,\r\n    ) { }\r\n  }\r\n  \r\n  export class ClientData {\r\n    constructor(\r\n      public id: string\r\n    ) { }\r\n  }\r\n  \r\n  export class UserRole {\r\n    constructor(\r\n      public id: string\r\n    ) { }\r\n  }\r\n  \r\n  export class profileUpdateReq {\r\n    constructor(\r\n      public userName: string,\r\n      public password: string,\r\n      public email: string\r\n    ) { }\r\n  }","import {\r\n\tsequence,\r\n\ttrigger,\r\n\tanimate,\r\n\tstyle,\r\n\tgroup,\r\n\tquery,\r\n\ttransition,\r\n\tanimateChild,\r\n\tstate,\r\n\tanimation,\r\n\tuseAnimation,\r\n\tstagger\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation([\r\n\tstyle({\r\n\t\topacity: '{{opacity}}',\r\n\t\ttransform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\r\n\t}),\r\n\tanimate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\r\n], {\r\n\t\tparams: {\r\n\t\t\tduration: '200ms',\r\n\t\t\tdelay: '0ms',\r\n\t\t\topacity: '0',\r\n\t\t\tscale: '1',\r\n\t\t\tx: '0',\r\n\t\t\ty: '0',\r\n\t\t\tz: '0'\r\n\t\t}\r\n\t});\r\n\r\nexport const egretAnimations = [\r\n\ttrigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\ntrigger('fadeInOut', [\r\n\tstate('0', style({\r\n\t\t\topacity: 0,\r\n\t\t\tdisplay  : 'none'\r\n\t})),\r\n\tstate('1', style({\r\n\t\t\topacity: 1,\r\n\t\t\tdisplay  : 'block'\r\n\t})),\r\n\ttransition('0 => 1', animate('300ms')),\r\n\ttransition('1 => 0', animate('300ms'))\r\n]),\r\n]","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\r\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\r\\n      <div class=\\\"propic text-center\\\">\\r\\n        <img src=\\\"assets/images/ui_icons/users.png\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n      <div class=\\\"profile-title text-center mb-1\\\">\\r\\n        <div class=\\\"main-title\\\">Clients</div>\\r\\n        <div class=\\\"subtitle mb-05\\\">Judi Authentica</div>\\r\\n        <div class=\\\"text-muted\\\"> Provides the tools you need to easily manage Users.</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"profile-nav\\\">\\r\\n        <mat-nav-list>\\r\\n          <mat-list-item routerLink=\\\"/clients/client-table\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>person</mat-icon>\\r\\n            Clients\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n          <mat-list-item routerLink=\\\"/clients/role-table\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n            User Roles\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n        </mat-nav-list>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- Profile Views -->\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-md=\\\"calc(100% - 300px)\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { egretAnimations } from '../../shared/animations/egret-animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  animations: egretAnimations\r\n})\r\nexport class ClientComponent implements OnInit {\r\n\r\n constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ClientComponent } from \"./client.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { ClientRoute } from \"./client.routing\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatListModule,\r\n  MatExpansionModule,\r\n  MatButtonToggleModule,\r\n  MatSidenavModule,\r\n  MatStepperModule,\r\n  MatToolbarModule,\r\n  MatOptionModule,\r\n  MatCheckboxModule,\r\n  MatTabsModule\r\n} from \"@angular/material\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { ClientService } from \"./client.service\";\r\nimport { ClientTableComponent } from './clients/client-table.component';\r\nimport { ClientTablePopupComponent } from './clients/client-table-popup/client-table-popup.component';\r\nimport { UserTableComponent } from './clients/user-table/user-table.component';\r\nimport { UserTablePopupComponent } from './clients/user-table/user-table-popup/user-table-popup.component';\r\nimport { RoleTableComponent } from './roles/role-table.component';\r\nimport { RoleTablePopupComponent } from './roles/role-table-popup/role-table-popup.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatSidenavModule,\r\n    RouterModule.forChild(ClientRoute),\r\n    SharedModule,\r\n    MatStepperModule,\r\n    MatToolbarModule,\r\n    MatOptionModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule\r\n  ],\r\n  declarations: [\r\n    ClientComponent,\r\n    ClientComponent,\r\n    ClientTableComponent,\r\n    ClientTablePopupComponent,\r\n    UserTableComponent,\r\n    UserTablePopupComponent,\r\n    RoleTableComponent,\r\n    RoleTablePopupComponent\r\n  ],\r\n  entryComponents: [\r\n    ClientTablePopupComponent,\r\n    UserTablePopupComponent,\r\n    RoleTablePopupComponent\r\n  ],\r\n  providers: [ClientService]\r\n})\r\nexport class ClientModule { }\r\n","import { Routes } from \"@angular/router\";\r\nimport { ClientComponent } from \"./client.component\";\r\nimport { ClientTableComponent } from \"./clients/client-table.component\";\r\nimport { UserTableComponent } from \"./clients/user-table/user-table.component\";\r\nimport { RoleTableComponent } from \"./roles/role-table.component\";\r\n\r\nexport const ClientRoute: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ClientComponent,\r\n    children: [\r\n      {\r\n        path: \"client-table\",\r\n        component: ClientTableComponent,\r\n        data: { title: \"Clients\", breadcrumb: \"Clients\" }\r\n      },\r\n      {\r\n        path: \"user-table\",\r\n        component: UserTableComponent,\r\n        data: { title: \"Users\", breadcrumb: \"Users\" }\r\n      },\r\n      {\r\n        path: \"role-table\",\r\n        component: RoleTableComponent,\r\n        data: { title: \"Roles\", breadcrumb: \"Roles\" }\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment.prod';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\r\n  clientUrl: string = environment.userApiUrl + \"clients\";\r\n  userUrl: string = environment.userApiUrl + \"platform-users\";\r\n  roleUrl: string = environment.userApiUrl + \"platform-user-roles\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getClients(): Observable<any> {\r\n    return this.http.get(this.clientUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getUsers(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getRoles(): Observable<any> {\r\n    return this.http.get(this.roleUrl + \"/suggestions\").pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  addClient(item): Observable<any> {\r\n    return this.http.post<any>(this.clientUrl, item).pipe(\r\n      map(data => {\r\n        // console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateClient(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addUser(item): Observable<any> {\r\n    return this.http.post<any>(this.userUrl, item).pipe(\r\n      map(data => {\r\n        // console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateUser(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  /*\r\n  * Create New User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  createNewRole(roleObj) {\r\n    return this.http.post(this.roleUrl, roleObj)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Update New User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  updateRloe(roleId, roleObj) {\r\n    return this.http.put(this.roleUrl + '/' + roleId, roleObj)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get All User Role From Data Base\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllUserRoles(): any {\r\n    return this.http.get(this.roleUrl)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get All Authorities From Data Base\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllAuthorities(): any {\r\n    return this.http.get(environment.userApiUrl + 'platform-authorities')\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Get Role Assign Authorities\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getOneRoleAuthorities(roleId): any {\r\n    return this.http.get(this.roleUrl + '/' + roleId)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    // console.log(error);\r\n    if (error.status !== 401) {\r\n      return throwError(error);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"clientName\\\" [formControl]=\\\"itemForm.controls['name']\\\" letterOnly placeholder=\\\"Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <textarea matInput name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n            [formControl]=\\\"itemForm.controls['description']\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\" *ngIf='formStatus'>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1 mt-2 mb-1\\\">\\r\\n        <div class=\\\"card-title-text\\\">Admin Account</div>\\r\\n        <mat-divider></mat-divider>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"username\\\" [formControl]=\\\"itemForm.controls['username']\\\" positiveNumberAndLetterOnly\\r\\n            placeholder=\\\"Username\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"email\\\" [formControl]=\\\"itemForm.controls['email']\\\" placeholder=\\\"Email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client-table-popup',\r\n  templateUrl: './client-table-popup.component.html'\r\n})\r\nexport class ClientTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public formStatus = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ClientTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload)\r\n  }\r\n  buildItemForm(item) {\r\n\r\n\r\n    this.itemForm = this.fb.group({\r\n      name: [item.name || '', Validators.required],\r\n      description: [item.description || '', Validators.required],\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    })\r\n\r\n    if (item.name === undefined) {\r\n      this.formStatus = true;\r\n    } else {\r\n      this.itemForm.get('username').clearValidators();\r\n      this.itemForm.get('username').updateValueAndValidity();\r\n      this.itemForm.get('email').clearValidators();\r\n      this.itemForm.get('email').updateValueAndValidity();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"card-title-text\\\">Clients</div>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <div class=\\\"m-333\\\">\\r\\n      <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"openPopUp({}, true)\\\">Add Client</button>\\r\\n      <span fxFlex></span>\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"clients\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n      <ngx-datatable-column name=\\\"Name\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Status\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <mat-chip mat-sm-chip color=\\\"{{statusArray[row?.status].style}}\\\" [selected]=\\\"true\\\">{{statusArray[row?.status].status}}</mat-chip>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\"  [maxWidth]=\\\"200\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"navigateUserTable(row)\\\">\\r\\n            <mat-icon>list</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openPopUp(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <!-- <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteItem(row)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button> -->\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ClientService } from \"../client.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { ClientTablePopupComponent } from \"./client-table-popup/client-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { NavigationExtras, Router } from \"@angular/router\";\r\nimport { ClientCreateReq, UserData, ClientUpdateReq } from \"app/model/ClientModel.model\";\r\n\r\n@Component({\r\n  selector: \"app-client-table\",\r\n  templateUrl: \"./client-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class ClientTableComponent implements OnInit, OnDestroy {\r\n\r\n  public clients: any[];\r\n  public statusArray = {\r\n    'A': {status: \"Active\", style: \"primary\"},\r\n    'I': {status: \"Inactive\", style: \"accent\"}\r\n  };\r\n\r\n  public pageSize = 10;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getClients();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getClients() {\r\n    this.getItemSub = this.clientService.getClients().subscribe(successResp => {\r\n      this.clients = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n\r\n    let title = isNew ? \"Add new client\" : \"Update client\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      ClientTablePopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data }\r\n      }\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      this.loader.open();\r\n      if (isNew) {\r\n        \r\n      let users: UserData[] = [];\r\n      users.push(new UserData(res.username, res.email));\r\n      const req: ClientCreateReq = new ClientCreateReq(res.name, res.description, users);\r\n\r\n        this.clientService.addClient(req).subscribe(\r\n          response => {\r\n            this.getClients();\r\n            this.clients = response;\r\n            this.loader.close();\r\n            this.snack.open(\"New Client added !\", \"OK\", { duration: 4000 });\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n\r\n        const req: ClientUpdateReq= new ClientUpdateReq(res.name, res.description);\r\n\r\n        this.clientService.updateClient(data.id, req).subscribe(\r\n          response => {\r\n            this.getClients();\r\n            this.loader.close();\r\n            this.snack.open(\"Client Updated!\", \"OK\", { duration: 4000 });\r\n            return this.clients.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateUserTable(res: any) {\r\n    let extraParam: NavigationExtras = {\r\n      queryParams: {\r\n        id: res.id,\r\n        name: res.name\r\n      }\r\n    };\r\n    this.router.navigate([\"clients/user-table\"], extraParam);\r\n  }\r\n\r\n  \r\n}\r\n\r\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"username\\\" [formControl]=\\\"itemForm.controls['username']\\\" placeholder=\\\"User Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\"  *ngIf=\\\"formStatus\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"password\\\" type=\\\"password\\\" [formControl]=\\\"itemForm.controls['password']\\\" positiveNumberAndLetterOnly\\r\\n            placeholder=\\\"Password\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"email\\\" [formControl]=\\\"itemForm.controls['email']\\\" placeholder=\\\"Email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [formControl]=\\\"itemForm.controls['role']\\\" placeholder=\\\"Select A User Role\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let roles of roles\\\" [value]=\\\"roles.id\\\">{{roles.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-table-popup',\r\n  templateUrl: './user-table-popup.component.html'\r\n})\r\nexport class UserTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public roles: any[];\r\n  public formStatus = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<UserTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload);\r\n\r\n    this.roles = this.data.roles;\r\n\r\n  }\r\n\r\n  buildItemForm(item) {\r\n\r\n    let role = null;\r\n    if (item.id === undefined) {\r\n      this.formStatus = true;\r\n    } else {\r\n      role = item.roles[0].id;\r\n    }\r\n\r\n\r\n    this.itemForm = this.fb.group({\r\n      username: new FormControl(item.userName || '', Validators.required),\r\n      password: new FormControl(item.password || '', Validators.required),\r\n      email: new FormControl(item.email || '', [Validators.required, Validators.email]),\r\n      role: new FormControl(role, Validators.required)\r\n    })\r\n\r\n    if (item.id !== undefined) {\r\n      role = item.roles[0].id;\r\n      this.itemForm.get('password').clearValidators();\r\n      this.itemForm.get('password').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"card-title-text\\\">Users</div>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div class=\\\"sub_table_header\\\">{{this.name}}</div>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <div class=\\\"m-333\\\">\\r\\n      <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"openPopUp({}, true)\\\">Add User</button>\\r\\n      <span fxFlex></span>\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"users\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n      \\r\\n      <ngx-datatable-column name=\\\"\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"80\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <img mat-list-avatar class=\\\"\\\" src=\\\"assets/images/face-1.jpg\\\" alt=\\\"\\\"\\r\\n            style=\\\"flex-shrink: 0; width: 40px; height: 40px; border-radius: 50%; object-fit: cover;\\\">\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.userName }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Email\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.email }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Role\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <mat-chip mat-sm-chip color=\\\"warn\\\" [selected]=\\\"true\\\">{{row?.roles[0].name}}</mat-chip>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Status\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <mat-chip mat-sm-chip color=\\\"{{statusArray[row?.status]}}\\\" [selected]=\\\"true\\\">{{row?.status}}</mat-chip>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"200\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openPopUp(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <!-- <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteItem(row)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button> -->\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component, OnInit} from '@angular/core';\r\nimport { ClientService } from \"../../client.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppLoaderService } from \"../../../../shared/services/app-loader/app-loader.service\";\r\nimport { UserTablePopupComponent } from \"../user-table/user-table-popup/user-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../../shared/services/app-error/app-error.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserCreateReq, ClientData, UserRole } from 'app/model/ClientModel.model';\r\n\r\n@Component({\r\n  selector: 'app-user-table',\r\n  templateUrl: './user-table.component.html',\r\n  animations: egretAnimations\r\n})\r\nexport class UserTableComponent implements OnInit {\r\n\r\n  public clientId;\r\n  public users: any[];\r\n  public roles: any[];\r\n  public statusArray = {\r\n    'Active': \"primary\",\r\n    'Inactive': \"accent\"\r\n  };\r\n  public pageSize = 10;\r\n  public name;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private activeRoute: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activeRoute.queryParams.subscribe(params => {\r\n      this.clientId = params[\"id\"];\r\n      this.name = params[\"name\"];\r\n    });\r\n\r\n    this.getUsers();\r\n    this.getUserRoles();\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getUsers() {\r\n    this.getItemSub = this.clientService.getUsers(this.clientId).subscribe(successResp => {\r\n      console.log(successResp.content);\r\n      \r\n      this.users = successResp.content.users;\r\n\r\n    },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserRoles() {\r\n    this.getItemSub = this.clientService.getRoles().subscribe(successResp => {\r\n\r\n      successResp.content.forEach((item, index) => {\r\n        if (item.name === \"Super Administrator\") successResp.content.splice(index, 1);\r\n      });\r\n      this.roles = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n\r\n    let title = isNew ? \"Add new User\" : \"Update User\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      UserTablePopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, roles: this.roles }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      let roles: UserRole[] = [];\r\n      roles.push(new UserRole(res.role));\r\n      const client: ClientData = new ClientData(this.clientId);\r\n      const req: UserCreateReq = new UserCreateReq(res.username, res.password, res.email, roles, client);\r\n\r\n      this.loader.open();\r\n      if (isNew) {\r\n\r\n        this.clientService.addUser(req).subscribe(\r\n          response => {\r\n            this.getUsers();\r\n            this.loader.close();\r\n            this.snack.open(\"New User added !\", \"OK\", { duration: 4000 });\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.clientService.updateUser(data.id, req).subscribe(\r\n          response => {\r\n            this.getUsers();\r\n            this.loader.close();\r\n            this.snack.open(\"User Updated!\", \"OK\", { duration: 4000 });\r\n            // return this.users.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","module.exports = \"<mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n  <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<mat-dialog-content class=\\\"mat-typography mt-1\\\" style=\\\"overflow: unset; max-height: unset;\\\">\\r\\n  <form [formGroup]=\\\"roleFormGroup\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput required formControlName=\\\"name\\\" placeholder=\\\"Role Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput required formControlName=\\\"description\\\" placeholder=\\\"Description\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <span>Select Role Authorities</span>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-tab-group>\\r\\n        <div *ngFor=\\\"let module of this.componentList; let i = index\\\">\\r\\n          <mat-tab label=\\\"{{module.moduleName}}\\\">\\r\\n            <form [formGroup]=\\\"authoritiesFormGroup\\\">\\r\\n              <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" style=\\\"padding-top: 5px;\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n                <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\" style=\\\"padding-top: 5px;\\\" *ngFor=\\\"let item of module.data\\\">\\r\\n                  <mat-checkbox [checked]=\\\"item.checked\\\" (change)=\\\"onChange(item.id, module.moduleName, item.key, $event.checked)\\\" class=\\\"full-width\\\" value=\\\"{{item.key}}\\\">{{item.name}}</mat-checkbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n        </div>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"this.selectedAuthorities.length == 0 || roleFormGroup.invalid\\\" (click)=\\\"submit()\\\">Save</button>\\r\\n  <span fxFlex></span>\\r\\n  <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { ClientService } from '../../client.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-role-table-popup',\r\n  templateUrl: './role-table-popup.component.html'\r\n})\r\nexport class RoleTablePopupComponent implements OnInit {\r\n  public authoritiesFormGroup: FormGroup;\r\n  public roleFormGroup: FormGroup;\r\n  //Raveen : need to implement a custom directive for the pattern validation\r\n  //public codeRegex = '/^-?[0-9]+(\\.[0-9]*){0,1}$/g';\r\n  public componentList = [];\r\n  public numberOfComponent = this.componentList.length - 1;\r\n  public selectedAuthorities: Array<any> = [];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<RoleTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n    private clientService: ClientService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildRoleForms(this.data.payload);\r\n    this.buildauthoritiesForm();\r\n    this.getAllAuthorities();\r\n  }\r\n\r\n  /*\r\n  * Build New Role Form Group\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  buildRoleForms(item) {\r\n    this.roleFormGroup = this.fb.group({\r\n      name: [item.name || '', Validators.required],\r\n      description: [item.description || '', Validators.required]\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Create New User Role Authorities Form Group\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  buildauthoritiesForm() {\r\n    this.authoritiesFormGroup = this.fb.group({\r\n      data: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Form Data Submit\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  submit() {\r\n    const roleFormValue = this.roleFormGroup.value;\r\n    const roleData = {\r\n      name: roleFormValue.name,\r\n      description: roleFormValue.description,\r\n      authorities: this.selectedAuthorities\r\n    };\r\n    this.dialogRef.close(roleData);\r\n  }\r\n\r\n  /*\r\n  * Check box onchange function for get selected check box value\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  onChange(id: String, name: String, auth_key: String, isChecked: boolean) {\r\n    const dataArray = <FormArray>this.authoritiesFormGroup.controls.data;\r\n    if (isChecked) {\r\n      dataArray.push(new FormControl(auth_key));\r\n      const tempJson = {\r\n        id: id\r\n      };\r\n      this.selectedAuthorities.push(tempJson);\r\n    } else {\r\n      const index = dataArray.controls.findIndex(x => x.value === auth_key);\r\n      dataArray.removeAt(index);\r\n      const i = this.selectedAuthorities.indexOf(id);\r\n      this.selectedAuthorities.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Set Selected role authorities when update popup window open\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  setSelectedRoleAuthorities() {\r\n    if (this.data.payload.hasOwnProperty('authorities')) {\r\n      const temList = this.componentList;\r\n      temList.forEach(element => {\r\n        element.data.forEach(data => {\r\n          if (data.checked) {\r\n            const tempJson = {\r\n              id: data.id\r\n            };\r\n            this.selectedAuthorities.push(tempJson);\r\n          }\r\n        });\r\n      });\r\n      // console.log('-------------- setSelectedRoleAuthorities -------------------');\r\n      // console.log(this.selectedAuthorities);\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Get All Authorities\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getAllAuthorities() {\r\n    this.clientService.getAllAuthorities()\r\n      .subscribe(\r\n        response => {\r\n          this.createComponentArray(response.content);\r\n        }\r\n      );\r\n  }\r\n\r\n  /*\r\n  * Create Componet tab view data array\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  createComponentArray(dataArray: any) {\r\n    dataArray.forEach(data => {\r\n      const name = this.getModuleName(data.code);\r\n      if (name === 'Clients') {\r\n        const i = this.componentList.findIndex(x => x.moduleName === name);\r\n        const status =  this.setSelectedAuthorities(data.id);\r\n        if (i < 0) {\r\n          const tempdata = data;\r\n          tempdata['checked'] = status;\r\n          this.componentList.push({\r\n            moduleName: name,\r\n            data: [tempdata]\r\n          });\r\n        }else {\r\n          const tempdata = data;\r\n          tempdata['checked'] = status;\r\n          this.componentList[i].data.push(tempdata);\r\n        }\r\n      }\r\n    });\r\n    // console.log('--------------- component list --------------------');\r\n    // console.log(this.componentList);\r\n    this.setSelectedRoleAuthorities();\r\n  }\r\n\r\n  /*\r\n  * Get module name according to the code\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getModuleName(code): any {\r\n    const x = code.split('-');\r\n    if (x[0] === 'pc' || x[0] === 'pur' || x[0] === 'pu') {\r\n      return 'Clients';\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /*\r\n  * Set Selected Authorities checke function\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  setSelectedAuthorities(id): boolean {\r\n    let status = false;\r\n    if (this.data.payload.hasOwnProperty('authorities')) {\r\n      const dataArray = this.data.payload.authorities;\r\n      dataArray.forEach(elements => {\r\n        if (elements.id === id) {\r\n          status = true;\r\n        }\r\n      });\r\n    }\r\n    return status;\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-title>\\r\\n    <div class=\\\"card-title-text\\\">Roles</div>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <div class=\\\"m-333\\\">\\r\\n      <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"openPopUp({}, true)\\\">Add Role</button>\\r\\n      <span fxFlex></span>\\r\\n      <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n      <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n        <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n        <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n      </mat-select>\\r\\n    </div>\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n    <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"items\\\" [columnMode]=\\\"'flex'\\\" [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n      <ngx-datatable-column name=\\\"Role Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Role Description\\\" [flexGrow]=\\\"2\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Last Modified Date\\\" [flexGrow]=\\\"2\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.lastModifiedDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"editRole(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteRole(row)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n    </ngx-datatable>\\r\\n\\r\\n\\r\\n    <!-- <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"pl-1\\\">Feedback Topic</th>\\r\\n          <th>Feedback Type</th>\\r\\n          <th>Start Date</th>\\r\\n          <th>End Date</th>\\r\\n          <th width=\\\"150px\\\" class=\\\"\\\">Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let row of rows;\\\">\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">{{row?.topic}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{row?.type =='P' ? 'Product' : 'E Vote'}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{row?.startDate}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{row?.endDate}}</td>\\r\\n          <td class=\\\"pt-1 pb-1 pr-1\\\">\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)='navigateSurveyBuilder(row)' color=\\\"primary\\\" class=\\\"\\\">\\r\\n                  <mat-icon>view_headline</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)='openSurveyPopup(row,false)' color=\\\"primary\\\" class=\\\"\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)=\\\"deleteSurvey(row)\\\" color=\\\"warn\\\" class=\\\"\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">\\r\\n            <div class=\\\"pagination\\\">{{totalRecords}} Total</div>\\r\\n          </td>\\r\\n          <td colspan=\\\"4\\\">\\r\\n\\r\\n            <nav aria-label=\\\"Page navigation example\\\">\\r\\n              <ul class=\\\"pagination\\\" *ngIf=\\\"totalPages.length > 1\\\">\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber <= 1}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageSurvey(pageNumber-1);\\\" aria-label=\\\"Previous\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Previous</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let page of totalPages\\\" [ngClass]=\\\"{'active':pageNumber === page}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageSurvey(page);\\\">\\r\\n                    {{page}}\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber >= totalPages.length}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageSurvey(pageNumber+1);\\\" aria-label=\\\"Next\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Next</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table> -->\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ClientService } from \"../client.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { RoleTablePopupComponent } from \"./role-table-popup/role-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { NavigationExtras, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-role-table\",\r\n  templateUrl: \"./role-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class RoleTableComponent implements OnInit, OnDestroy {\r\n  public items: any[];\r\n  public pageSize = 10;\r\n\r\n  public componentList = [];\r\n  public editRoleId: String;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Get All Roles And Create to the Ngx table\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  getItems() {\r\n    this.getItemSub = this.clientService.getAllUserRoles().subscribe(\r\n      response => {\r\n        // console.log('-------------- get all roles response--------------');\r\n        // console.log(response);\r\n        this.items = response.content;\r\n      },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n  * Open Create and Update Role popup window\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Create New User Role\" : \"Update User Role\";\r\n    data['isNew'] = isNew;\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      RoleTablePopupComponent,\r\n      {\r\n        width: \"900px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n      this.loader.open();\r\n      if (isNew) {\r\n        // console.log('------------ create user role object ---------------');\r\n        // console.log(res);\r\n        this.clientService.createNewRole(res).subscribe(response => {\r\n          // console.log('--------------- create user role response ----------------');\r\n          // console.log(response);\r\n          this.snack.open('User Role Created', 'close', {\r\n            duration: 2000\r\n          });\r\n          this.getItems();\r\n        });\r\n      } else {\r\n        // console.log('------------ update user role object ---------------');\r\n        res['localizedName'] = '';\r\n        // console.log(res);\r\n        this.clientService.updateRloe(this.editRoleId, res)\r\n          .subscribe(response => {\r\n            // console.log('--------------- create user role response ----------------');\r\n            // console.log(response);\r\n            this.snack.open('User Role Updated', 'close', {\r\n              duration: 2000\r\n            });\r\n            this.getItems();\r\n          });\r\n      }\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Edit User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  editRole(role) {\r\n    // console.log('------------- edit role ----------------');\r\n    // console.log(role);\r\n    this.editRoleId = role.id;\r\n    this.clientService.getOneRoleAuthorities(role.id)\r\n      .subscribe(response => {\r\n        // console.log(response.content);\r\n        const roleData = {\r\n          name: response.content.name,\r\n          description: response.content.description,\r\n          authorities: response.content.authorities\r\n        };\r\n        this.openPopUp(roleData, false);\r\n      });\r\n  }\r\n\r\n  /*\r\n  * Delete User Role\r\n  * Created by Prasad Kumara\r\n  * 14/02/2019\r\n  */\r\n  deleteRole(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.name}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          // this.loader.open();\r\n          this.getItems();\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}