(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["views-survey-survey-module"],{

/***/ "./src/app/model/SurveyRequest.model.ts":
/*!**********************************************!*\
  !*** ./src/app/model/SurveyRequest.model.ts ***!
  \**********************************************/
/*! exports provided: SurveyModel, Question, AnswerTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyModel", function() { return SurveyModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Question", function() { return Question; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnswerTemplate", function() { return AnswerTemplate; });
var SurveyModel = /** @class */ (function () {
    function SurveyModel(obj) {
        var _this = this;
        this.questions = [];
        this.topic = obj.topic;
        this.type = obj.type;
        this.startDate = obj.startDate;
        this.endDate = obj.endDate;
        this.productId = obj.productId;
        this.voteId = obj.voteId;
        obj.questions.forEach(function (question) {
            var answerTemplate = new AnswerTemplate("name", question.answerTemplate);
            var qOBj = new Question(question.name, answerTemplate);
            console.log(qOBj);
            _this.questions.unshift(qOBj);
        });
    }
    return SurveyModel;
}());

var Question = /** @class */ (function () {
    //answerTemplate
    function Question(name, answerTemplate) {
        this.name = name;
        this.answerTemplate = answerTemplate;
    }
    return Question;
}());

var AnswerTemplate = /** @class */ (function () {
    function AnswerTemplate(name, id) {
        this.name = name;
        this.id = id;
    }
    return AnswerTemplate;
}());



/***/ }),

/***/ "./src/app/shared/fake-db/location-db.ts":
/*!***********************************************!*\
  !*** ./src/app/shared/fake-db/location-db.ts ***!
  \***********************************************/
/*! exports provided: CanadaLocation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CanadaLocation", function() { return CanadaLocation; });
var CanadaLocation = /** @class */ (function () {
    function CanadaLocation() {
        this.provinces = {
            "AB": "ALBERTA",
            "BC": "BRITISH COLUMBIA",
            "MB": "MANITOBA",
            "NB": "NEW BRUNSWICK",
            "NL": "NEWFOUNDLAND AND LABRADOR",
            "NS": "NOVA SCOTIA",
            "ON": "ONTARIO",
            "PE": "PRINCE EDWARD ISLAND",
            "QC": "QUEBEC",
            "SK": "SASKATCHEWAN"
        };
        this.cities = [
            ["100 MILE HOUSE", "BC"],
            ["108 MILE RANCH", "BC"],
            ["150 MILE HOUSE", "BC"],
            ["70 MILE HOUSE", "BC"],
            ["ABBEY", "SK"],
            ["ABBOTSFORD", "BC"],
            ["ABEE", "AB"],
            ["ABERCORN", "QC"],
            ["ABERDEEN", "SK"],
            ["ABERNETHY", "SK"],
            ["ACADIA VALLEY", "AB"],
            ["ACADIE SIDING", "NB"],
            ["ACADIEVILLE", "NB"],
            ["ACHESON", "AB"],
            ["ACME", "AB"],
            ["ACTON VALE", "QC"],
            ["ACTON", "ON"],
            ["ADAMS GULCH", "NB"],
            ["ADAMSVILLE", "NB"],
            ["ADDISON", "ON"],
            ["ADEN", "AB"],
            ["ADMIRAL ROCK", "NS"],
            ["ADMIRAL", "SK"],
            ["ADSTOCK", "QC"],
            ["ADVOCATE HARBOUR", "NS"],
            ["AETNA", "AB"],
            ["AFTON STATION", "NS"],
            ["AGASSIZ", "BC"],
            ["AGUANISH", "QC"],
            ["AGUATHUNA", "NL"],
            ["AHMIC HARBOUR", "ON"],
            ["AHOUSAT", "BC"],
            ["AILSA CRAIG", "ON"],
            ["AINSWORTH HOT SPRINGS", "BC"],
            ["AIR RONGE", "SK"],
            ["AIRDRIE", "AB"],
            ["AIYANSH", "BC"],
            ["AJAX", "ON"],
            ["AKLAVIK", "NT"],
            ["AKULIVIK", "QC"],
            ["AKWESASNE", "ON"],
            ["AKWESASNE", "QC"],
            ["ALAMEDA", "SK"],
            ["ALBAN", "ON"],
            ["ALBANEL", "QC"],
            ["ALBANY", "PE"],
            ["ALBERT BRIDGE", "NS"],
            ["ALBERT MINES", "NB"],
            ["ALBERTA BEACH", "AB"],
            ["ALBERTON", "ON"],
            ["ALBERTON", "PE"],
            ["ALBERTVILLE", "QC"],
            ["ALBERTVILLE", "SK"],
            ["ALBRIGHTS CORNER", "NB"],
            ["ALCIDA", "NB"],
            ["ALCOMDALE", "AB"],
            ["ALCOVE", "QC"],
            ["ALDER FLATS", "AB"],
            ["ALDER POINT", "NS"],
            ["ALDERGROVE", "BC"],
            ["ALDERSYDE", "AB"],
            ["ALDERWOOD", "NB"],
            ["ALDOUANE", "NB"],
            ["ALERT BAY", "BC"],
            ["ALEXANDER", "MB"],
            ["ALEXANDRIA", "ON"],
            ["ALEXIS CREEK", "BC"],
            ["ALFRED", "ON"],
            ["ALGOMA MILLS", "ON"],
            ["ALHAMBRA", "AB"],
            ["ALIDA", "SK"],
            ["ALIX", "AB"],
            ["ALKALI LAKE", "BC"],
            ["ALLAINVILLE", "NB"],
            ["ALLAN", "SK"],
            ["ALLANBURG", "ON"],
            ["ALLARDVILLE", "NB"],
            ["ALLENFORD", "ON"],
            ["ALLIANCE", "AB"],
            ["ALLISON", "NB"],
            ["ALLISTON", "ON"],
            ["ALMA", "NB"],
            ["ALMA", "ON"],
            ["ALMA", "QC"],
            ["ALMONTE", "ON"],
            ["ALONSA", "MB"],
            ["ALOUETTE", "QC"],
            ["ALSASK", "SK"],
            ["ALSIKE", "AB"],
            ["ALTAMONT", "MB"],
            ["ALTARIO", "AB"],
            ["ALTICANE", "SK"],
            ["ALTON", "NS"],
            ["ALTON", "ON"],
            ["ALTONA", "BC"],
            ["ALTONA", "MB"],
            ["ALVENA", "SK"],
            ["ALVINSTON", "ON"],
            ["AMARANTH", "MB"],
            ["AMELIASBURG", "ON"],
            ["AMHERST", "NS"],
            ["AMHERST", "QC"],
            ["AMHERSTBURG", "ON"],
            ["AMHERSTVIEW", "ON"],
            ["AMISK", "AB"],
            ["AMMON", "NB"],
            ["AMOS", "QC"],
            ["AMQUI", "QC"],
            ["ANAGANCE", "NB"],
            ["ANAHIM LAKE", "BC"],
            ["ANCASTER", "ON"],
            ["ANCHOR POINT", "NL"],
            ["ANDERSON ROAD", "NB"],
            ["ANDERSON SETTLEMENT", "NB"],
            ["ANDERSONVILLE", "NB"],
            ["ANDREW", "AB"],
            ["ANEROID", "SK"],
            ["ANFIELD", "NB"],
            ["ANGE-GARDIEN", "QC"],
            ["ANGLEMONT", "BC"],
            ["ANGLIERS", "QC"],
            ["ANGLING LAKE", "ON"],
            ["ANGUS", "ON"],
            ["ANGUSVILLE", "MB"],
            ["ANJOU", "QC"],
            ["ANMORE", "BC"],
            ["ANNAHEIM", "SK"],
            ["ANNAN", "ON"],
            ["ANNAPOLIS ROYAL", "NS"],
            ["ANOLA", "MB"],
            ["ANSE-BLEUE", "NB"],
            ["ANTIGONISH", "NS"],
            ["ANTLER", "SK"],
            ["ANTRIM", "NS"],
            ["ANZAC", "AB"],
            ["APOHAQUI", "NB"],
            ["APPIN", "ON"],
            ["APPLE HILL", "ON"],
            ["APSLEY", "ON"],
            ["AQUAFORTE", "NL"],
            ["ARBEAU SETTLEMENT", "NB"],
            ["ARBORFIELD", "SK"],
            ["ARBORG", "MB"],
            ["ARCADIA", "NS"],
            ["ARCHERWILL", "SK"],
            ["ARCOLA", "SK"],
            ["ARCTIC BAY", "NU"],
            ["ARDATH", "SK"],
            ["ARDEN", "MB"],
            ["ARDEN", "ON"],
            ["ARDILL", "SK"],
            ["ARDMORE", "AB"],
            ["ARDOCH", "ON"],
            ["ARDROSSAN", "AB"],
            ["ARELEE", "SK"],
            ["ARGENTA", "BC"],
            ["ARGYLE", "MB"],
            ["ARICHAT", "NS"],
            ["ARISS", "ON"],
            ["ARKELL", "ON"],
            ["ARKONA", "ON"],
            ["ARMAGH", "QC"],
            ["ARMENA", "AB"],
            ["ARMOND", "NB"],
            ["ARMSTRONG STATION", "ON"],
            ["ARMSTRONG", "BC"],
            ["ARNAUD", "MB"],
            ["ARNES", "MB"],
            ["ARNOLDS COVE", "NL"],
            ["ARNPRIOR", "ON"],
            ["ARNSTEIN", "ON"],
            ["ARNTFIELD", "QC"],
            ["AROLAND", "ON"],
            ["AROOSTOOK JUNCTION", "NB"],
            ["AROOSTOOK", "NB"],
            ["ARRAN", "SK"],
            ["ARRAS", "BC"],
            ["ARROW RIVER", "MB"],
            ["ARROWWOOD", "AB"],
            ["ARTHUR", "ON"],
            ["ARTHURETTE", "NB"],
            ["ARUNDEL", "QC"],
            ["ARVA", "ON"],
            ["ARVIAT", "NU"],
            ["ASBESTOS", "QC"],
            ["ASCOT CORNER", "QC"],
            ["ASHBURN", "ON"],
            ["ASHCROFT", "BC"],
            ["ASHERN", "MB"],
            ["ASHLAND", "NB"],
            ["ASHMONT", "AB"],
            ["ASHTON", "ON"],
            ["ASHVILLE", "MB"],
            ["ASKILTON", "NS"],
            ["ASPEN COVE", "NL"],
            ["ASPEN", "NS"],
            ["ASQUITH", "SK"],
            ["ASSINIBOIA", "SK"],
            ["ASTLE", "NB"],
            ["ASTON-JONCTION", "QC"],
            ["ASTORVILLE", "ON"],
            ["ASTRA", "ON"],
            ["ATHABASCA", "AB"],
            ["ATHALMER", "BC"],
            ["ATHELSTAN", "QC"],
            ["ATHENS", "ON"],
            ["ATHOLVILLE", "NB"],
            ["ATIKAMEG", "AB"],
            ["ATIKOKAN", "ON"],
            ["ATLIN", "BC"],
            ["ATMORE", "AB"],
            ["ATTAWAPISKAT", "ON"],
            ["ATWATER", "SK"],
            ["ATWOOD", "ON"],
            ["AUBIGNY", "MB"],
            ["AUBURN", "NS"],
            ["AUBURN", "ON"],
            ["AUBURNDALE", "NS"],
            ["AUCLAIR", "QC"],
            ["AUDET", "QC"],
            ["AULAC", "NB"],
            ["AUMOND", "QC"],
            ["AUPALUK", "QC"],
            ["AURORA", "ON"],
            ["AUSTIN", "MB"],
            ["AUSTIN", "QC"],
            ["AUTHIER", "QC"],
            ["AUTHIER-NORD", "QC"],
            ["AVOLA", "BC"],
            ["AVONDALE", "NB"],
            ["AVONDALE", "NL"],
            ["AVONHURST", "SK"],
            ["AVONLEA", "SK"],
            ["AVONMORE", "ON"],
            ["AVONPORT", "NS"],
            ["AYER'S CLIFF", "QC"],
            ["AYLESBURY", "SK"],
            ["AYLESFORD", "NS"],
            ["AYLMER", "ON"],
            ["AYLSHAM", "SK"],
            ["AYR", "ON"],
            ["AYTON", "ON"],
            ["AZILDA", "ON"],
            ["BACCARO", "NS"],
            ["BACK BAY", "NB"],
            ["BADDECK", "NS"],
            ["BADEN", "ON"],
            ["BADGER", "NL"],
            ["BADGERS QUAY", "NL"],
            ["BADJEROS", "ON"],
            ["BAGOT", "MB"],
            ["BAIE DE BOUCTOUCHE", "NB"],
            ["BAIE DE PETIT-POKEMOUCHE", "NB"],
            ["BAIE VERTE", "NB"],
            ["BAIE VERTE", "NL"],
            ["BAIE-COMEAU", "QC"],
            ["BAIE-D'URFE", "QC"],
            ["BAIE-DES-SABLES", "QC"],
            ["BAIE-DU-FEBVRE", "QC"],
            ["BAIE-JOHAN-BEETZ", "QC"],
            ["BAIE-SAINT-PAUL", "QC"],
            ["BAIE-SAINTE-ANNE", "NB"],
            ["BAIE-SAINTE-CATHERINE", "QC"],
            ["BAIE-TRINITE", "QC"],
            ["BAILIEBORO", "ON"],
            ["BAILLIE", "NB"],
            ["BAINE HARBOUR", "NL"],
            ["BAINS CORNER", "NB"],
            ["BAINSVILLE", "ON"],
            ["BAIRDSVILLE", "NB"],
            ["BAKER BROOK", "NB"],
            ["BAKER LAKE", "NU"],
            ["BAKER SETTLEMENT", "NS"],
            ["BALA", "ON"],
            ["BALCARRES", "SK"],
            ["BALD ROCK", "NS"],
            ["BALDERSON", "ON"],
            ["BALDONNEL", "BC"],
            ["BALDUR", "MB"],
            ["BALDWIN", "ON"],
            ["BALDWINTON", "SK"],
            ["BALFOUR", "BC"],
            ["BALGONIE", "SK"],
            ["BALLA PHILIP", "NB"],
            ["BALLINAFAD", "ON"],
            ["BALLS CREEK", "NS"],
            ["BALMERTOWN", "ON"],
            ["BALMORAL EST", "NB"],
            ["BALMORAL SUD", "NB"],
            ["BALMORAL", "MB"],
            ["BALMORAL", "NB"],
            ["BALTIMORE", "NB"],
            ["BALTIMORE", "ON"],
            ["BALZAC", "AB"],
            ["BAMFIELD", "BC"],
            ["BANCROFT", "ON"],
            ["BANFF", "AB"],
            ["BANGOR", "SK"],
            ["BANKEND", "SK"],
            ["BANNON", "NB"],
            ["BARACHOIS BROOK", "NL"],
            ["BARACHOIS", "QC"],
            ["BARKERVILLE", "BC"],
            ["BARKMERE", "QC"],
            ["BARNABY", "NB"],
            ["BARNESVILLE", "NB"],
            ["BARNETTVILLE", "NB"],
            ["BARNEYS RIVER STATION", "NS"],
            ["BARNWELL", "AB"],
            ["BARONS", "AB"],
            ["BARONY", "NB"],
            ["BARR SETTLEMENT", "NS"],
            ["BARRA GLEN", "NS"],
            ["BARRACHOIS", "NS"],
            ["BARRAUTE", "QC"],
            ["BARRHEAD", "AB"],
            ["BARRIE", "ON"],
            ["BARRIERE", "BC"],
            ["BARRINGTON PASSAGE", "NS"],
            ["BARRINGTON", "NS"],
            ["BARROWS", "MB"],
            ["BARRYS BAY", "ON"],
            ["BARRYVILLE", "NB"],
            ["BARSS CORNER", "NS"],
            ["BARTER SETTLEMENT", "NB"],
            ["BARTHEL", "SK"],
            ["BARTHOLOMEW", "NB"],
            ["BARTIBOG BRIDGE", "NB"],
            ["BARTIBOG", "NB"],
            ["BARTLETTS HARBOUR", "NL"],
            ["BARTLETTS MILLS", "NB"],
            ["BARTON", "NS"],
            ["BARWICK", "ON"],
            ["BAS-CAP-PELE", "NB"],
            ["BAS-CARAQUET", "NB"],
            ["BAS-PAQUETVILLE", "NB"],
            ["BASHAW", "AB"],
            ["BASS RIVER", "NB"],
            ["BASS RIVER", "NS"],
            ["BASSANO", "AB"],
            ["BASSIN", "QC"],
            ["BASSWOOD RIDGE", "NB"],
            ["BATAWA", "ON"],
            ["BATCHAWANA BAY", "ON"],
            ["BATEMAN", "SK"],
            ["BATESTON", "NS"],
            ["BATH", "NB"],
            ["BATH", "ON"],
            ["BATHURST", "NB"],
            ["BATISCAN", "QC"],
            ["BATTERSEA", "ON"],
            ["BATTLEFORD", "SK"],
            ["BAULINE", "NL"],
            ["BAWLF", "AB"],
            ["BAXTERS CORNER", "NB"],
            ["BAY BULLS", "NL"],
            ["BAY CHIMO", "NU"],
            ["BAY DE VERDE", "NL"],
            ["BAY DU VIN", "NB"],
            ["BAY L'ARGENT", "NL"],
            ["BAY ROBERTS", "NL"],
            ["BAY TREE", "AB"],
            ["BAY VIEW", "NB"],
            ["BAYFIELD", "NB"],
            ["BAYFIELD", "ON"],
            ["BAYSIDE", "NB"],
            ["BAYSIDE", "NS"],
            ["BAYSVILLE", "ON"],
            ["BAYSWATER", "NB"],
            ["BAYTONA", "NL"],
            ["BEACHBURG", "ON"],
            ["BEACHSIDE", "NL"],
            ["BEACHVILLE", "ON"],
            ["BEACONIA", "MB"],
            ["BEACONSFIELD", "NB"],
            ["BEACONSFIELD", "QC"],
            ["BEAMSVILLE", "ON"],
            ["BEAR CANYON", "AB"],
            ["BEAR COVE", "NS"],
            ["BEAR ISLAND", "NB"],
            ["BEAR ISLAND", "ON"],
            ["BEAR LAKE", "BC"],
            ["BEAR RIVER", "NS"],
            ["BEARDMORE", "ON"],
            ["BEARDSLEY", "NB"],
            ["BEARN", "QC"],
            ["BEARSKIN LAKE", "ON"],
            ["BEATTY", "SK"],
            ["BEAUBIER", "SK"],
            ["BEAUCANTON", "QC"],
            ["BEAUCEVILLE", "QC"],
            ["BEAUHARNOIS", "QC"],
            ["BEAULAC-GARTHBY", "QC"],
            ["BEAUMONT", "AB"],
            ["BEAUMONT", "NL"],
            ["BEAUMONT", "QC"],
            ["BEAUPRE", "QC"],
            ["BEAUSEJOUR", "MB"],
            ["BEAUVAL", "SK"],
            ["BEAUVALLON", "AB"],
            ["BEAVER BANK", "NS"],
            ["BEAVER BROOK", "NS"],
            ["BEAVER COVE", "NS"],
            ["BEAVER CREEK", "SK"],
            ["BEAVER CREEK", "YT"],
            ["BEAVER DAM", "NB"],
            ["BEAVER HARBOUR", "NB"],
            ["BEAVERBROOK ALBERT CO", "NB"],
            ["BEAVERBROOK", "NB"],
            ["BEAVERDELL", "BC"],
            ["BEAVERLODGE", "AB"],
            ["BEAVERTON", "ON"],
            ["BECANCOUR", "QC"],
            ["BECKIM SETTLEMENT", "NB"],
            ["BEDELL", "NB"],
            ["BEDEQUE", "PE"],
            ["BEDFORD", "NS"],
            ["BEDFORD", "QC"],
            ["BEECHMONT", "NS"],
            ["BEECHVILLE", "NS"],
            ["BEECHWOOD", "NB"],
            ["BEECHY", "SK"],
            ["BEERSVILLE", "NB"],
            ["BEETON", "ON"],
            ["BEGIN", "QC"],
            ["BEHCHOKO", "NT"],
            ["BEISEKER", "AB"],
            ["BELAIR", "MB"],
            ["BELCARRA", "BC"],
            ["BELCOURT", "QC"],
            ["BELFAST", "PE"],
            ["BELFOUNTAIN", "ON"],
            ["BELGRAVE", "ON"],
            ["BELL ISLAND FRONT", "NL"],
            ["BELL ISLAND", "NL"],
            ["BELLA BELLA", "BC"],
            ["BELLA COOLA", "BC"],
            ["BELLBURNS", "NL"],
            ["BELLE COTE", "NS"],
            ["BELLE EWART", "ON"],
            ["BELLE PLAINE", "SK"],
            ["BELLE RIVER", "ON"],
            ["BELLE RIVER", "PE"],
            ["BELLE VALLEE", "ON"],
            ["BELLECOMBE", "QC"],
            ["BELLEDUNE", "NB"],
            ["BELLEFOND", "NB"],
            ["BELLEGARDE", "SK"],
            ["BELLEISLE CREEK", "NB"],
            ["BELLEORAM", "NL"],
            ["BELLETERRE", "QC"],
            ["BELLEVIEW", "MB"],
            ["BELLEVILLE", "NB"],
            ["BELLEVILLE", "ON"],
            ["BELLEVUE", "AB"],
            ["BELLEVUE", "NL"],
            ["BELLIS", "AB"],
            ["BELLIVEAU COVE", "NS"],
            ["BELMONT", "MB"],
            ["BELMONT", "NS"],
            ["BELMONT", "ON"],
            ["BELNAN", "NS"],
            ["BELOEIL", "QC"],
            ["BELWOOD", "ON"],
            ["BEN EOIN", "NS"],
            ["BENACADIE", "NS"],
            ["BENALTO", "AB"],
            ["BENGOUGH", "SK"],
            ["BENITO", "MB"],
            ["BENJAMIN RIVER", "NB"],
            ["BENOIT", "NB"],
            ["BENOITS COVE", "NL"],
            ["BENSON", "SK"],
            ["BENTLEY", "AB"],
            ["BENTON", "NB"],
            ["BENTON", "NL"],
            ["BERENS RIVER", "MB"],
            ["BERESFORD", "NB"],
            ["BERKELEY", "ON"],
            ["BERRY MILLS", "NB"],
            ["BERRY", "QC"],
            ["BERRYTON", "NB"],
            ["BERTHIER-SUR-MER", "QC"],
            ["BERTHIERVILLE", "QC"],
            ["BERTRAND", "NB"],
            ["BERWICK", "NB"],
            ["BERWICK", "NS"],
            ["BERWICK", "ON"],
            ["BERWYN", "AB"],
            ["BETHANIE", "QC"],
            ["BETHANY", "MB"],
            ["BETHANY", "ON"],
            ["BETHEL", "NB"],
            ["BETHUNE", "SK"],
            ["BETSIAMITES", "QC"],
            ["BETTSBURG", "NB"],
            ["BEULAH", "MB"],
            ["BEWDLEY", "ON"],
            ["BEZANSON", "AB"],
            ["BIBLE HILL", "NS"],
            ["BICKERTON WEST", "NS"],
            ["BIDE ARM", "NL"],
            ["BIENCOURT", "QC"],
            ["BIENFAIT", "SK"],
            ["BIG BEACH", "NS"],
            ["BIG BEAVER", "SK"],
            ["BIG BRAS D'OR", "NS"],
            ["BIG COVE QUEENS CO", "NB"],
            ["BIG HOLE", "NB"],
            ["BIG LAKE RANCH", "BC"],
            ["BIG LAKE", "NS"],
            ["BIG POND CENTRE", "NS"],
            ["BIG POND", "NS"],
            ["BIG RIDGE", "NS"],
            ["BIG RIVER", "NB"],
            ["BIG RIVER", "SK"],
            ["BIG STONE", "AB"],
            ["BIG TROUT LAKE", "ON"],
            ["BIG VALLEY", "AB"],
            ["BIGGAR", "SK"],
            ["BINBROOK", "ON"],
            ["BINDLOSS", "AB"],
            ["BINSCARTH", "MB"],
            ["BIRCH GROVE", "NS"],
            ["BIRCH HILL", "NS"],
            ["BIRCH HILLS", "SK"],
            ["BIRCH ISLAND", "ON"],
            ["BIRCH RIDGE", "NB"],
            ["BIRCH RIVER", "MB"],
            ["BIRCHCLIFF", "AB"],
            ["BIRCHY BAY", "NL"],
            ["BIRCHY HEAD", "NL"],
            ["BIRD COVE", "NL"],
            ["BIRDTON", "NB"],
            ["BIRNIE", "MB"],
            ["BIRSAY", "SK"],
            ["BIRTLE", "MB"],
            ["BISCOTASING", "ON"],
            ["BISHOPS FALLS", "NL"],
            ["BISHOPTON", "QC"],
            ["BISSETT CREEK", "ON"],
            ["BISSETT", "MB"],
            ["BITTERN LAKE", "AB"],
            ["BJORKDALE", "SK"],
            ["BLACK BROOK", "NS"],
            ["BLACK CREEK", "BC"],
            ["BLACK DIAMOND", "AB"],
            ["BLACK DUCK COVE", "NL"],
            ["BLACK DUCK SIDING", "NL"],
            ["BLACK LAKE", "SK"],
            ["BLACK POINT", "NB"],
            ["BLACK POINT", "NS"],
            ["BLACK RIVER BRIDGE", "NB"],
            ["BLACK RIVER", "NB"],
            ["BLACK ROCK", "NB"],
            ["BLACK ROCK", "NS"],
            ["BLACK TICKLE", "NL"],
            ["BLACKETTS LAKE", "NS"],
            ["BLACKFALDS", "AB"],
            ["BLACKFOOT", "AB"],
            ["BLACKIE", "AB"],
            ["BLACKLAND RESTIGOUCHE CO", "NB"],
            ["BLACKS HARBOUR", "NB"],
            ["BLACKSTOCK", "ON"],
            ["BLACKVILLE", "NB"],
            ["BLADWORTH", "SK"],
            ["BLAINE LAKE", "SK"],
            ["BLAINVILLE", "QC"],
            ["BLAIR ATHOL", "NB"],
            ["BLAIRMORE", "AB"],
            ["BLAKETOWN", "NL"],
            ["BLANC-SABLON", "QC"],
            ["BLANDFORD", "NS"],
            ["BLENHEIM", "ON"],
            ["BLEZARD VALLEY", "ON"],
            ["BLIND BAY", "BC"],
            ["BLIND BAY", "NS"],
            ["BLIND CHANNEL", "BC"],
            ["BLIND RIVER", "ON"],
            ["BLISSFIELD", "NB"],
            ["BLOCKHOUSE", "NS"],
            ["BLOODVEIN", "MB"],
            ["BLOOMFIELD CARLETON CO", "NB"],
            ["BLOOMFIELD KINGS CO", "NB"],
            ["BLOOMFIELD RIDGE", "NB"],
            ["BLOOMFIELD STATION", "PE"],
            ["BLOOMFIELD", "NL"],
            ["BLOOMFIELD", "ON"],
            ["BLOOMINGDALE", "ON"],
            ["BLOOMSBURY", "AB"],
            ["BLUBBER BAY", "BC"],
            ["BLUE BELL", "NB"],
            ["BLUE MOUNTAIN BEND", "NB"],
            ["BLUE MOUNTAINS", "ON"],
            ["BLUE RIDGE", "AB"],
            ["BLUE RIVER", "BC"],
            ["BLUE SEA", "QC"],
            ["BLUEBERRY MOUNTAIN", "AB"],
            ["BLUESKY", "AB"],
            ["BLUEVALE", "ON"],
            ["BLUFFTON", "AB"],
            ["BLUMENHOF", "SK"],
            ["BLUMENORT", "MB"],
            ["BLYTH", "ON"],
            ["BLYTHESWOOD", "ON"],
            ["BOAT HARBOUR WEST", "NL"],
            ["BOBCAYGEON", "ON"],
            ["BOCABEC", "NB"],
            ["BODO", "AB"],
            ["BOGGY CREEK", "MB"],
            ["BOGNOR", "ON"],
            ["BOIESTOWN", "NB"],
            ["BOILEAU", "QC"],
            ["BOIS-BLANC", "NB"],
            ["BOIS-DES-FILION", "QC"],
            ["BOIS-FRANC", "QC"],
            ["BOIS-GAGNON", "NB"],
            ["BOISBRIAND", "QC"],
            ["BOISCHATEL", "QC"],
            ["BOISDALE", "NS"],
            ["BOISSEVAIN", "MB"],
            ["BOLSOVER", "ON"],
            ["BOLTON", "ON"],
            ["BOLTON-EST", "QC"],
            ["BOLTON-OUEST", "QC"],
            ["BON ACCORD", "AB"],
            ["BON ACCORD", "NB"],
            ["BON-CONSEIL", "QC"],
            ["BONANZA", "AB"],
            ["BONAVENTURE", "QC"],
            ["BONAVISTA", "NL"],
            ["BOND HEAD", "ON"],
            ["BONFIELD", "ON"],
            ["BONNE BAY POND", "NL"],
            ["BONNE BAY", "NL"],
            ["BONNY RIVER", "NB"],
            ["BONNYVILLE", "AB"],
            ["BONSECOURS", "QC"],
            ["BONSHAW", "PE"],
            ["BOOM ROAD", "NB"],
            ["BORDEN", "ON"],
            ["BORDEN", "SK"],
            ["BORDEN-CARLETON", "PE"],
            ["BORNHOLM", "ON"],
            ["BOSTON BAR", "BC"],
            ["BOSWELL", "BC"],
            ["BOTHA", "AB"],
            ["BOTHWELL", "ON"],
            ["BOTWOOD", "NL"],
            ["BOUCHERVILLE", "QC"],
            ["BOUCHETTE", "QC"],
            ["BOUCTOUCHE COVE", "NB"],
            ["BOUCTOUCHE RESERVE", "NB"],
            ["BOUCTOUCHE SUD", "NB"],
            ["BOUCTOUCHE", "NB"],
            ["BOUDREAU-OUEST", "NB"],
            ["BOULANGER", "QC"],
            ["BOULARDERIE CENTER", "NS"],
            ["BOULARDERIE EAST", "NS"],
            ["BOULTER", "ON"],
            ["BOUNDARY CREEK", "NB"],
            ["BOURGET", "ON"],
            ["BOUTILIERS POINT", "NS"],
            ["BOW ISLAND", "AB"],
            ["BOWDEN", "AB"],
            ["BOWEN ISLAND", "BC"],
            ["BOWMAN", "QC"],
            ["BOWMANVILLE", "ON"],
            ["BOWSER", "BC"],
            ["BOWSMAN", "MB"],
            ["BOYDS COVE", "NL"],
            ["BOYLE", "AB"],
            ["BOYLSTON", "NS"],
            ["BOYNE LAKE", "AB"],
            ["BRACEBRIDGE", "ON"],
            ["BRACKEN", "SK"],
            ["BRACKENDALE", "BC"],
            ["BRADFORD", "ON"],
            ["BRADOR", "QC"],
            ["BRADWARDINE", "MB"],
            ["BRADWELL", "SK"],
            ["BRAESIDE", "ON"],
            ["BRAGG CREEK", "AB"],
            ["BRAMPTON", "ON"],
            ["BRANCH LAHAVE", "NS"],
            ["BRANCH", "NL"],
            ["BRANCHTON", "ON"],
            ["BRANDON", "MB"],
            ["BRANT", "AB"],
            ["BRANTFORD", "ON"],
            ["BRANTVILLE", "NB"],
            ["BRAS D'OR", "NS"],
            ["BREADALBANE", "NB"],
            ["BREADALBANE", "PE"],
            ["BREBEUF", "QC"],
            ["BRECHIN", "ON"],
            ["BREDENBURY", "SK"],
            ["BRENTS COVE", "NL"],
            ["BRENTWOOD BAY", "BC"],
            ["BRENTWOOD", "NS"],
            ["BRESLAU", "ON"],
            ["BRETON", "AB"],
            ["BREWERS MILL", "NB"],
            ["BREYNAT", "AB"],
            ["BRIDESVILLE", "BC"],
            ["BRIDGE LAKE", "BC"],
            ["BRIDGENORTH", "ON"],
            ["BRIDGEPORT", "NL"],
            ["BRIDGETOWN", "NS"],
            ["BRIDGEWATER", "NS"],
            ["BRIERCREST", "SK"],
            ["BRIGDEN", "ON"],
            ["BRIGGS CORNER QUEENS CO", "NB"],
            ["BRIGHAM", "QC"],
            ["BRIGHT SAND", "SK"],
            ["BRIGHT", "ON"],
            ["BRIGHT'S GROVE", "ON"],
            ["BRIGHTON", "NL"],
            ["BRIGHTON", "ON"],
            ["BRIGUS JUNCTION", "NL"],
            ["BRIGUS", "NL"],
            ["BRINSTON", "ON"],
            ["BRISCO", "BC"],
            ["BRISTOL JUNCTION", "NB"],
            ["BRISTOL", "QC"],
            ["BRITANNIA BEACH", "BC"],
            ["BRITISH SETTLEMENT", "NB"],
            ["BRITT", "ON"],
            ["BROAD COVE BDV", "NL"],
            ["BROAD VALLEY", "MB"],
            ["BROADVIEW", "SK"],
            ["BROCHET", "MB"],
            ["BROCK", "SK"],
            ["BROCKET", "AB"],
            ["BROCKINGTON", "SK"],
            ["BROCKVILLE", "ON"],
            ["BROCKWAY", "NB"],
            ["BRODERICK", "SK"],
            ["BRODHAGEN", "ON"],
            ["BROME", "QC"],
            ["BROMHEAD", "SK"],
            ["BROMONT", "QC"],
            ["BRONSON SETTLEMENT", "NB"],
            ["BROOKDALE", "MB"],
            ["BROOKFIELD", "NL"],
            ["BROOKFIELD", "NS"],
            ["BROOKLYN", "NS"],
            ["BROOKS", "AB"],
            ["BROOKSBY", "SK"],
            ["BROOKSIDE", "NS"],
            ["BROOKSIDE.", "NS"],
            ["BROOKVILLE", "NB"],
            ["BROSSARD", "QC"],
            ["BROSSEAU", "AB"],
            ["BROUGHAM", "ON"],
            ["BROUGHTON", "NS"],
            ["BROWNFIELD", "AB"],
            ["BROWNLEE", "SK"],
            ["BROWNS FLAT", "NB"],
            ["BROWNS YARD", "NB"],
            ["BROWNSBURG-CHATHAM", "QC"],
            ["BROWNSDALE", "NL"],
            ["BROWNSVILLE", "ON"],
            ["BROWNVALE", "AB"],
            ["BRUCE MINES", "ON"],
            ["BRUCE", "AB"],
            ["BRUCEFIELD", "ON"],
            ["BRUDERHEIM", "AB"],
            ["BRULE", "AB"],
            ["BRUNKILD", "MB"],
            ["BRUNNER", "ON"],
            ["BRUNO", "SK"],
            ["BRUNSWICK MINES", "NB"],
            ["BRUSSELS", "ON"],
            ["BRUXELLES", "MB"],
            ["BRYENTON", "NB"],
            ["BRYSON", "QC"],
            ["BUBARTOWN", "NB"],
            ["BUCHANAN", "SK"],
            ["BUCHANS JUNCTION", "NL"],
            ["BUCHANS", "NL"],
            ["BUCK CREEK", "AB"],
            ["BUCK LAKE", "AB"],
            ["BUCKFIELD", "NS"],
            ["BUCKHORN", "ON"],
            ["BUCKLAND", "QC"],
            ["BUENA VISTA", "SK"],
            ["BUFFALO CREEK", "BC"],
            ["BUFFALO HEAD PRAIRIE", "AB"],
            ["BUFFALO NARROWS", "SK"],
            ["BUFFALO POINT", "MB"],
            ["BUFFALO", "AB"],
            ["BUICK", "BC"],
            ["BULL LAKE", "NB"],
            ["BULLS CREEK", "NB"],
            ["BULYEA", "SK"],
            ["BUNYANS COVE", "NL"],
            ["BURDETT", "AB"],
            ["BURFORD", "ON"],
            ["BURGEO", "NL"],
            ["BURGESSVILLE", "ON"],
            ["BURGOYNES COVE", "NL"],
            ["BURIN BAY ARM", "NL"],
            ["BURIN", "NL"],
            ["BURKS FALLS", "ON"],
            ["BURLINGTON", "NL"],
            ["BURLINGTON", "ON"],
            ["BURNABY", "BC"],
            ["BURNS LAKE", "BC"],
            ["BURNSIDE", "NL"],
            ["BURNSTOWN", "ON"],
            ["BURNSVILLE", "NB"],
            ["BURNT CHURCH FIRST NATION", "NB"],
            ["BURNT CHURCH", "NB"],
            ["BURNT HILL", "NB"],
            ["BURNT ISLANDS BLP", "NL"],
            ["BURNT POINT BDV", "NL"],
            ["BURNT RIVER", "ON"],
            ["BURNTLAND BROOK", "NB"],
            ["BURPEE", "NB"],
            ["BURR", "SK"],
            ["BURRITTS RAPIDS", "ON"],
            ["BURSTALL", "SK"],
            ["BURTON", "BC"],
            ["BURTON", "NB"],
            ["BURTTS CORNER", "NB"],
            ["BURWASH LANDING", "YT"],
            ["BURY", "QC"],
            ["BUSBY", "AB"],
            ["BUSHELL PARK", "SK"],
            ["BYEMOOR", "AB"],
            ["BYNG INLET", "ON"],
            ["CABANO", "QC"],
            ["CABRI", "SK"],
            ["CACHE BAY", "ON"],
            ["CACHE CREEK", "BC"],
            ["CACOUNA", "QC"],
            ["CACTUS LAKE", "SK"],
            ["CADILLAC", "QC"],
            ["CADILLAC", "SK"],
            ["CADOGAN", "AB"],
            ["CADOMIN", "AB"],
            ["CADOTTE LAKE", "AB"],
            ["CAESAREA", "ON"],
            ["CAILS MILLS", "NB"],
            ["CAINS RIVER", "NB"],
            ["CAISSIE ROAD", "NB"],
            ["CAISTOR CENTRE", "ON"],
            ["CAITHNESS", "NB"],
            ["CALABOGIE", "ON"],
            ["CALAHOO", "AB"],
            ["CALAIS", "AB"],
            ["CALDER", "SK"],
            ["CALDERS HEAD", "NB"],
            ["CALEDON EAST", "ON"],
            ["CALEDON VILLAGE", "ON"],
            ["CALEDON", "ON"],
            ["CALEDONIA MOUNTAIN", "NB"],
            ["CALEDONIA", "NS"],
            ["CALEDONIA", "ON"],
            ["CALGARY", "AB"],
            ["CALHOUN", "NB"],
            ["CALIFORNIA SETTLEMENT", "NB"],
            ["CALIXA-LAVALLEE", "QC"],
            ["CALLANDER", "ON"],
            ["CALLING LAKE", "AB"],
            ["CALMAR", "AB"],
            ["CALVERT", "NL"],
            ["CAMBRAY", "ON"],
            ["CAMBRIDGE BAY", "NU"],
            ["CAMBRIDGE", "NS"],
            ["CAMBRIDGE", "ON"],
            ["CAMBRIDGE-NARROWS", "NB"],
            ["CAMDEN EAST", "ON"],
            ["CAMDEN", "NS"],
            ["CAMERON", "ON"],
            ["CAMLACHIE", "ON"],
            ["CAMP CREEK", "AB"],
            ["CAMP MORTON", "MB"],
            ["CAMPBELL RIVER", "BC"],
            ["CAMPBELL SETTLEMENT YORK CO", "NB"],
            ["CAMPBELL SETTLEMENT", "NB"],
            ["CAMPBELL'S BAY", "QC"],
            ["CAMPBELLCROFT", "ON"],
            ["CAMPBELLFORD", "ON"],
            ["CAMPBELLTON", "NB"],
            ["CAMPBELLTON", "NL"],
            ["CAMPBELLVILLE", "ON"],
            ["CAMPDEN", "ON"],
            ["CAMPERDOWN", "NS"],
            ["CAMPERVILLE", "MB"],
            ["CAMROSE", "AB"],
            ["CANAAN FORKS", "NB"],
            ["CANAAN STATION", "NB"],
            ["CANAL FLATS", "BC"],
            ["CANAL", "NB"],
            ["CANDIAC", "QC"],
            ["CANDIAC", "SK"],
            ["CANDLE LAKE", "SK"],
            ["CANDO", "SK"],
            ["CANFIELD", "ON"],
            ["CANIM LAKE", "BC"],
            ["CANISTO", "NB"],
            ["CANMORE", "AB"],
            ["CANNIFTON", "ON"],
            ["CANNING", "NS"],
            ["CANNINGS COVE", "NL"],
            ["CANNINGTON", "ON"],
            ["CANOBIE", "NB"],
            ["CANOE NARROWS", "SK"],
            ["CANOE", "BC"],
            ["CANOOSE", "NB"],
            ["CANORA", "SK"],
            ["CANSO", "NS"],
            ["CANTERBURY", "NB"],
            ["CANTLEY", "QC"],
            ["CANTON BEDFORD", "QC"],
            ["CANTON DES BASQUES", "NB"],
            ["CANTON STANSTEAD", "QC"],
            ["CANTON TREMBLAY", "QC"],
            ["CANTON-DE-HATLEY", "QC"],
            ["CANWOOD", "SK"],
            ["CANYON CREEK", "AB"],
            ["CANYON", "BC"],
            ["CAP-AU-RENARD", "QC"],
            ["CAP-AUX-MEULES", "QC"],
            ["CAP-BATEAU", "NB"],
            ["CAP-CHAT", "QC"],
            ["CAP-CHAT-EST", "QC"],
            ["CAP-D'ESPOIR", "QC"],
            ["CAP-PELE", "NB"],
            ["CAP-SAINT-IGNACE", "QC"],
            ["CAP-SANTE", "QC"],
            ["CAPE BROYLE", "NL"],
            ["CAPE DAUPHIN", "NS"],
            ["CAPE DORSET", "NU"],
            ["CAPE ENRAGE", "NB"],
            ["CAPE FREELS NORTH", "NL"],
            ["CAPE NEGRO", "NS"],
            ["CAPE NORTH", "NS"],
            ["CAPE RAY", "NL"],
            ["CAPE SPEAR", "NB"],
            ["CAPE ST GEORGE", "NL"],
            ["CAPE STATION", "NB"],
            ["CAPE TORMENTINE", "NB"],
            ["CAPLAN", "QC"],
            ["CAPLIN COVE BDV", "NL"],
            ["CAPPAHAYDEN", "NL"],
            ["CAPREOL", "ON"],
            ["CAPSTICK", "NS"],
            ["CAPUCINS", "QC"],
            ["CARAMAT", "ON"],
            ["CARAQUET", "NB"],
            ["CARBERRY", "MB"],
            ["CARBON", "AB"],
            ["CARBONEAR", "NL"],
            ["CARCAJOU", "AB"],
            ["CARCROSS", "YT"],
            ["CARDALE", "MB"],
            ["CARDIFF", "ON"],
            ["CARDIGAN", "NB"],
            ["CARDIGAN", "PE"],
            ["CARDINAL", "ON"],
            ["CARDROSS", "SK"],
            ["CARDSTON", "AB"],
            ["CARGILL", "ON"],
            ["CARIBOU MARSH", "NS"],
            ["CARIEVALE", "SK"],
            ["CARIGNAN", "QC"],
            ["CARLETON PLACE", "ON"],
            ["CARLETON", "NS"],
            ["CARLETON", "QC"],
            ["CARLINGFORD", "NB"],
            ["CARLISLE", "NB"],
            ["CARLISLE", "ON"],
            ["CARLOW", "NB"],
            ["CARLOWRIE", "MB"],
            ["CARLSBAD SPRINGS", "ON"],
            ["CARLTON", "SK"],
            ["CARLYLE", "SK"],
            ["CARMACKS", "YT"],
            ["CARMAN", "MB"],
            ["CARMANGAY", "AB"],
            ["CARMANVILLE", "NL"],
            ["CARMEL", "SK"],
            ["CARNARVON", "ON"],
            ["CARNDUFF", "SK"],
            ["CARNWOOD", "AB"],
            ["CAROLINE", "AB"],
            ["CARON", "SK"],
            ["CARONPORT", "SK"],
            ["CARP", "ON"],
            ["CARRAGANA", "SK"],
            ["CARROL RIDGE", "NB"],
            ["CARROLL", "MB"],
            ["CARROLLS CORNER", "NS"],
            ["CARROLLS CROSSING", "NB"],
            ["CARROT CREEK", "AB"],
            ["CARROT RIVER", "SK"],
            ["CARRYING PLACE", "ON"],
            ["CARSELAND", "AB"],
            ["CARSONVILLE", "NB"],
            ["CARSTAIRS", "AB"],
            ["CARTERS COVE", "NL"],
            ["CARTERS POINT", "NB"],
            ["CARTIER", "MB"],
            ["CARTIER", "ON"],
            ["CARTWRIGHT", "MB"],
            ["CARTWRIGHT", "NL"],
            ["CARTYVILLE", "NL"],
            ["CARVEL", "AB"],
            ["CASA RIO", "SK"],
            ["CASCAPEDIA-SAINT-JULES", "QC"],
            ["CASLAN", "AB"],
            ["CASSELMAN", "ON"],
            ["CASSIDY LAKE", "NB"],
            ["CASSIDY", "BC"],
            ["CASSILIS", "NB"],
            ["CASTLE BAY", "NS"],
            ["CASTLEGAR", "BC"],
            ["CASTLETON", "ON"],
            ["CASTOR", "AB"],
            ["CASTORS RIVER", "NL"],
            ["CAT LAKE", "ON"],
            ["CATALINA", "NL"],
            ["CATALONE GUT", "NS"],
            ["CATALONE", "NS"],
            ["CATHCART", "ON"],
            ["CAUSAPSCAL", "QC"],
            ["CAVAN", "ON"],
            ["CAVENDISH", "NL"],
            ["CAWSTON", "BC"],
            ["CAYER", "MB"],
            ["CAYLEY", "AB"],
            ["CAYUGA", "ON"],
            ["CAZAVILLE", "QC"],
            ["CECIL LAKE", "BC"],
            ["CEDAR CAMP", "NB"],
            ["CEDAR POINT", "ON"],
            ["CEDAR SPRINGS", "ON"],
            ["CEDAR VALLEY", "ON"],
            ["CEDARVALE", "BC"],
            ["CELISTA", "BC"],
            ["CENTRAL BEDEQUE", "PE"],
            ["CENTRAL BLISSVILLE", "NB"],
            ["CENTRAL BUTTE", "SK"],
            ["CENTRAL GREENWICH", "NB"],
            ["CENTRAL HAINESVILLE", "NB"],
            ["CENTRAL HAMPSTEAD", "NB"],
            ["CENTRAL NORTH RIVER", "NS"],
            ["CENTRAL ONSLOW", "NS"],
            ["CENTRAL WATERVILLE", "NB"],
            ["CENTRALIA", "ON"],
            ["CENTRE BURLINGTON", "NS"],
            ["CENTRE VILLAGE", "NB"],
            ["CENTREVILLE", "NB"],
            ["CENTREVILLE", "NS"],
            ["CENTREVILLE", "ON"],
            ["CEREAL", "AB"],
            ["CESSFORD", "AB"],
            ["CEYLON", "SK"],
            ["CHALK RIVER", "ON"],
            ["CHAMBERLAIN SETTLEMENT", "NB"],
            ["CHAMBERLAIN", "SK"],
            ["CHAMBERS SETTLEMENT", "NB"],
            ["CHAMBLY", "QC"],
            ["CHAMBORD", "QC"],
            ["CHAMCOOK", "NB"],
            ["CHAMPION", "AB"],
            ["CHAMPLAIN", "QC"],
            ["CHAMPNEUF", "QC"],
            ["CHANCE COVE", "NL"],
            ["CHANCE HARBOUR", "NB"],
            ["CHANDLER", "QC"],
            ["CHANGE ISLANDS", "NL"],
            ["CHANNEL-PORT-AUX-BASQUES", "NL"],
            ["CHANNING", "MB"],
            ["CHAPAIS", "QC"],
            ["CHAPEAU", "QC"],
            ["CHAPEL ARM", "NL"],
            ["CHAPEL COVE", "NL"],
            ["CHAPLEAU", "ON"],
            ["CHAPLIN ISLAND ROAD", "NB"],
            ["CHAPLIN", "SK"],
            ["CHAPUT HUGHES", "ON"],
            ["CHARD", "AB"],
            ["CHARETTE", "QC"],
            ["CHARING CROSS", "ON"],
            ["CHARLEMAGNE", "QC"],
            ["CHARLESTON", "NB"],
            ["CHARLESTON", "NL"],
            ["CHARLIE LAKE", "BC"],
            ["CHARLIE LAKE", "NB"],
            ["CHARLO SOUTH", "NB"],
            ["CHARLO", "NB"],
            ["CHARLOTTETOWN LAB", "NL"],
            ["CHARLOTTETOWN", "NL"],
            ["CHARLOTTETOWN", "PE"],
            ["CHARLTON", "ON"],
            ["CHARNY", "QC"],
            ["CHARTERS SETTLEMENT", "NB"],
            ["CHARTIERVILLE", "QC"],
            ["CHASE", "BC"],
            ["CHASWOOD", "NS"],
            ["CHATEAU-RICHER", "QC"],
            ["CHATEAUGUAY", "QC"],
            ["CHATEH", "AB"],
            ["CHATFIELD", "MB"],
            ["CHATHAM", "ON"],
            ["CHATSWORTH", "ON"],
            ["CHAUVIN", "AB"],
            ["CHAZEL", "QC"],
            ["CHELAN", "SK"],
            ["CHELMSFORD", "NB"],
            ["CHELMSFORD", "ON"],
            ["CHELSEA", "NS"],
            ["CHELSEA", "QC"],
            ["CHELTENHAM", "ON"],
            ["CHEMAINUS", "BC"],
            ["CHENEVILLE", "QC"],
            ["CHEPSTOW", "ON"],
            ["CHERHILL", "AB"],
            ["CHERRY BROOK", "NS"],
            ["CHERRY BURTON", "NB"],
            ["CHERRY GROVE", "AB"],
            ["CHERRY POINT", "AB"],
            ["CHERRY VALLEY", "ON"],
            ["CHERRYVILLE", "BC"],
            ["CHERTSEY", "QC"],
            ["CHESLEY", "ON"],
            ["CHESTER BASIN", "NS"],
            ["CHESTER", "NS"],
            ["CHESTERFIELD INLET", "NU"],
            ["CHESTERMERE", "AB"],
            ["CHESTERVILLE", "ON"],
            ["CHESTERVILLE", "QC"],
            ["CHETICAMP", "NS"],
            ["CHETWYND", "BC"],
            ["CHEVERIE", "NS"],
            ["CHEVERY", "QC"],
            ["CHIASSON OFFICE", "NB"],
            ["CHIBOUGAMAU", "QC"],
            ["CHICOUTIMI", "QC"],
            ["CHILANKO FORKS", "BC"],
            ["CHILDS CREEK", "NB"],
            ["CHILLIWACK", "BC"],
            ["CHINOOK", "AB"],
            ["CHIPMAN", "AB"],
            ["CHIPMAN", "NB"],
            ["CHISASIBI", "QC"],
            ["CHISHOLM MILLS", "AB"],
            ["CHITEK LAKE", "SK"],
            ["CHOCOLATE COVE", "NB"],
            ["CHOICELAND", "SK"],
            ["CHOMEDEY", "QC"],
            ["CHRISTINA LAKE", "BC"],
            ["CHRISTMAS ISLAND", "NS"],
            ["CHRISTOPHER LAKE", "SK"],
            ["CHURCH POINT", "NS"],
            ["CHURCHBRIDGE", "SK"],
            ["CHURCHILL FALLS", "NL"],
            ["CHURCHILL", "MB"],
            ["CHURCHILL", "ON"],
            ["CHUTE A BLONDEAU", "ON"],
            ["CHUTE-AUX-OUTARDES", "QC"],
            ["CHUTE-SAINT-PHILIPPE", "QC"],
            ["CLAIR", "NB"],
            ["CLAIR", "SK"],
            ["CLAIRMONT", "AB"],
            ["CLAIRVILLE", "NB"],
            ["CLAM POINT", "NS"],
            ["CLANDEBOYE", "MB"],
            ["CLANDONALD", "AB"],
            ["CLANWILLIAM", "MB"],
            ["CLAREMONT", "ON"],
            ["CLARENCE CREEK", "ON"],
            ["CLARENCEVILLE", "QC"],
            ["CLARENDON STATION", "ON"],
            ["CLARENDON", "NB"],
            ["CLARENVILLE", "NL"],
            ["CLARESHOLM", "AB"],
            ["CLARKE CITY", "QC"],
            ["CLARKES BEACH", "NL"],
            ["CLARKS CORNER", "NB"],
            ["CLARKS HARBOUR", "NS"],
            ["CLARKSBURG", "ON"],
            ["CLARKVILLE", "NB"],
            ["CLAVET", "SK"],
            ["CLAYBANK", "SK"],
            ["CLAYDON", "SK"],
            ["CLAYHURST", "BC"],
            ["CLAYTON", "ON"],
            ["CLEAR CREEK", "ON"],
            ["CLEARDALE", "AB"],
            ["CLEARVIEW", "NB"],
            ["CLEARWATER BAY", "ON"],
            ["CLEARWATER RIVER", "SK"],
            ["CLEARWATER", "BC"],
            ["CLEARWATER", "MB"],
            ["CLEMENTSPORT", "NS"],
            ["CLEMENTSVALE", "NS"],
            ["CLERICY", "QC"],
            ["CLERMONT", "QC"],
            ["CLERVAL", "QC"],
            ["CLEVELAND", "NS"],
            ["CLEVELAND", "QC"],
            ["CLIFFORD", "ON"],
            ["CLIFTON ROYAL", "NB"],
            ["CLIFTON", "NB"],
            ["CLIFTON", "NS"],
            ["CLIMAX", "SK"],
            ["CLINTON", "BC"],
            ["CLINTON", "ON"],
            ["CLIVE", "AB"],
            ["CLORIDORME", "QC"],
            ["CLOUTIER", "QC"],
            ["CLOVA", "QC"],
            ["CLOVER HILL", "NB"],
            ["CLOVER VALLEY", "NB"],
            ["CLOVERDALE", "NB"],
            ["CLOVERDALE", "NS"],
            ["CLOYNE", "ON"],
            ["CLUNY", "AB"],
            ["CLYDE RIVER", "NS"],
            ["CLYDE RIVER", "NU"],
            ["CLYDE", "AB"],
            ["COACHMANS COVE", "NL"],
            ["COAL BRANCH", "NB"],
            ["COAL CREEK", "NB"],
            ["COAL HARBOUR", "BC"],
            ["COALDALE", "AB"],
            ["COALHURST", "AB"],
            ["COALMONT", "BC"],
            ["COATICOOK", "QC"],
            ["COATSWORTH STATION", "ON"],
            ["COBALT", "ON"],
            ["COBBLE HILL", "BC"],
            ["COBDEN", "ON"],
            ["COBOCONK", "ON"],
            ["COBOURG", "ON"],
            ["COBURG", "NB"],
            ["COCAGNE", "NB"],
            ["COCHENOUR", "ON"],
            ["COCHIN", "SK"],
            ["COCHRANE", "AB"],
            ["COCHRANE", "ON"],
            ["CODERRE", "SK"],
            ["CODETTE", "SK"],
            ["CODRINGTON", "ON"],
            ["CODROY", "NL"],
            ["CODYS", "NB"],
            ["COE HILL", "ON"],
            ["COLBORNE", "ON"],
            ["COLD LAKE", "AB"],
            ["COLDBROOK", "NS"],
            ["COLDSTREAM", "BC"],
            ["COLDSTREAM", "NB"],
            ["COLDSTREAM", "NS"],
            ["COLDWATER", "ON"],
            ["COLE BAY", "SK"],
            ["COLE HARBOUR", "NS"],
            ["COLEMAN", "AB"],
            ["COLEMAN", "PE"],
            ["COLES ISLAND QUEENS CO", "NB"],
            ["COLEVILLE", "SK"],
            ["COLEYS POINT SOUTH", "NL"],
            ["COLFAX", "SK"],
            ["COLGATE", "SK"],
            ["COLINET", "NL"],
            ["COLINTON", "AB"],
            ["COLLEGE HEIGHTS", "AB"],
            ["COLLETTE", "NB"],
            ["COLLIERS RIVERHEAD", "NL"],
            ["COLLINA", "NB"],
            ["COLLINGWOOD CORNER", "NS"],
            ["COLLINGWOOD", "ON"],
            ["COLLINS", "ON"],
            ["COLOMBIER", "QC"],
            ["COLONSAY", "SK"],
            ["COLPITTS SETTLEMENT", "NB"],
            ["COLVILLE LAKE", "NT"],
            ["COMBER", "ON"],
            ["COMBERMERE", "ON"],
            ["COME BY CHANCE", "NL"],
            ["COMFORT COVE-NEWSTEAD", "NL"],
            ["COMMANDA", "ON"],
            ["COMOX", "BC"],
            ["COMPEER", "AB"],
            ["COMPTON", "QC"],
            ["CONCEPTION BAY SOUTH", "NL"],
            ["CONCEPTION HARBOUR", "NL"],
            ["CONCHE", "NL"],
            ["CONCORD", "ON"],
            ["CONDOR", "AB"],
            ["CONESTOGO", "ON"],
            ["CONGRESS", "SK"],
            ["CONISTON", "ON"],
            ["CONKLIN", "AB"],
            ["CONN", "ON"],
            ["CONNAUGHT", "ON"],
            ["CONNE RIVER", "NL"],
            ["CONNELL", "NB"],
            ["CONQUERALL BANK", "NS"],
            ["CONQUERALL MILLS", "NS"],
            ["CONQUEST", "SK"],
            ["CONSECON", "ON"],
            ["CONSORT", "AB"],
            ["CONSTANCE LAKE", "ON"],
            ["CONSUL", "SK"],
            ["CONTRECOEUR", "QC"],
            ["COOKING LAKE", "AB"],
            ["COOKS BROOK", "NS"],
            ["COOKS HARBOUR", "NL"],
            ["COOKSHIRE-EATON", "QC"],
            ["COOKSTOWN", "ON"],
            ["COOKVILLE", "NB"],
            ["COOKVILLE", "NS"],
            ["COOMBS", "BC"],
            ["COPETOWN", "ON"],
            ["COPPER CLIFF", "ON"],
            ["COPPERSANDS", "SK"],
            ["COQUITLAM", "BC"],
            ["CORAL HARBOUR", "NU"],
            ["CORBEIL", "ON"],
            ["CORBYVILLE", "ON"],
            ["CORMAC", "ON"],
            ["CORMACK", "NL"],
            ["CORMAN PARK", "SK"],
            ["CORMIER-VILLAGE", "NB"],
            ["CORMORANT", "MB"],
            ["CORNER BROOK", "NL"],
            ["CORNHILL", "NB"],
            ["CORNING", "SK"],
            ["CORNWALL", "ON"],
            ["CORNWALL", "PE"],
            ["CORNWALLIS", "NS"],
            ["CORONACH", "SK"],
            ["CORONATION", "AB"],
            ["CORUNNA", "ON"],
            ["COTE SAINT-LUC", "QC"],
            ["COTEAU ROAD", "NB"],
            ["COTEAU-DU-LAC", "QC"],
            ["COTTAM", "ON"],
            ["COTTLESVILLE", "NL"],
            ["COTTRELLS COVE", "NL"],
            ["COULTER", "MB"],
            ["COUNTY OF GRANDE PRAIRIE NO. 1", "AB"],
            ["COURCELETTE", "QC"],
            ["COURCELLES", "QC"],
            ["COURTENAY", "BC"],
            ["COURTICE", "ON"],
            ["COURTLAND", "ON"],
            ["COURTRIGHT", "ON"],
            ["COURVAL", "SK"],
            ["COUTTS", "AB"],
            ["COW BAY", "NS"],
            ["COW HEAD", "NL"],
            ["COWAN", "MB"],
            ["COWANSVILLE", "QC"],
            ["COWESSESS", "SK"],
            ["COWICHAN BAY", "BC"],
            ["COWLEY", "AB"],
            ["COXHEATH", "NS"],
            ["COXS COVE", "NL"],
            ["CRABTREE", "QC"],
            ["CRAIG FLATS", "NB"],
            ["CRAIGMORE", "NS"],
            ["CRAIGMYLE", "AB"],
            ["CRAIK", "SK"],
            ["CRANBERRY PORTAGE", "MB"],
            ["CRANBROOK", "BC"],
            ["CRANDALL ROAD", "NS"],
            ["CRANDALL", "MB"],
            ["CRANE RIVER", "MB"],
            ["CRANE VALLEY", "SK"],
            ["CRANFORD", "AB"],
            ["CRAPAUD", "PE"],
            ["CRAVEN", "SK"],
            ["CRAWFORD BAY", "BC"],
            ["CREDITON", "ON"],
            ["CREELMAN", "SK"],
            ["CREEMORE", "ON"],
            ["CREIGHTON", "SK"],
            ["CREIGNISH", "NS"],
            ["CREMONA", "AB"],
            ["CRESCENT SPUR", "BC"],
            ["CRESCENT VALLEY", "BC"],
            ["CRESTON NORTH", "NL"],
            ["CRESTON", "BC"],
            ["CRESTON", "NL"],
            ["CROCKER HILL", "NB"],
            ["CROFTON", "BC"],
            ["CROMBIE SETTLEMENT", "NB"],
            ["CROMER", "MB"],
            ["CROOKED CREEK", "AB"],
            ["CROOKED RIVER", "SK"],
            ["CROQUE", "NL"],
            ["CROSS CREEK", "NB"],
            ["CROSS LAKE", "MB"],
            ["CROSS ROADS COUNTRY HARBOUR", "NS"],
            ["CROSSFIELD", "AB"],
            ["CROTON", "ON"],
            ["CROUSES SETTLEMENT", "NS"],
            ["CROUSETOWN", "NS"],
            ["CROWELL", "NS"],
            ["CROWES MILLS", "NS"],
            ["CRYSLER", "ON"],
            ["CRYSTAL BEACH", "ON"],
            ["CRYSTAL CITY", "MB"],
            ["CRYSTAL FALLS", "ON"],
            ["CRYSTAL SPRINGS", "SK"],
            ["CUDWORTH", "SK"],
            ["CULTUS LAKE", "BC"],
            ["CUMBERLAND BAY", "NB"],
            ["CUMBERLAND BEACH", "ON"],
            ["CUMBERLAND HOUSE", "SK"],
            ["CUMBERLAND", "BC"],
            ["CUMBERLAND", "ON"],
            ["CUMMINGS COVE", "NB"],
            ["CUPAR", "SK"],
            ["CUPIDS", "NL"],
            ["CURRAN", "ON"],
            ["CURRIE SIDING", "NB"],
            ["CURRIEBURG", "NB"],
            ["CURRYS CORNER", "NS"],
            ["CURRYVILLE", "NB"],
            ["CURVE LAKE", "ON"],
            ["CURVENTON", "NB"],
            ["CUT KNIFE", "SK"],
            ["CUTLER", "ON"],
            ["CYMRIC", "SK"],
            ["CYNTHIA", "AB"],
            ["CYPRESS COUNTY", "AB"],
            ["CYPRESS RIVER", "MB"],
            ["CZAR", "AB"],
            ["D'ALEMBERT", "QC"],
            ["D'ARCY STATION", "SK"],
            ["D'ARCY", "BC"],
            ["D'ESCOUSSE", "NS"],
            ["DACOTAH", "MB"],
            ["DACRE", "ON"],
            ["DAFOE", "SK"],
            ["DAKOTA TIPI", "MB"],
            ["DALEM LAKE", "NS"],
            ["DALEMEAD", "AB"],
            ["DALHOUSIE JUNCTION", "NB"],
            ["DALHOUSIE", "NB"],
            ["DALHOUSIE", "QC"],
            ["DALKEITH", "ON"],
            ["DALLAS", "MB"],
            ["DALMAS", "QC"],
            ["DALMENY", "SK"],
            ["DAMASCUS", "NB"],
            ["DANBURY", "SK"],
            ["DANESVILLE", "NS"],
            ["DANFORD LAKE", "QC"],
            ["DANIELS HARBOUR", "NL"],
            ["DANVILLE", "QC"],
            ["DAPP", "AB"],
            ["DARFIELD", "BC"],
            ["DARLINGFORD", "MB"],
            ["DARLINGS ISLAND", "NB"],
            ["DARTMOUTH", "NS"],
            ["DARWELL", "AB"],
            ["DASHWOOD", "ON"],
            ["DAUPHIN", "MB"],
            ["DAUVERSIERE", "NB"],
            ["DAVELUYVILLE", "QC"],
            ["DAVIDSON", "QC"],
            ["DAVIDSON", "SK"],
            ["DAVIN", "SK"],
            ["DAWSON CREEK", "BC"],
            ["DAWSON SETTLEMENT", "NB"],
            ["DAWSON", "YT"],
            ["DAWSONS LANDING", "BC"],
            ["DAWSONVILLE", "NB"],
            ["DAYSLAND", "AB"],
            ["DAYSPRING", "NS"],
            ["DE WINTON", "AB"],
            ["DEAD CREEK", "NB"],
            ["DEAD MAN'S FLATS", "AB"],
            ["DEADMANS BAY", "NL"],
            ["DEADWOOD", "AB"],
            ["DEASE LAKE", "BC"],
            ["DEBDEN", "SK"],
            ["DEBEC", "NB"],
            ["DEBERT", "NS"],
            ["DEBOLT", "AB"],
            ["DECKER", "MB"],
            ["DEEP BAY", "NL"],
            ["DEEP BROOK", "NS"],
            ["DEEP RIVER", "ON"],
            ["DEER LAKE", "NL"],
            ["DEER LAKE", "ON"],
            ["DEER VALLEY", "SK"],
            ["DEERSDALE", "NB"],
            ["DEERVILLE", "NB"],
            ["DEGELIS", "QC"],
            ["DEL BONITA", "AB"],
            ["DELACOUR", "AB"],
            ["DELAWARE", "ON"],
            ["DELBURNE", "AB"],
            ["DELEAGE", "QC"],
            ["DELEAU", "MB"],
            ["DELHI", "ON"],
            ["DELIA", "AB"],
            ["DELINE", "NT"],
            ["DELISLE", "SK"],
            ["DELMAS", "SK"],
            ["DELORAINE", "MB"],
            ["DELSON", "QC"],
            ["DELTA", "BC"],
            ["DELTA", "ON"],
            ["DEMAINE", "SK"],
            ["DEMMITT", "AB"],
            ["DEMORESTVILLE", "ON"],
            ["DENARE BEACH", "SK"],
            ["DENBIGH", "ON"],
            ["DENFIELD", "ON"],
            ["DENHOLM", "QC"],
            ["DENHOLM", "SK"],
            ["DENMAN ISLAND", "BC"],
            ["DENNIS BEACH", "NB"],
            ["DENNY ISLAND", "BC"],
            ["DENSMORES MILLS", "NS"],
            ["DENWOOD", "AB"],
            ["DENZIL", "SK"],
            ["DERBY JUNCTION", "NB"],
            ["DERBY", "NB"],
            ["DEROCHE", "BC"],
            ["DERWENT", "AB"],
            ["DESBARATS", "ON"],
            ["DESBIENS", "QC"],
            ["DESBORO", "ON"],
            ["DESCHAILLONS-SUR-SAINT-LAURENT", "QC"],
            ["DESCHAMBAULT LAKE", "SK"],
            ["DESCHAMBAULT", "QC"],
            ["DESERONTO", "ON"],
            ["DESERT BLUME", "AB"],
            ["DESMARAISVILLE", "QC"],
            ["DESMELOIZES", "QC"],
            ["DESTOR", "QC"],
            ["DESTRUCTION BAY", "YT"],
            ["DEUX RIVIERES", "ON"],
            ["DEUX-MONTAGNES", "QC"],
            ["DEVLIN", "ON"],
            ["DEVON", "AB"],
            ["DEWBERRY", "AB"],
            ["DEWDNEY", "BC"],
            ["DEWITTVILLE", "QC"],
            ["DEWOLFE", "NB"],
            ["DIAMOND CITY", "AB"],
            ["DIDSBURY", "AB"],
            ["DIEPPE", "NB"],
            ["DIGBY", "NS"],
            ["DIGDEGUASH", "NB"],
            ["DILDO", "NL"],
            ["DILIGENT RIVER", "NS"],
            ["DILKE", "SK"],
            ["DILLON", "SK"],
            ["DINGWALL", "NS"],
            ["DINORWIC", "ON"],
            ["DINSMORE", "SK"],
            ["DIPPER HARBOUR", "NB"],
            ["DISRAELI", "QC"],
            ["DIVIDE", "NB"],
            ["DIXONVILLE", "AB"],
            ["DIXVILLE", "QC"],
            ["DOAKTOWN", "NB"],
            ["DOBBINTON", "ON"],
            ["DOBIE", "ON"],
            ["DOBSON CORNER", "NB"],
            ["DODSLAND", "SK"],
            ["DOG CREEK", "BC"],
            ["DOLBEAU-MISTASSINI", "QC"],
            ["DOLLARD", "SK"],
            ["DOLLARD-DES-ORMEAUX", "QC"],
            ["DOMAIN", "MB"],
            ["DOME CREEK", "BC"],
            ["DOMINION CITY", "MB"],
            ["DOMINION", "NS"],
            ["DOMREMY", "SK"],
            ["DONALDA", "AB"],
            ["DONEGAL", "NB"],
            ["DONKIN", "NS"],
            ["DONNACONA", "QC"],
            ["DONNELLY", "AB"],
            ["DORCHESTER CAPE", "NB"],
            ["DORCHESTER", "NB"],
            ["DORCHESTER", "ON"],
            ["DORINTOSH", "SK"],
            ["DORION", "ON"],
            ["DOROTHY", "AB"],
            ["DORRINGTON HILL", "NB"],
            ["DORSET", "ON"],
            ["DORVAL", "QC"],
            ["DOSQUET", "QC"],
            ["DOUGLAS HARBOUR", "NB"],
            ["DOUGLAS LAKE", "BC"],
            ["DOUGLAS", "MB"],
            ["DOUGLAS", "NB"],
            ["DOUGLAS", "ON"],
            ["DOURO", "ON"],
            ["DOVER CENTRE", "ON"],
            ["DOVER", "NL"],
            ["DOW SETTLEMENT", "NB"],
            ["DOWLING", "ON"],
            ["DOYLES BROOK", "NB"],
            ["DOYLES", "NL"],
            ["DRAKE", "SK"],
            ["DRAYTON VALLEY", "AB"],
            ["DRAYTON", "ON"],
            ["DRESDEN", "ON"],
            ["DRIFTPILE", "AB"],
            ["DRIFTWOOD", "ON"],
            ["DRINKWATER", "SK"],
            ["DROPMORE", "MB"],
            ["DRUMBO", "ON"],
            ["DRUMHELLER", "AB"],
            ["DRUMMOND", "NB"],
            ["DRUMMONDVILLE", "QC"],
            ["DRURYS COVE", "NB"],
            ["DRYDEN", "ON"],
            ["DSL DE DRUMMOND", "NB"],
            ["DSL DE GRAND-SAULT/FALLS", "NB"],
            ["DUART", "ON"],
            ["DUBEE SETTLEMENT", "NB"],
            ["DUBLIN", "ON"],
            ["DUBREUILVILLE", "ON"],
            ["DUBUC", "SK"],
            ["DUCHESS", "AB"],
            ["DUCK BAY", "MB"],
            ["DUCK LAKE", "SK"],
            ["DUCLOS", "QC"],
            ["DUFF", "SK"],
            ["DUFFERIN CHARLOTTE CO", "NB"],
            ["DUFFERIN QUEENS CO", "NB"],
            ["DUFFIELD", "AB"],
            ["DUFRESNE", "MB"],
            ["DUFROST", "MB"],
            ["DUGALD", "MB"],
            ["DUGAS", "NB"],
            ["DUGUAYVILLE", "NB"],
            ["DUHAMEL", "QC"],
            ["DUHAMEL-OUEST", "QC"],
            ["DUMFRIES", "NB"],
            ["DUMMER", "SK"],
            ["DUNCAN", "BC"],
            ["DUNCANS COVE", "NS"],
            ["DUNCHURCH", "ON"],
            ["DUNDALK", "ON"],
            ["DUNDAS", "NB"],
            ["DUNDAS", "ON"],
            ["DUNDEE", "NB"],
            ["DUNDURN", "SK"],
            ["DUNGANNON", "ON"],
            ["DUNHAM", "QC"],
            ["DUNLOP", "NB"],
            ["DUNMORE", "AB"],
            ["DUNNVILLE", "ON"],
            ["DUNREA", "MB"],
            ["DUNROBIN", "ON"],
            ["DUNSFORD", "ON"],
            ["DUNSINANE", "NB"],
            ["DUNSTER", "BC"],
            ["DUNTARA", "NL"],
            ["DUNTROON", "ON"],
            ["DUNVEGAN", "ON"],
            ["DUNVILLE", "NL"],
            ["DUPARQUET", "QC"],
            ["DUPEROW", "SK"],
            ["DUPUY", "QC"],
            ["DURBAN", "MB"],
            ["DURHAM BRIDGE", "NB"],
            ["DURHAM", "ON"],
            ["DURHAM-SUD", "QC"],
            ["DURRELL", "NL"],
            ["DUTCH BROOK", "NS"],
            ["DUTCH SETTLEMENT", "NS"],
            ["DUTCH VALLEY", "NB"],
            ["DUTTON", "ON"],
            ["DUVAL", "SK"],
            ["DWIGHT", "ON"],
            ["DYSART", "SK"],
            ["EABAMET LAKE", "ON"],
            ["EAGLE BAY", "BC"],
            ["EAGLE CREEK", "BC"],
            ["EAGLE LAKE", "ON"],
            ["EAGLE RIDGE", "SK"],
            ["EAGLE RIVER", "ON"],
            ["EAGLESHAM", "AB"],
            ["EAR FALLS", "ON"],
            ["EARL GREY", "SK"],
            ["EARLTON", "ON"],
            ["EAST ANGUS", "QC"],
            ["EAST BACCARO", "NS"],
            ["EAST BAY", "NS"],
            ["EAST BRAINTREE", "MB"],
            ["EAST BRANCH", "NB"],
            ["EAST BRIGHTON", "NB"],
            ["EAST BROUGHTON STATION", "QC"],
            ["EAST BROUGHTON", "QC"],
            ["EAST CENTREVILLE", "NB"],
            ["EAST CLIFFORD", "NS"],
            ["EAST COLDSTREAM", "NB"],
            ["EAST COULEE", "AB"],
            ["EAST DOVER", "NS"],
            ["EAST FARNHAM", "QC"],
            ["EAST GORE", "NS"],
            ["EAST GWILLIMBURY", "ON"],
            ["EAST HEREFORD", "QC"],
            ["EAST LAHAVE", "NS"],
            ["EAST LAWRENCETOWN", "NS"],
            ["EAST MOUNTAIN", "NS"],
            ["EAST NEWBRIDGE", "NB"],
            ["EAST PENNANT", "NS"],
            ["EAST PRESTON", "NS"],
            ["EAST SELKIRK", "MB"],
            ["EAST ST PAUL", "MB"],
            ["EAST STEWIACKE", "NS"],
            ["EAST YORK", "ON"],
            ["EASTEND", "SK"],
            ["EASTERN PASSAGE", "NS"],
            ["EASTERVILLE", "MB"],
            ["EASTMAIN", "QC"],
            ["EASTMAN", "QC"],
            ["EASTPORT", "NL"],
            ["EATONIA", "SK"],
            ["EBB AND FLOW", "MB"],
            ["EBENEZER", "SK"],
            ["ECHO BAY", "ON"],
            ["ECKVILLE", "AB"],
            ["ECONOMY", "NS"],
            ["EDAM", "SK"],
            ["EDBERG", "AB"],
            ["EDDIES COVE WEST", "NL"],
            ["EDDIES COVE", "NL"],
            ["EDDYSTONE", "MB"],
            ["EDEN MILLS", "ON"],
            ["EDEN", "MB"],
            ["EDEN", "ON"],
            ["EDENWOLD", "SK"],
            ["EDGELEY", "SK"],
            ["EDGERTON", "AB"],
            ["EDGETTS LANDING", "NB"],
            ["EDGEWATER", "BC"],
            ["EDGEWOOD", "BC"],
            ["EDMONTON", "AB"],
            ["EDMUNDSTON", "NB"],
            ["EDSON", "AB"],
            ["EDWARDS", "ON"],
            ["EDWARDSVILLE", "NS"],
            ["EDWIN", "MB"],
            ["EEL GROUND", "NB"],
            ["EEL RIVER BAR FIRST NATION", "NB"],
            ["EEL RIVER COVE", "NB"],
            ["EEL RIVER CROSSING", "NB"],
            ["EEL RIVER LAKE", "NB"],
            ["EGAN", "QC"],
            ["EGANVILLE", "ON"],
            ["EGBERT", "ON"],
            ["EGMONDVILLE", "ON"],
            ["EGMONT", "BC"],
            ["EGREMONT", "AB"],
            ["ELBOW", "SK"],
            ["ELDERBANK", "NS"],
            ["ELDORADO", "ON"],
            ["ELFROS", "SK"],
            ["ELGIN", "MB"],
            ["ELGIN", "NB"],
            ["ELGIN", "ON"],
            ["ELGIN", "QC"],
            ["ELGINBURG", "ON"],
            ["ELIE", "MB"],
            ["ELIZABETHTOWN", "ON"],
            ["ELK LAKE", "ON"],
            ["ELK POINT", "AB"],
            ["ELKFORD", "BC"],
            ["ELKHORN", "MB"],
            ["ELKO", "BC"],
            ["ELKWATER", "AB"],
            ["ELLERSHOUSE", "NS"],
            ["ELLERSLIE", "PE"],
            ["ELLIOT LAKE", "ON"],
            ["ELLISTON", "NL"],
            ["ELLSCOTT", "AB"],
            ["ELM CREEK", "MB"],
            ["ELM HILL", "NB"],
            ["ELMA", "MB"],
            ["ELMIRA", "ON"],
            ["ELMIRA", "PE"],
            ["ELMSDALE", "NS"],
            ["ELMSDALE", "PE"],
            ["ELMSVILLE", "NB"],
            ["ELMVALE", "ON"],
            ["ELMWOOD", "NB"],
            ["ELMWOOD", "ON"],
            ["ELMWORTH", "AB"],
            ["ELNORA", "AB"],
            ["ELORA", "ON"],
            ["ELPHINSTONE", "MB"],
            ["ELROSE", "SK"],
            ["ELSA", "YT"],
            ["ELSIPOGTOG FIRST NATION", "NB"],
            ["ELSTOW", "SK"],
            ["EM-1-A-SARCELLE-RUPERT", "QC"],
            ["EMBREE", "NL"],
            ["EMBRO", "ON"],
            ["EMBRUN", "ON"],
            ["EMERALD PARK", "SK"],
            ["EMERSON", "MB"],
            ["EMERYVILLE", "ON"],
            ["EMO", "ON"],
            ["EMPRESS", "AB"],
            ["EMSDALE", "ON"],
            ["ENCHANT", "AB"],
            ["ENDAKO", "BC"],
            ["ENDEAVOUR", "SK"],
            ["ENDERBY", "BC"],
            ["ENDIANG", "AB"],
            ["ENFIELD", "NS"],
            ["ENGLEE", "NL"],
            ["ENGLEFELD", "SK"],
            ["ENGLEHART", "ON"],
            ["ENGLISH HARBOUR EAST", "NL"],
            ["ENGLISH HARBOUR WEST", "NL"],
            ["ENGLISH SETTLEMENT", "NB"],
            ["ENGLISHTOWN", "NS"],
            ["ENILDA", "AB"],
            ["ENNISMORE", "ON"],
            ["ENOCH", "AB"],
            ["ENON", "NS"],
            ["ENTERPRISE", "NB"],
            ["ENTERPRISE", "NT"],
            ["ENTERPRISE", "ON"],
            ["ENTRELACS", "QC"],
            ["ENTWISTLE", "AB"],
            ["EPWORTH", "NL"],
            ["ERB SETTLEMENT", "NB"],
            ["ERBS COVE", "NB"],
            ["ERICKSON", "BC"],
            ["ERICKSON", "MB"],
            ["ERIEAU", "ON"],
            ["ERIKSDALE", "MB"],
            ["ERIN", "ON"],
            ["ERINSVILLE", "ON"],
            ["ERNFOLD", "SK"],
            ["ERRINGTON", "BC"],
            ["ERSKINE", "AB"],
            ["ESCUMINAC", "NB"],
            ["ESCUMINAC", "QC"],
            ["ESKASONI", "NS"],
            ["ESPANOLA", "ON"],
            ["ESPRIT-SAINT", "QC"],
            ["ESQUIMALT", "BC"],
            ["ESSEX", "ON"],
            ["ESTEREL", "QC"],
            ["ESTERHAZY", "SK"],
            ["ESTEVAN", "SK"],
            ["ESTEY'S BRIDGE", "NB"],
            ["ESTHER", "AB"],
            ["ESTON", "SK"],
            ["ETHEL", "ON"],
            ["ETHELBERT", "MB"],
            ["ETOBICOKE", "ON"],
            ["ETZIKOM", "AB"],
            ["EUREKA RIVER", "AB"],
            ["EUREKA", "NS"],
            ["EUREKA", "NU"],
            ["EVAIN", "QC"],
            ["EVANDALE", "NB"],
            ["EVANGELINE", "NB"],
            ["EVANS ROAD", "NB"],
            ["EVANSBURG", "AB"],
            ["EVANSVILLE", "ON"],
            ["EVERETT", "NB"],
            ["EVERETT", "ON"],
            ["EVESHAM", "SK"],
            ["EXETER", "ON"],
            ["EXMOOR", "NB"],
            ["EXSHAW", "AB"],
            ["EYEBROW", "SK"],
            ["FABRE", "QC"],
            ["FABREVILLE", "QC"],
            ["FAIR HAVEN", "NL"],
            ["FAIRFAX", "MB"],
            ["FAIRFIELD WESTMORLAND CO", "NB"],
            ["FAIRFIELD", "NB"],
            ["FAIRFORD", "MB"],
            ["FAIRHAVEN", "NB"],
            ["FAIRISLE", "NB"],
            ["FAIRLIGHT", "SK"],
            ["FAIRMONT HOT SPRINGS", "BC"],
            ["FAIRVIEW", "AB"],
            ["FAIRY GLEN", "SK"],
            ["FALARDEAU", "QC"],
            ["FALCON BEACH", "MB"],
            ["FALCONBRIDGE", "ON"],
            ["FALHER", "AB"],
            ["FALKLAND", "BC"],
            ["FALL RIVER", "NS"],
            ["FALLIS", "AB"],
            ["FALMOUTH", "NS"],
            ["FALUN", "AB"],
            ["FANNY BAY", "BC"],
            ["FANNYSTELLE", "MB"],
            ["FARMINGTON", "BC"],
            ["FARNHAM", "QC"],
            ["FARO", "YT"],
            ["FARRELLTON", "QC"],
            ["FASSETT", "QC"],
            ["FATIMA", "QC"],
            ["FAULKNER", "MB"],
            ["FAUQUIER", "BC"],
            ["FAUQUIER", "ON"],
            ["FAUST", "AB"],
            ["FAWCETT HILL", "NB"],
            ["FAWCETT", "AB"],
            ["FENELON FALLS", "ON"],
            ["FENN", "AB"],
            ["FENWICK", "ON"],
            ["FENWOOD", "SK"],
            ["FERGUS", "ON"],
            ["FERGUSONS COVE", "NS"],
            ["FERINTOSH", "AB"],
            ["FERLAND", "SK"],
            ["FERLAND-ET-BOILLEAU", "QC"],
            ["FERME-NEUVE", "QC"],
            ["FERMEUSE", "NL"],
            ["FERMONT", "QC"],
            ["FERNIE", "BC"],
            ["FERRYLAND", "NL"],
            ["FERTILE", "SK"],
            ["FEVERSHAM", "ON"],
            ["FIELD", "BC"],
            ["FIELD", "ON"],
            ["FIELDING", "NB"],
            ["FIFE LAKE", "SK"],
            ["FILLMORE", "SK"],
            ["FINCH", "ON"],
            ["FINDLATER", "SK"],
            ["FINGAL", "ON"],
            ["FINNEGAN", "AB"],
            ["FIR MOUNTAIN", "SK"],
            ["FISHER BRANCH", "MB"],
            ["FISHERMANS HARBOUR", "NS"],
            ["FISHERVILLE", "ON"],
            ["FISKE", "SK"],
            ["FITZGERALD", "AB"],
            ["FITZROY HARBOUR", "ON"],
            ["FIVE ISLANDS", "NS"],
            ["FLATBUSH", "AB"],
            ["FLATLANDS", "NB"],
            ["FLATROCK", "NL"],
            ["FLAXCOMBE", "SK"],
            ["FLEMING", "SK"],
            ["FLEMINGTON", "NB"],
            ["FLESHERTON", "ON"],
            ["FLETCHERS LAKE", "NS"],
            ["FLEUR DE LYS", "NL"],
            ["FLIN FLON", "MB"],
            ["FLINTOFT", "SK"],
            ["FLINTON", "ON"],
            ["FLORADALE", "ON"],
            ["FLORENCE", "NS"],
            ["FLORENCE", "ON"],
            ["FLORENCEVILLE-BRISTOL", "NB"],
            ["FLOWERS COVE", "NB"],
            ["FLOWERS COVE", "NL"],
            ["FLUME RIDGE", "NB"],
            ["FOAM LAKE", "SK"],
            ["FOGO", "NL"],
            ["FOISY", "AB"],
            ["FOLEYET", "ON"],
            ["FOND DU LAC", "SK"],
            ["FONTHILL", "ON"],
            ["FORD BANK", "NB"],
            ["FORDS MILLS", "NB"],
            ["FORDWICH", "ON"],
            ["FOREMOST", "AB"],
            ["FOREST CITY", "NB"],
            ["FOREST GLEN", "NB"],
            ["FOREST GROVE", "BC"],
            ["FOREST", "ON"],
            ["FORESTBURG", "AB"],
            ["FORESTERS FALLS", "ON"],
            ["FORESTVILLE", "QC"],
            ["FORGET", "SK"],
            ["FORK RIVER", "MB"],
            ["FORMOSA", "ON"],
            ["FORREST STATION", "MB"],
            ["FORT ALBANY", "ON"],
            ["FORT ALEXANDER", "MB"],
            ["FORT ASSINIBOINE", "AB"],
            ["FORT CHIPEWYAN", "AB"],
            ["FORT ELLIS", "NS"],
            ["FORT ERIE", "ON"],
            ["FORT FRANCES", "ON"],
            ["FORT FRASER", "BC"],
            ["FORT GOOD HOPE", "NT"],
            ["FORT KENT", "AB"],
            ["FORT LIARD", "NT"],
            ["FORT MACKAY", "AB"],
            ["FORT MACLEOD", "AB"],
            ["FORT MCMURRAY", "AB"],
            ["FORT MCPHERSON", "NT"],
            ["FORT NELSON", "BC"],
            ["FORT PROVIDENCE", "NT"],
            ["FORT QU'APPELLE", "SK"],
            ["FORT RESOLUTION", "NT"],
            ["FORT SASKATCHEWAN", "AB"],
            ["FORT SEVERN", "ON"],
            ["FORT SIMPSON", "NT"],
            ["FORT SMITH", "NT"],
            ["FORT ST. JAMES", "BC"],
            ["FORT ST. JOHN", "BC"],
            ["FORT STEELE", "BC"],
            ["FORT VERMILION", "AB"],
            ["FORT-COULONGE", "QC"],
            ["FORTEAU", "NL"],
            ["FORTIERVILLE", "QC"],
            ["FORTRESS OF LOUISBOURG", "NS"],
            ["FORTUNE", "NL"],
            ["FOSSAMBAULT-SUR-LE-LAC", "QC"],
            ["FOSSTON", "SK"],
            ["FOSTER", "QC"],
            ["FOSTERVILLE", "NB"],
            ["FOUR CORNERS", "NB"],
            ["FOUR FALLS", "NB"],
            ["FOUR ROADS", "NB"],
            ["FOURCHU", "NS"],
            ["FOURNIER", "ON"],
            ["FOX CREEK", "AB"],
            ["FOX HARBOUR PB", "NL"],
            ["FOX LAKE", "AB"],
            ["FOX VALLEY", "SK"],
            ["FOXBORO", "ON"],
            ["FOXFORD", "SK"],
            ["FOXWARREN", "MB"],
            ["FOYMOUNT", "ON"],
            ["FRAMBOISE INTERVALE", "NS"],
            ["FRAMBOISE", "NS"],
            ["FRAMPTON", "QC"],
            ["FRANCIS", "SK"],
            ["FRANCOIS LAKE", "BC"],
            ["FRANCOIS", "NL"],
            ["FRANKFORD", "ON"],
            ["FRANKLIN", "MB"],
            ["FRANKLIN", "QC"],
            ["FRANKVILLE", "NS"],
            ["FRANKVILLE", "ON"],
            ["FRANQUELIN", "QC"],
            ["FRASER LAKE", "BC"],
            ["FRASERVILLE", "ON"],
            ["FRASERWOOD", "MB"],
            ["FREDERICKHOUSE", "ON"],
            ["FREDERICKSBURG", "NB"],
            ["FREDERICKTON", "NL"],
            ["FREDERICTON JUNCTION", "NB"],
            ["FREDERICTON", "NB"],
            ["FREE GRANT", "NB"],
            ["FREELTON", "ON"],
            ["FREEPORT", "NS"],
            ["FREETOWN", "PE"],
            ["FRELIGHSBURG", "QC"],
            ["FRENCH LAKE", "NB"],
            ["FRENCH ROAD", "NS"],
            ["FRENCH VILLAGE KINGS CO", "NB"],
            ["FRENCH VILLAGE", "NS"],
            ["FRENCH VILLAGE-YORK", "NB"],
            ["FRENCHMAN BUTTE", "SK"],
            ["FRENCHMANS COVE BOI", "NL"],
            ["FRENCHMANS COVE FB", "NL"],
            ["FRENCHVALE", "NS"],
            ["FRESHWATER PB", "NL"],
            ["FROBISHER", "SK"],
            ["FROG LAKE", "AB"],
            ["FRONTENAC", "QC"],
            ["FRONTIER", "SK"],
            ["FROSTY HOLLOW", "NB"],
            ["FRUITVALE", "BC"],
            ["FUGEREVILLE", "QC"],
            ["FULDA", "SK"],
            ["FULFORD", "QC"],
            ["FULLARTON", "ON"],
            ["FUNDY NATIONAL PARK", "NB"],
            ["FURDALE", "SK"],
            ["FURRY CREEK", "BC"],
            ["GABARUS LAKE", "NS"],
            ["GABARUS", "NS"],
            ["GABRIOLA", "BC"],
            ["GADS HILL STATION", "ON"],
            ["GADSBY", "AB"],
            ["GAGETOWN", "NB"],
            ["GAINFORD", "AB"],
            ["GAINSBOROUGH", "SK"],
            ["GALAHAD", "AB"],
            ["GALIANO", "BC"],
            ["GALLAGHER RIDGE", "NB"],
            ["GALLANTS", "NL"],
            ["GALLICHAN", "QC"],
            ["GALLIVAN", "SK"],
            ["GALLIX", "QC"],
            ["GALLOWAY", "BC"],
            ["GALLOWAY", "NB"],
            ["GAMBO SOUTH", "NL"],
            ["GAMBO", "NL"],
            ["GAMETI", "NT"],
            ["GANANOQUE", "ON"],
            ["GANDER BAY SOUTH", "NL"],
            ["GANDER BAY", "NL"],
            ["GANDER", "NL"],
            ["GANG RANCH", "BC"],
            ["GARDEN BAY", "BC"],
            ["GARDEN COVE PB", "NL"],
            ["GARDEN RIVER", "AB"],
            ["GARDEN RIVER", "ON"],
            ["GARDEN VILLAGE", "ON"],
            ["GARDENTON", "MB"],
            ["GARDINER MINES", "NS"],
            ["GARDINER POINT", "NB"],
            ["GARDNER CREEK", "NB"],
            ["GARIBALDI HIGHLANDS", "BC"],
            ["GARLAND", "MB"],
            ["GARNETT SETTLEMENT", "NB"],
            ["GARNISH", "NL"],
            ["GARRICK", "SK"],
            ["GARSON", "MB"],
            ["GARSON", "ON"],
            ["GASCONS", "QC"],
            ["GASPE", "QC"],
            ["GASPEREAU FORKS", "NB"],
            ["GATINEAU", "ON"],
            ["GATINEAU", "QC"],
            ["GAULTOIS", "NL"],
            ["GAUVREAU", "NB"],
            ["GAYS RIVER", "NS"],
            ["GEARY", "NB"],
            ["GEM", "AB"],
            ["GENELLE", "BC"],
            ["GEORGES RIVER", "NS"],
            ["GEORGETOWN", "ON"],
            ["GEORGETOWN", "PE"],
            ["GEORGEVILLE", "QC"],
            ["GERALD", "SK"],
            ["GERALDTON", "ON"],
            ["GERMANSEN LANDING", "BC"],
            ["GERMANTOWN", "NB"],
            ["GETHSEMANI", "QC"],
            ["GIANTS GLEN", "NB"],
            ["GIBBONS", "AB"],
            ["GIBSONS", "BC"],
            ["GIFT LAKE", "AB"],
            ["GILBERT PLAINS", "MB"],
            ["GILFORD", "ON"],
            ["GILLAM", "MB"],
            ["GILLIES BAY", "BC"],
            ["GILLIS LAKE", "NS"],
            ["GILLIS POINT", "NS"],
            ["GILMOUR", "ON"],
            ["GIMLI", "MB"],
            ["GINEW", "MB"],
            ["GIRARDVILLE", "QC"],
            ["GIROUX", "MB"],
            ["GIROUXVILLE", "AB"],
            ["GITWINKSIHLKW", "BC"],
            ["GJOA HAVEN", "NU"],
            ["GLACE BAY", "NS"],
            ["GLADESIDE", "NB"],
            ["GLADMAR", "SK"],
            ["GLADSTONE", "MB"],
            ["GLADWYN", "NB"],
            ["GLASLYN", "SK"],
            ["GLASNEVIN", "SK"],
            ["GLASSVILLE", "NB"],
            ["GLEICHEN", "AB"],
            ["GLEN EWEN", "SK"],
            ["GLEN HAVEN", "NS"],
            ["GLEN HURON", "ON"],
            ["GLEN MARGARET", "NS"],
            ["GLEN MORRIS", "ON"],
            ["GLEN ROBERTSON", "ON"],
            ["GLENAVON", "SK"],
            ["GLENBAIN", "SK"],
            ["GLENBORO", "MB"],
            ["GLENBURNIE", "ON"],
            ["GLENBUSH", "SK"],
            ["GLENCAIRN", "ON"],
            ["GLENCOE", "NB"],
            ["GLENCOE", "ON"],
            ["GLENDON", "AB"],
            ["GLENELLA", "MB"],
            ["GLENEVIS", "AB"],
            ["GLENLEA", "MB"],
            ["GLENLEVIT", "NB"],
            ["GLENORA", "MB"],
            ["GLENSIDE", "SK"],
            ["GLENTWORTH", "SK"],
            ["GLENVALE", "NB"],
            ["GLENWOOD KINGS CO", "NB"],
            ["GLENWOOD", "AB"],
            ["GLENWOOD", "NB"],
            ["GLENWOOD", "NL"],
            ["GLENWOOD", "NS"],
            ["GLENWOOD.", "NB"],
            ["GLIDDEN", "SK"],
            ["GLOUCESTER JUNCTION", "NB"],
            ["GLOUCESTER", "ON"],
            ["GLOVERTOWN SOUTH", "NL"],
            ["GLOVERTOWN", "NL"],
            ["GODBOUT", "QC"],
            ["GODERICH", "ON"],
            ["GODFREY", "ON"],
            ["GODMANCHESTER", "QC"],
            ["GODS LAKE NARROWS", "MB"],
            ["GODS RIVER", "MB"],
            ["GOFFS", "NS"],
            ["GOGAMA", "ON"],
            ["GOLD BRIDGE", "BC"],
            ["GOLD RIVER", "BC"],
            ["GOLDBORO", "NS"],
            ["GOLDEN LAKE", "ON"],
            ["GOLDEN PRAIRIE", "SK"],
            ["GOLDEN VALLEY", "ON"],
            ["GOLDEN", "BC"],
            ["GOOD CORNER", "NB"],
            ["GOOD HOPE LAKE", "BC"],
            ["GOODERHAM", "ON"],
            ["GOODEVE", "SK"],
            ["GOODFARE", "AB"],
            ["GOODFISH LAKE", "AB"],
            ["GOODLANDS", "MB"],
            ["GOODLOW", "BC"],
            ["GOODRIDGE", "AB"],
            ["GOODSOIL", "SK"],
            ["GOODWATER", "SK"],
            ["GOODWIN MILL", "NB"],
            ["GOODWOOD", "NS"],
            ["GOODWOOD", "ON"],
            ["GOOSEBERRY COVE", "NL"],
            ["GORDONDALE", "AB"],
            ["GORDONSVILLE", "NB"],
            ["GORE BAY", "ON"],
            ["GORE", "QC"],
            ["GORES LANDING", "ON"],
            ["GORMLEY", "ON"],
            ["GORRIE", "ON"],
            ["GOSHEN", "NS"],
            ["GOULAIS RIVER", "ON"],
            ["GOULDS", "NL"],
            ["GOULDTOWN", "SK"],
            ["GOVAN", "SK"],
            ["GOWANSTOWN", "ON"],
            ["GOWGANDA", "ON"],
            ["GRACEFIELD", "QC"],
            ["GRAFTON", "NB"],
            ["GRAFTON", "ON"],
            ["GRAHAM", "ON"],
            ["GRAHAMDALE", "MB"],
            ["GRANBY", "QC"],
            ["GRAND BANK", "NL"],
            ["GRAND BAY EAST", "NL"],
            ["GRAND BAY-WESTFIELD", "NB"],
            ["GRAND BEACH", "NL"],
            ["GRAND BEND", "ON"],
            ["GRAND BRUIT", "NL"],
            ["GRAND ETANG", "NS"],
            ["GRAND FALLS", "NB"],
            ["GRAND FALLS-WINDSOR", "NL"],
            ["GRAND FORKS", "BC"],
            ["GRAND LAKE ROAD", "NB"],
            ["GRAND LAKE ROAD", "NS"],
            ["GRAND LAKE", "NS"],
            ["GRAND LE PIERRE", "NL"],
            ["GRAND MANAN", "NB"],
            ["GRAND MARAIS", "MB"],
            ["GRAND MIRA NORTH", "NS"],
            ["GRAND MIRA SOUTH", "NS"],
            ["GRAND NARROWS", "NS"],
            ["GRAND PRE", "NS"],
            ["GRAND RAPIDS", "MB"],
            ["GRAND RIVER", "NS"],
            ["GRAND VALLEY", "ON"],
            ["GRAND-BARACHOIS", "NB"],
            ["GRAND-MERE", "QC"],
            ["GRAND-REMOUS", "QC"],
            ["GRAND-SAINT-ESPRIT", "QC"],
            ["GRAND-SAULT/GRAND FALLS", "NB"],
            ["GRANDE CACHE", "AB"],
            ["GRANDE POINTE", "MB"],
            ["GRANDE POINTE", "ON"],
            ["GRANDE PRAIRIE", "AB"],
            ["GRANDE-ANSE", "NB"],
            ["GRANDE-DIGUE", "NB"],
            ["GRANDE-ENTREE", "QC"],
            ["GRANDE-RIVIERE", "QC"],
            ["GRANDE-RIVIERE-OUEST", "QC"],
            ["GRANDE-VALLEE", "QC"],
            ["GRANDES-BERGERONNES", "QC"],
            ["GRANDES-PILES", "QC"],
            ["GRANDORA", "SK"],
            ["GRANDVIEW", "MB"],
            ["GRANISLE", "BC"],
            ["GRANTON", "ON"],
            ["GRANUM", "AB"],
            ["GRANVILLE FERRY", "NS"],
            ["GRASMERE", "BC"],
            ["GRASS COVE", "NS"],
            ["GRASSIE", "ON"],
            ["GRASSLAND", "AB"],
            ["GRASSWOOD", "SK"],
            ["GRASSY LAKE", "AB"],
            ["GRASSY NARROWS", "ON"],
            ["GRATES COVE", "NL"],
            ["GRAVEL HILL", "NB"],
            ["GRAVELBOURG", "SK"],
            ["GRAVENHURST", "ON"],
            ["GRAY CREEK", "BC"],
            ["GRAY RAPIDS", "NB"],
            ["GRAY", "SK"],
            ["GRAYSON", "SK"],
            ["GRAYSVILLE", "MB"],
            ["GREAT FALLS", "MB"],
            ["GREAT VILLAGE", "NS"],
            ["GREATER LAKEBURN", "NB"],
            ["GREELY", "ON"],
            ["GREEN BAY", "NS"],
            ["GREEN CREEK", "NS"],
            ["GREEN GABLES", "PE"],
            ["GREEN HILL", "NB"],
            ["GREEN ISLAND BROOK", "NL"],
            ["GREEN ISLAND COVE", "NL"],
            ["GREEN LAKE", "SK"],
            ["GREEN MOUNTAIN", "NB"],
            ["GREEN OAKS", "NS"],
            ["GREEN RIDGE", "MB"],
            ["GREEN ROAD", "NB"],
            ["GREEN VALLEY", "ON"],
            ["GREENBANK", "ON"],
            ["GREENFIELD PARK", "QC"],
            ["GREENFIELD", "NB"],
            ["GREENFIELD", "NS"],
            ["GREENFIELD.", "NS"],
            ["GREENHILL LAKE", "NB"],
            ["GREENS HARBOUR", "NL"],
            ["GREENSPOND", "NL"],
            ["GREENVILLE", "BC"],
            ["GREENWOOD", "BC"],
            ["GREENWOOD", "NS"],
            ["GREENWOOD", "ON"],
            ["GREGG SETTLEMENT", "NB"],
            ["GRENFELL", "SK"],
            ["GRENVILLE", "QC"],
            ["GRENVILLE-SUR-LA-ROUGE", "QC"],
            ["GRETNA", "MB"],
            ["GREY RIVER", "NL"],
            ["GRIFFIN", "SK"],
            ["GRIFFITH", "ON"],
            ["GRIMMS SETTLEMENT", "NS"],
            ["GRIMSBY", "ON"],
            ["GRIMSHAW", "AB"],
            ["GRINDROD", "BC"],
            ["GRISE FIORD", "NU"],
            ["GRISWOLD", "MB"],
            ["GRONDINES", "QC"],
            ["GRONLID", "SK"],
            ["GROS-MORNE", "QC"],
            ["GROSSE ISLE", "MB"],
            ["GROSSE-ILE", "QC"],
            ["GROSSES-ROCHES", "QC"],
            ["GROUARD", "AB"],
            ["GROUNDBIRCH", "BC"],
            ["GROVE HILL", "NB"],
            ["GROVEDALE", "AB"],
            ["GROVES POINT", "NS"],
            ["GRUNTHAL", "MB"],
            ["GUELPH", "ON"],
            ["GUERIN", "QC"],
            ["GUERNSEY", "SK"],
            ["GULL BAY", "ON"],
            ["GULL LAKE", "SK"],
            ["GUNDY", "AB"],
            ["GUNN", "AB"],
            ["GUNTON", "MB"],
            ["GUY", "AB"],
            ["GUYENNE", "QC"],
            ["GUYSBOROUGH", "NS"],
            ["GWYNNE", "AB"],
            ["GYPSUMVILLE", "MB"],
            ["HACHEYVILLE", "NB"],
            ["HACKETTS COVE", "NS"],
            ["HADASHVILLE", "MB"],
            ["HAFFORD", "SK"],
            ["HAGAR", "ON"],
            ["HAGEN", "SK"],
            ["HAGENSBORG", "BC"],
            ["HAGERSVILLE", "ON"],
            ["HAGUE", "SK"],
            ["HAILEYBURY", "ON"],
            ["HAINES JUNCTION", "YT"],
            ["HAIRY HILL", "AB"],
            ["HAISLA", "BC"],
            ["HALBRITE", "SK"],
            ["HALBSTADT", "MB"],
            ["HALCOMB", "NB"],
            ["HALEY STATION", "ON"],
            ["HALFMOON BAY", "AB"],
            ["HALFMOON BAY", "BC"],
            ["HALIBURTON", "ON"],
            ["HALIBUT BAY", "NS"],
            ["HALIFAX", "NS"],
            ["HALKIRK", "AB"],
            ["HALL BEACH", "NU"],
            ["HALLEBOURG", "ON"],
            ["HAM-NORD", "QC"],
            ["HAMILTON", "ON"],
            ["HAMIOTA", "MB"],
            ["HAMMOND", "ON"],
            ["HAMMONDS PLAINS", "NS"],
            ["HAMMONDVALE", "NB"],
            ["HAMPDEN", "NL"],
            ["HAMPSTEAD", "NB"],
            ["HAMPSTEAD", "QC"],
            ["HAMPTON", "NB"],
            ["HAMPTON", "NS"],
            ["HAMPTON", "ON"],
            ["HAMTOWN CORNER", "NB"],
            ["HANCEVILLE", "BC"],
            ["HANDEL", "SK"],
            ["HANEYTOWN", "NB"],
            ["HANFORD BROOK", "NB"],
            ["HANLEY", "SK"],
            ["HANMER", "ON"],
            ["HANNA", "AB"],
            ["HANNON", "ON"],
            ["HANOVER", "ON"],
            ["HANTS HARBOUR", "NL"],
            ["HANTSPORT", "NS"],
            ["HANWELL", "NB"],
            ["HAPPY VALLEY-GOOSE BAY", "NL"],
            ["HARBOUR BRETON", "NL"],
            ["HARBOUR GRACE SOUTH", "NL"],
            ["HARBOUR GRACE", "NL"],
            ["HARBOUR MAIN", "NL"],
            ["HARBOUR MILLE", "NL"],
            ["HARBOUR ROUND", "NL"],
            ["HARCOURT", "NB"],
            ["HARCOURT", "ON"],
            ["HARDING", "MB"],
            ["HARDISTY", "AB"],
            ["HARDWICKE", "NB"],
            ["HARDWOOD LANDS", "NS"],
            ["HARDWOOD RIDGE", "NB"],
            ["HARE BAY BB", "NL"],
            ["HAREWOOD", "NB"],
            ["HARGRAVE", "MB"],
            ["HARLEY", "ON"],
            ["HARMONY", "NS"],
            ["HARRIETSFIELD", "NS"],
            ["HARRIETSVILLE", "ON"],
            ["HARRINGTON HARBOUR", "QC"],
            ["HARRINGTON", "QC"],
            ["HARRIS", "SK"],
            ["HARRISON HOT SPRINGS", "BC"],
            ["HARRISON MILLS", "BC"],
            ["HARRISTON", "ON"],
            ["HARROGATE", "BC"],
            ["HARROW", "ON"],
            ["HARROWSMITH", "ON"],
            ["HARRYS HARBOUR", "NL"],
            ["HARTFIELD", "NB"],
            ["HARTFORD", "NB"],
            ["HARTIN SETTLEMENT", "NB"],
            ["HARTINGTON", "ON"],
            ["HARTLAND", "NB"],
            ["HARTLEY BAY", "BC"],
            ["HARTLEY SETTLEMENT", "NB"],
            ["HARTNEY", "MB"],
            ["HARTY", "ON"],
            ["HARVEY ALBERT CO", "NB"],
            ["HARVEY STATION", "NB"],
            ["HARVEY YORK CO", "NB"],
            ["HARVIE HEIGHTS", "AB"],
            ["HARWOOD", "ON"],
            ["HASTINGS", "ON"],
            ["HATCHET LAKE", "NS"],
            ["HATFIELD POINT", "NB"],
            ["HATLEY", "QC"],
            ["HAUT-LAMEQUE", "NB"],
            ["HAUT-PAQUETVILLE", "NB"],
            ["HAUT-RIVIERE-DU-PORTAGE", "NB"],
            ["HAUT-SAINT-ANTOINE", "NB"],
            ["HAUT-SHEILA", "NB"],
            ["HAUT-SHIPPAGAN", "NB"],
            ["HAUTE-ABOUJAGANE", "NB"],
            ["HAVELOCK", "NB"],
            ["HAVELOCK", "ON"],
            ["HAVELOCK", "QC"],
            ["HAVRE BOUCHER", "NS"],
            ["HAVRE-AUBERT", "QC"],
            ["HAVRE-AUX-MAISONS", "QC"],
            ["HAVRE-SAINT-PIERRE", "QC"],
            ["HAWARDEN", "SK"],
            ["HAWK JUNCTION", "ON"],
            ["HAWKES BAY", "NL"],
            ["HAWKESBURY", "ON"],
            ["HAWKESTONE", "ON"],
            ["HAWKESVILLE", "ON"],
            ["HAWKINS CORNER", "NB"],
            ["HAWKSHAW", "NB"],
            ["HAY LAKES", "AB"],
            ["HAY RIVER", "NT"],
            ["HAY SETTLEMENT", "NB"],
            ["HAY", "ON"],
            ["HAYDON", "ON"],
            ["HAYESVILLE", "NB"],
            ["HAYMAN HILL", "NB"],
            ["HAYS", "AB"],
            ["HAYTER", "AB"],
            ["HAYWOOD", "MB"],
            ["HAZEL DELL", "SK"],
            ["HAZELDEAN", "NB"],
            ["HAZELRIDGE", "MB"],
            ["HAZELTON", "BC"],
            ["HAZELTON", "NB"],
            ["HAZENMORE", "SK"],
            ["HAZLET", "SK"],
            ["HEAD BAY D'ESPOIR", "NL"],
            ["HEAD OF CHEZZETCOOK", "NS"],
            ["HEAD OF JEDDORE", "NS"],
            ["HEAD OF MILLSTREAM", "NB"],
            ["HEAD OF ST MARGARETS BAY", "NS"],
            ["HEADINGLEY", "MB"],
            ["HEARNE", "SK"],
            ["HEARST", "ON"],
            ["HEART'S CONTENT", "NL"],
            ["HEART'S DELIGHT", "NL"],
            ["HEART'S DESIRE", "NL"],
            ["HEATHCOTE", "ON"],
            ["HEATHERTON", "NL"],
            ["HEATHERTON", "NS"],
            ["HEATHLAND", "NB"],
            ["HEBBS CROSS", "NS"],
            ["HEBBVILLE", "NS"],
            ["HEBERT", "NB"],
            ["HEBERTVILLE", "QC"],
            ["HEBERTVILLE-STATION", "QC"],
            ["HEBRON", "NB"],
            ["HEBRON", "NS"],
            ["HEDLEY", "BC"],
            ["HEFFLEY CREEK", "BC"],
            ["HEIDELBERG", "ON"],
            ["HEINSBURG", "AB"],
            ["HEISLER", "AB"],
            ["HEMMINGFORD", "QC"],
            ["HENDERSON SETTLEMENT", "NB"],
            ["HENDON", "SK"],
            ["HENRIBOURG", "SK"],
            ["HENRYVILLE", "QC"],
            ["HENSALL", "ON"],
            ["HEPBURN", "SK"],
            ["HEPWORTH", "ON"],
            ["HERBERT", "SK"],
            ["HERIOT BAY", "BC"],
            ["HERMITAGE", "NL"],
            ["HERON BAY", "ON"],
            ["HEROUXVILLE", "QC"],
            ["HERRING COVE", "NS"],
            ["HERRING NECK", "NL"],
            ["HERSCHEL", "SK"],
            ["HERSONVILLE", "NB"],
            ["HEWARD", "SK"],
            ["HIBERNIA COVE", "NB"],
            ["HICKMANS HARBOUR", "NL"],
            ["HICKSON", "ON"],
            ["HICKSVILLE", "NB"],
            ["HIGH BLUFF", "MB"],
            ["HIGH LEVEL", "AB"],
            ["HIGH PRAIRIE", "AB"],
            ["HIGH RIVER", "AB"],
            ["HIGHFIELD", "NB"],
            ["HIGHGATE", "ON"],
            ["HIGHLAND GROVE", "ON"],
            ["HIGHLAND HILL", "NS"],
            ["HIGHLANDS", "NL"],
            ["HILBRE", "MB"],
            ["HILDA", "AB"],
            ["HILL SPRING", "AB"],
            ["HILLANDALE", "NB"],
            ["HILLCREST MINES", "AB"],
            ["HILLGRADE", "NL"],
            ["HILLGROVE", "NB"],
            ["HILLIARD", "AB"],
            ["HILLIARDTON", "ON"],
            ["HILLIER", "ON"],
            ["HILLSBOROUGH WEST", "NB"],
            ["HILLSBOROUGH", "NB"],
            ["HILLSBURGH", "ON"],
            ["HILLSDALE", "NB"],
            ["HILLSDALE", "ON"],
            ["HILLSIDE BOULARDERIE", "NS"],
            ["HILLTOP", "NB"],
            ["HILLVIEW", "NL"],
            ["HILTON BEACH", "ON"],
            ["HINCHINBROOKE", "QC"],
            ["HINES CREEK", "AB"],
            ["HINTON", "AB"],
            ["HIXON", "BC"],
            ["HOBBEMA", "AB"],
            ["HODGES COVE", "NL"],
            ["HODGEVILLE", "SK"],
            ["HODGSON", "MB"],
            ["HOEY", "SK"],
            ["HOLBEIN", "SK"],
            ["HOLBERG", "BC"],
            ["HOLDEN", "AB"],
            ["HOLDFAST", "SK"],
            ["HOLLAND CENTRE", "ON"],
            ["HOLLAND LANDING", "ON"],
            ["HOLLAND", "MB"],
            ["HOLMESVILLE", "NB"],
            ["HOLMFIELD", "MB"],
            ["HOLSTEIN", "ON"],
            ["HOLTVILLE", "NB"],
            ["HOLTYRE", "ON"],
            ["HOLYROOD", "NL"],
            ["HOLYROOD", "ON"],
            ["HOMEVILLE", "NS"],
            ["HOMEWOOD", "MB"],
            ["HONDO", "AB"],
            ["HONEY HARBOUR", "ON"],
            ["HONEYDALE", "NB"],
            ["HONEYMOON BAY", "BC"],
            ["HONEYWOOD", "ON"],
            ["HONFLEUR", "QC"],
            ["HOOSIER", "SK"],
            ["HOPE", "BC"],
            ["HOPE", "QC"],
            ["HOPEALL", "NL"],
            ["HOPEDALE", "NL"],
            ["HOPEWELL CAPE", "NB"],
            ["HOPEWELL HILL", "NB"],
            ["HOPEWELL", "NS"],
            ["HORNBY ISLAND", "BC"],
            ["HORNBY", "ON"],
            ["HORNDEAN", "MB"],
            ["HORNELL HEIGHTS", "ON"],
            ["HORNEPAYNE", "ON"],
            ["HORNINGS MILLS", "ON"],
            ["HORSEFLY", "BC"],
            ["HORWOOD", "NL"],
            ["HOTCHKISS", "AB"],
            ["HOUSTON", "BC"],
            ["HOWARD BROOK", "NB"],
            ["HOWARD", "NB"],
            ["HOWDEN", "MB"],
            ["HOWICK", "QC"],
            ["HOWIE CENTER", "NS"],
            ["HOWLAND RIDGE", "NB"],
            ["HOWLEY", "NL"],
            ["HOYT", "NB"],
            ["HUBBARD", "SK"],
            ["HUBBARDS", "NS"],
            ["HUBERDEAU", "QC"],
            ["HUBLEY", "NS"],
            ["HUDSON BAY", "SK"],
            ["HUDSON HEIGHTS", "QC"],
            ["HUDSON", "ON"],
            ["HUDSON", "QC"],
            ["HUDSON'S HOPE", "BC"],
            ["HUGHENDEN", "AB"],
            ["HUMBOLDT", "SK"],
            ["HUNTA", "ON"],
            ["HUNTERS HOME", "NB"],
            ["HUNTINGDON", "QC"],
            ["HUNTINGTON", "NS"],
            ["HUNTS POINT", "NS"],
            ["HUNTSVILLE", "ON"],
            ["HURON PARK", "ON"],
            ["HUSSAR", "AB"],
            ["HUXLEY", "AB"],
            ["HYAS", "SK"],
            ["HYLO", "AB"],
            ["HYTHE", "AB"],
            ["IDDESLEIGH", "AB"],
            ["IGLOOLIK", "NU"],
            ["IGNACE", "ON"],
            ["ILDERTON", "ON"],
            ["ILE DES CHENES", "MB"],
            ["ILE DU GRAND-CALUMET", "QC"],
            ["ILE-A-LA-CROSSE", "SK"],
            ["ILE-AUX-NOIX", "QC"],
            ["ILFORD", "MB"],
            ["IMMIGRANT ROAD", "NB"],
            ["IMPERIAL", "SK"],
            ["INDIAN BAY BB", "NL"],
            ["INDIAN BROOK 14", "NS"],
            ["INDIAN HARBOUR", "NS"],
            ["INDIAN HEAD", "SK"],
            ["INDIAN ISLAND", "NB"],
            ["INDIAN MOUNTAIN", "NB"],
            ["INDIAN PATH", "NS"],
            ["INDIAN RIVER", "ON"],
            ["INDUS", "AB"],
            ["INGERSOLL", "ON"],
            ["INGLESIDE", "ON"],
            ["INGLEWOOD", "ON"],
            ["INGLIS", "MB"],
            ["INGOLF", "ON"],
            ["INGOMAR", "NS"],
            ["INGONISH BEACH", "NS"],
            ["INGONISH", "NS"],
            ["INGRAMPORT", "NS"],
            ["INKERMAN FERRY", "NB"],
            ["INKERMAN", "NB"],
            ["INKERMAN", "ON"],
            ["INNERKIP", "ON"],
            ["INNISFAIL", "AB"],
            ["INNISFIL", "ON"],
            ["INNISFREE", "AB"],
            ["INSINGER", "SK"],
            ["INTERVALE", "NB"],
            ["INUKJUAK", "QC"],
            ["INUVIK", "NT"],
            ["INVERARY", "ON"],
            ["INVERMAY", "SK"],
            ["INVERMERE", "BC"],
            ["INVERNESS", "NS"],
            ["INVERNESS", "QC"],
            ["INWOOD", "MB"],
            ["INWOOD", "ON"],
            ["IONA STATION", "ON"],
            ["IONA", "NS"],
            ["IQALUIT", "NU"],
            ["IRISH COVE", "NS"],
            ["IRISH SETTLEMENT", "NB"],
            ["IRISHTOWN", "NB"],
            ["IRISHVALE", "NS"],
            ["IRLANDE", "QC"],
            ["IRMA", "AB"],
            ["IRON BOUND COVE", "NB"],
            ["IRON BRIDGE", "ON"],
            ["IRON RIVER", "AB"],
            ["IRON SPRINGS", "AB"],
            ["IRONDALE", "ON"],
            ["IRONVILLE", "NS"],
            ["IROQUOIS FALLS A", "ON"],
            ["IROQUOIS FALLS", "ON"],
            ["IROQUOIS", "ON"],
            ["IRRICANA", "AB"],
            ["IRVINE", "AB"],
            ["ISAACS HARBOUR", "NS"],
            ["ISABELLA", "MB"],
            ["ISKUT", "BC"],
            ["ISLAND HARBOUR", "NL"],
            ["ISLAND LAKE SOUTH", "AB"],
            ["ISLAND LAKE", "AB"],
            ["ISLAND LAKE", "MB"],
            ["ISLAND LAKE", "SK"],
            ["ISLAND VIEW", "NB"],
            ["ISLANDVIEW", "NS"],
            ["ISLAY", "AB"],
            ["ISLE-AUX-COUDRES", "QC"],
            ["ISLE-AUX-MORTS", "NL"],
            ["ISLINGTON", "NL"],
            ["ISSOUDUN", "QC"],
            ["ITALY CROSS", "NS"],
            ["ITUNA", "SK"],
            ["IVRY-SUR-LE-LAC", "QC"],
            ["IVUJIVIK", "QC"],
            ["JACKFISH LAKE", "SK"],
            ["JACKSON FALLS", "NB"],
            ["JACKSONS ARM", "NL"],
            ["JACKSONS COVE", "NL"],
            ["JACKSONS POINT", "ON"],
            ["JACKSONTOWN", "NB"],
            ["JACKSONVILLE", "NB"],
            ["JACQUES-CARTIER", "QC"],
            ["JADE CITY", "BC"],
            ["JAFFRAY", "BC"],
            ["JAMES RIVER BRIDGE", "AB"],
            ["JAMESVILLE", "NS"],
            ["JANETVILLE", "ON"],
            ["JANEVILLE", "NB"],
            ["JANSEN", "SK"],
            ["JARDINEVILLE", "NB"],
            ["JARVIE", "AB"],
            ["JARVIS BAY", "AB"],
            ["JARVIS", "ON"],
            ["JASPER", "AB"],
            ["JASPER", "ON"],
            ["JEAN COTE", "AB"],
            ["JEDBURGH", "SK"],
            ["JEDDORE OYSTER PONDS", "NS"],
            ["JEFFREYS", "NL"],
            ["JEFFRIES CORNER", "NB"],
            ["JELLICOE", "ON"],
            ["JEMSEG", "NB"],
            ["JENNER", "AB"],
            ["JERSEYSIDE", "NL"],
            ["JERSEYVILLE", "ON"],
            ["JEWETTS MILLS", "NB"],
            ["JOBS COVE", "NL"],
            ["JOE BATTS ARM", "NL"],
            ["JOGGINS", "NS"],
            ["JOGUES", "ON"],
            ["JOHN D'OR PRAIRIE", "AB"],
            ["JOHNSON SETTLEMENT CHARLOTTE C", "NB"],
            ["JOHNSON SETTLEMENT YORK CO", "NB"],
            ["JOHNSON'S MILLS", "NB"],
            ["JOHNSTON POINT", "NB"],
            ["JOHNVILLE", "NB"],
            ["JOLICURE", "NB"],
            ["JOLIETTE", "QC"],
            ["JOLY", "QC"],
            ["JONQUIERE", "QC"],
            ["JORDAN FALLS", "NS"],
            ["JORDAN MOUNTAIN", "NB"],
            ["JORDAN RIVER", "BC"],
            ["JORDAN STATION", "ON"],
            ["JOUSSARD", "AB"],
            ["JOYCEVILLE", "ON"],
            ["JUDIQUE", "NS"],
            ["JUNIPER ISLAND", "ON"],
            ["JUNIPER MOUNTAIN", "NS"],
            ["JUNIPER", "NB"],
            ["JUSKATLA", "BC"],
            ["JUSTICE", "MB"],
            ["KAGAWONG", "ON"],
            ["KAHNAWAKE", "QC"],
            ["KAKABEKA FALLS", "ON"],
            ["KALADAR", "ON"],
            ["KALEDEN", "BC"],
            ["KAMINISTIQUIA", "ON"],
            ["KAMLOOPS", "BC"],
            ["KAMOURASKA", "QC"],
            ["KAMSACK", "SK"],
            ["KANANASKIS", "AB"],
            ["KANATA", "ON"],
            ["KANGIQSUALUJJUAQ", "QC"],
            ["KANGIQSUJUAQ", "QC"],
            ["KANGIRSUK", "QC"],
            ["KAPASIWIN", "AB"],
            ["KAPUSKASING", "ON"],
            ["KARS", "NB"],
            ["KARS", "ON"],
            ["KASABONIKA", "ON"],
            ["KASHABOWIE", "ON"],
            ["KASHECHEWAN", "ON"],
            ["KASLO", "BC"],
            ["KATHYRN", "AB"],
            ["KATRINE", "ON"],
            ["KAWAWACHIKAMACH", "QC"],
            ["KAYVILLE", "SK"],
            ["KAZABAZUA", "QC"],
            ["KEARNEY", "ON"],
            ["KEARNS", "ON"],
            ["KEDGWICK NORD", "NB"],
            ["KEDGWICK OUEST", "NB"],
            ["KEDGWICK RIVER", "NB"],
            ["KEDGWICK SUD", "NB"],
            ["KEDGWICK", "NB"],
            ["KEELER", "SK"],
            ["KEELS", "NL"],
            ["KEENANS", "NB"],
            ["KEENE", "ON"],
            ["KEEWATIN", "ON"],
            ["KEEWAYWIN", "ON"],
            ["KEG RIVER", "AB"],
            ["KEGASKA", "QC"],
            ["KEHEWIN", "AB"],
            ["KEJICK", "ON"],
            ["KELFIELD", "SK"],
            ["KELLIHER", "SK"],
            ["KELOWNA", "BC"],
            ["KELSEY", "AB"],
            ["KELVINGTON", "SK"],
            ["KELWOOD", "MB"],
            ["KEMBLE", "ON"],
            ["KEMPT HEAD", "NS"],
            ["KEMPTOWN", "NS"],
            ["KEMPTVILLE", "NS"],
            ["KEMPTVILLE", "ON"],
            ["KENABEEK", "ON"],
            ["KENASTON", "SK"],
            ["KENDAL", "ON"],
            ["KENDAL", "SK"],
            ["KENILWORTH", "ON"],
            ["KENMORE", "ON"],
            ["KENNEDY", "SK"],
            ["KENNETCOOK", "NS"],
            ["KENORA", "ON"],
            ["KENOSEE LAKE", "SK"],
            ["KENSINGTON", "PE"],
            ["KENT BRIDGE", "ON"],
            ["KENT JUNCTION", "NB"],
            ["KENTON", "MB"],
            ["KENTVILLE", "NS"],
            ["KENVILLE", "MB"],
            ["KEOMA", "AB"],
            ["KEREMEOS", "BC"],
            ["KERROBERT", "SK"],
            ["KERWOOD", "ON"],
            ["KESWICK RIDGE", "NB"],
            ["KESWICK", "NB"],
            ["KESWICK", "ON"],
            ["KETCH HARBOUR", "NS"],
            ["KETTLEBY", "ON"],
            ["KHEDIVE", "SK"],
            ["KIAMIKA", "QC"],
            ["KIERSTEAD MOUNTAIN", "NB"],
            ["KIERSTEADVILLE", "NB"],
            ["KIKINO", "AB"],
            ["KILBRIDE", "NL"],
            ["KILBURN", "NB"],
            ["KILDONAN", "BC"],
            ["KILLALOE", "ON"],
            ["KILLALY", "SK"],
            ["KILLAM", "AB"],
            ["KILLAMS MILLS", "NB"],
            ["KILLARNEY ROAD", "NB"],
            ["KILLARNEY", "MB"],
            ["KILLARNEY", "ON"],
            ["KILLOWEEN", "NB"],
            ["KILWORTHY", "ON"],
            ["KIMBERLEY", "BC"],
            ["KIMBERLEY", "ON"],
            ["KIMMIRUT", "NU"],
            ["KINBURN", "ON"],
            ["KINCAID", "SK"],
            ["KINCARDINE", "NB"],
            ["KINCARDINE", "ON"],
            ["KINCOLITH", "BC"],
            ["KINDERSLEY", "SK"],
            ["KING CITY", "ON"],
            ["KING KIRKLAND", "ON"],
            ["KINGCOME INLET", "BC"],
            ["KINGFISHER LAKE", "ON"],
            ["KINGMAN", "AB"],
            ["KINGS COVE", "NL"],
            ["KINGS LANDING HISTORICAL SETTL", "NB"],
            ["KINGS POINT", "NL"],
            ["KINGSBURY", "QC"],
            ["KINGSCLEAR FIRST NATION", "NB"],
            ["KINGSEY FALLS", "QC"],
            ["KINGSGATE", "BC"],
            ["KINGSLEY", "NB"],
            ["KINGSTON", "NB"],
            ["KINGSTON", "NS"],
            ["KINGSTON", "ON"],
            ["KINGSVILLE", "ON"],
            ["KINISTINO", "SK"],
            ["KINKORA", "PE"],
            ["KINLEY", "SK"],
            ["KINMOUNT", "ON"],
            ["KINNEAR SETTLEMENT", "NB"],
            ["KINNEAR'S MILLS", "QC"],
            ["KINOOSAO", "SK"],
            ["KINOSOTA", "MB"],
            ["KINSAC", "NS"],
            ["KINSELLA", "AB"],
            ["KINTORE", "ON"],
            ["KINUSO", "AB"],
            ["KIPAWA", "QC"],
            ["KIPLING", "SK"],
            ["KIPPEN", "ON"],
            ["KIPPENS", "NL"],
            ["KIRKELLA", "MB"],
            ["KIRKFIELD", "ON"],
            ["KIRKLAND LAKE", "ON"],
            ["KIRKLAND", "NB"],
            ["KIRKLAND", "QC"],
            ["KIRKTON", "ON"],
            ["KIRRIEMUIR", "AB"],
            ["KISBEY", "SK"],
            ["KITCHENER", "BC"],
            ["KITCHENER", "ON"],
            ["KITIMAT", "BC"],
            ["KITKATLA", "BC"],
            ["KITSCOTY", "AB"],
            ["KITWANGA", "BC"],
            ["KLEEFELD", "MB"],
            ["KLEENA KLEENE", "BC"],
            ["KLEINBURG", "ON"],
            ["KLEMTU", "BC"],
            ["KNIGHTS COVE", "NL"],
            ["KNIGHTVILLE", "NB"],
            ["KNOWLESVILLE", "NB"],
            ["KNOWLTON", "QC"],
            ["KNUTSFORD", "BC"],
            ["KOKSILAH", "BC"],
            ["KOLA", "MB"],
            ["KOMARNO", "MB"],
            ["KOMOKA", "ON"],
            ["KOOSTATAK", "MB"],
            ["KOOTENAY BAY", "BC"],
            ["KOUCHIBOUGUAC NATIONAL PARK", "NB"],
            ["KOUCHIBOUGUAC", "NB"],
            ["KRONAU", "SK"],
            ["KRYDOR", "SK"],
            ["KUGAARUK", "NU"],
            ["KUGLUKTUK", "NU"],
            ["KUROKI", "SK"],
            ["KUUJJUAQ", "QC"],
            ["KUUJJUARAPIK", "QC"],
            ["KYLE", "SK"],
            ["KYLEMORE", "SK"],
            ["KYUQUOT", "BC"],
            ["L'ALVERNE", "QC"],
            ["L'AMABLE", "ON"],
            ["L'ANCIENNE-LORETTE", "QC"],
            ["L'ANGE GARDIEN", "QC"],
            ["L'ANGE-GARDIEN", "QC"],
            ["L'ANSE AU CLAIR", "NL"],
            ["L'ANSE AU LOUP", "NL"],
            ["L'ANSE-PLEUREUSE", "QC"],
            ["L'ANSE-SAINT-JEAN", "QC"],
            ["L'ARDOISE", "NS"],
            ["L'ASCENSION", "QC"],
            ["L'ASCENSION-DE-NOTRE-SEIGNEUR", "QC"],
            ["L'ASCENSION-DE-PATAPEDIA", "QC"],
            ["L'ASSOMPTION", "QC"],
            ["L'AVENIR", "QC"],
            ["L'EPIPHANIE", "QC"],
            ["L'ETANG-DU-NORD", "QC"],
            ["L'ETETE", "NB"],
            ["L'ILE-BIZARD", "QC"],
            ["L'ILE-CADIEUX", "QC"],
            ["L'ILE-D'ENTREE", "QC"],
            ["L'ILE-MICHON", "QC"],
            ["L'ILE-PERROT", "QC"],
            ["L'ISLE-AUX-GRUES", "QC"],
            ["L'ISLE-VERTE", "QC"],
            ["L'ISLET", "QC"],
            ["L'ISLETVILLE", "QC"],
            ["L'ORIGNAL", "ON"],
            ["LA BAIE", "QC"],
            ["LA BALEINE", "QC"],
            ["LA BARRIERE", "MB"],
            ["LA BOSTONNAIS", "QC"],
            ["LA BROQUERIE", "MB"],
            ["LA CONCEPTION", "QC"],
            ["LA COREY", "AB"],
            ["LA CORNE", "QC"],
            ["LA CRETE", "AB"],
            ["LA CROCHE", "QC"],
            ["LA DORE", "QC"],
            ["LA DURANTAYE", "QC"],
            ["LA GLACE", "AB"],
            ["LA GUADELOUPE", "QC"],
            ["LA HAVE", "NS"],
            ["LA LOCHE", "SK"],
            ["LA MACAZA", "QC"],
            ["LA MALBAIE", "QC"],
            ["LA MARTRE", "QC"],
            ["LA MINERVE", "QC"],
            ["LA MORANDIERE", "QC"],
            ["LA MOTTE", "QC"],
            ["LA PATRIE", "QC"],
            ["LA POCATIERE", "QC"],
            ["LA POILE", "NL"],
            ["LA PRAIRIE", "QC"],
            ["LA PRESENTATION", "QC"],
            ["LA REDEMPTION", "QC"],
            ["LA REINE", "QC"],
            ["LA RIVIERE", "MB"],
            ["LA RONGE", "SK"],
            ["LA SALETTE", "ON"],
            ["LA SALLE", "MB"],
            ["LA SARRE", "QC"],
            ["LA SCIE", "NL"],
            ["LA TABATIERE", "QC"],
            ["LA TRINITE-DES-MONTS", "QC"],
            ["LA TUQUE", "QC"],
            ["LA VISITATION-DE-L'ILE-DUPAS", "QC"],
            ["LA VISITATION-DE-YAMASKA", "QC"],
            ["LABELLE", "NS"],
            ["LABELLE", "QC"],
            ["LABRADOR CITY", "NL"],
            ["LABRECQUE", "QC"],
            ["LAC BAKER", "NB"],
            ["LAC BROCHET", "MB"],
            ["LAC DES ARCS", "AB"],
            ["LAC DES LOUPS", "QC"],
            ["LAC DU BONNET", "MB"],
            ["LAC LA BICHE", "AB"],
            ["LAC LA HACHE", "BC"],
            ["LAC SEUL", "ON"],
            ["LAC VERT", "SK"],
            ["LAC-A-LA-TORTUE", "QC"],
            ["LAC-AU-SAUMON", "QC"],
            ["LAC-AUX-SABLES", "QC"],
            ["LAC-BEAUPORT", "QC"],
            ["LAC-BOUCHETTE", "QC"],
            ["LAC-CAYAMANT", "QC"],
            ["LAC-DELAGE", "QC"],
            ["LAC-DES-AIGLES", "QC"],
            ["LAC-DES-ECORCES", "QC"],
            ["LAC-DES-ILES", "QC"],
            ["LAC-DES-PLAGES", "QC"],
            ["LAC-DES-SEIZE-ILES", "QC"],
            ["LAC-DROLET", "QC"],
            ["LAC-DU-CERF", "QC"],
            ["LAC-EDOUARD", "QC"],
            ["LAC-ETCHEMIN", "QC"],
            ["LAC-FRONTIERE", "QC"],
            ["LAC-HUMQUI", "QC"],
            ["LAC-KENOGAMI", "QC"],
            ["LAC-MEGANTIC", "QC"],
            ["LAC-SAGUAY", "QC"],
            ["LAC-SAINT-JOSEPH", "QC"],
            ["LAC-SAINT-PAUL", "QC"],
            ["LAC-SAINTE-MARIE", "QC"],
            ["LAC-SERGENT", "QC"],
            ["LAC-SIMON", "QC"],
            ["LAC-SUPERIEUR", "QC"],
            ["LACADENA", "SK"],
            ["LACHINE", "QC"],
            ["LACHUTE", "QC"],
            ["LACOLLE", "QC"],
            ["LACOMBE COUNTY", "AB"],
            ["LACOMBE", "AB"],
            ["LACONIA", "NS"],
            ["LADLE COVE", "NL"],
            ["LADRIERE", "QC"],
            ["LADYSMITH", "BC"],
            ["LADYSMITH", "QC"],
            ["LAFLECHE", "SK"],
            ["LAFOND", "AB"],
            ["LAFORCE", "QC"],
            ["LAGACEVILLE", "NB"],
            ["LAIRD", "SK"],
            ["LAJORD", "SK"],
            ["LAKE ALMA", "SK"],
            ["LAKE AUDY", "MB"],
            ["LAKE CHARLOTTE", "NS"],
            ["LAKE COWICHAN", "BC"],
            ["LAKE ECHO", "NS"],
            ["LAKE EDWARD", "NB"],
            ["LAKE EGMONT", "NS"],
            ["LAKE ERROCK", "BC"],
            ["LAKE FRANCIS", "MB"],
            ["LAKE GEORGE", "NB"],
            ["LAKE ISLE", "AB"],
            ["LAKE LENORE", "SK"],
            ["LAKE LOUISE", "AB"],
            ["LAKE MANITOBA FIRST NATION", "MB"],
            ["LAKE OF BAYS", "ON"],
            ["LAKE ST PETER", "ON"],
            ["LAKE UIST", "NS"],
            ["LAKEFIELD", "ON"],
            ["LAKEHURST", "ON"],
            ["LAKELAND", "MB"],
            ["LAKESIDE", "NB"],
            ["LAKESIDE", "NS"],
            ["LAKESIDE", "ON"],
            ["LAKETON", "NB"],
            ["LAKEVIEW", "NS"],
            ["LAKEVILLE CARLETON CO", "NB"],
            ["LAKEVILLE CORNER", "NB"],
            ["LAKEVILLE-WESTMORLAND", "NB"],
            ["LAMALINE", "NL"],
            ["LAMARCHE", "QC"],
            ["LAMARTINE", "QC"],
            ["LAMBERT'S COVE", "NB"],
            ["LAMBERTVILLE", "NB"],
            ["LAMBTON", "QC"],
            ["LAMEQUE", "NB"],
            ["LAMONT", "AB"],
            ["LAMPMAN", "SK"],
            ["LANARK", "ON"],
            ["LANCASTER PARK", "AB"],
            ["LANCASTER", "ON"],
            ["LANCE COVE", "NL"],
            ["LANCER", "SK"],
            ["LANDIS", "SK"],
            ["LANDMARK", "MB"],
            ["LANDRIENNE", "QC"],
            ["LANDRY OFFICE", "NB"],
            ["LANESVILLE", "NS"],
            ["LANG", "SK"],
            ["LANGBANK", "SK"],
            ["LANGDON", "AB"],
            ["LANGENBURG", "SK"],
            ["LANGHAM", "SK"],
            ["LANGLEY", "BC"],
            ["LANGRUTH", "MB"],
            ["LANGTON", "ON"],
            ["LANIEL", "QC"],
            ["LANIGAN", "SK"],
            ["LANORAIE", "QC"],
            ["LANSDOWNE HOUSE", "ON"],
            ["LANSDOWNE", "NB"],
            ["LANSDOWNE", "ON"],
            ["LANTIER", "QC"],
            ["LANTZ", "NS"],
            ["LANTZVILLE", "BC"],
            ["LAPLAND", "NS"],
            ["LAPLANTE", "NB"],
            ["LAPORTE", "SK"],
            ["LARDER LAKE", "ON"],
            ["LARK HARBOUR", "NL"],
            ["LAROUCHE", "QC"],
            ["LARRYS RIVER", "NS"],
            ["LASALLE", "ON"],
            ["LASALLE", "QC"],
            ["LASHBURN", "SK"],
            ["LASQUETI", "BC"],
            ["LATCHFORD", "ON"],
            ["LATERRIERE", "QC"],
            ["LATULIPE", "QC"],
            ["LAUDER", "MB"],
            ["LAUNAY", "QC"],
            ["LAUREL", "ON"],
            ["LAURENCETON", "NL"],
            ["LAURIER", "MB"],
            ["LAURIER-STATION", "QC"],
            ["LAURIERVILLE", "QC"],
            ["LAVAL", "QC"],
            ["LAVAL-OUEST", "QC"],
            ["LAVALTRIE", "QC"],
            ["LAVENHAM", "MB"],
            ["LAVERLOCHERE", "QC"],
            ["LAVIGNE", "ON"],
            ["LAVILLETTE", "NB"],
            ["LAVINGTON", "BC"],
            ["LAVOY", "AB"],
            ["LAWN", "NL"],
            ["LAWRENCE STATION", "NB"],
            ["LAWRENCETOWN", "NS"],
            ["LAWRENCETOWN.", "NS"],
            ["LAWRENCEVILLE", "QC"],
            ["LAX KW'ALAAMS", "BC"],
            ["LAZO", "BC"],
            ["LE BIC", "QC"],
            ["LE GARDEUR", "QC"],
            ["LE GOULET", "NB"],
            ["LEADER", "SK"],
            ["LEADING TICKLES", "NL"],
            ["LEAF RAPIDS", "MB"],
            ["LEAMINGTON", "ON"],
            ["LEASK", "SK"],
            ["LEASKDALE", "ON"],
            ["LEBEL-SUR-QUEVILLON", "QC"],
            ["LEBRET", "SK"],
            ["LECLERCVILLE", "QC"],
            ["LEDUC COUNTY", "AB"],
            ["LEDUC", "AB"],
            ["LEE SETTLEMENT", "NB"],
            ["LEECH", "NB"],
            ["LEFAIVRE", "ON"],
            ["LEFEBVRE", "QC"],
            ["LEFROY", "ON"],
            ["LEGAL", "AB"],
            ["LEITCHES CREEK", "NS"],
            ["LEITH", "ON"],
            ["LEJEUNE", "QC"],
            ["LEMBERG", "SK"],
            ["LEMIEUX", "QC"],
            ["LEMOYNE", "QC"],
            ["LENNOX ISLAND", "PE"],
            ["LENORE", "MB"],
            ["LEONARD COLONY", "NB"],
            ["LEONARDVILLE", "NB"],
            ["LEOVILLE", "SK"],
            ["LEPREAU", "NB"],
            ["LEROSS", "SK"],
            ["LEROY", "SK"],
            ["LERY", "QC"],
            ["LES BUISSONS", "QC"],
            ["LES CEDRES", "QC"],
            ["LES COTEAUX", "QC"],
            ["LES EBOULEMENTS", "QC"],
            ["LES ESCOUMINS", "QC"],
            ["LES HAUTEURS", "QC"],
            ["LES MECHINS", "QC"],
            ["LESLIE", "SK"],
            ["LESLIEVILLE", "AB"],
            ["LESTOCK", "SK"],
            ["LETANG", "NB"],
            ["LETELLIER", "MB"],
            ["LETHBRIDGE", "AB"],
            ["LETHBRIDGE", "NL"],
            ["LEVACK", "ON"],
            ["LEVERVILLE", "NB"],
            ["LEVIS", "QC"],
            ["LEWINS COVE", "NL"],
            ["LEWIS LAKE", "NS"],
            ["LEWIS MOUNTAIN", "NB"],
            ["LEWISPORTE", "NL"],
            ["LEWVAN", "SK"],
            ["LEXINGTON", "NS"],
            ["LIBAU", "MB"],
            ["LIBERTY", "SK"],
            ["LIEBENTHAL", "SK"],
            ["LIKELY", "BC"],
            ["LILLOOET", "BC"],
            ["LIMEHOUSE", "ON"],
            ["LIMEKILN", "NB"],
            ["LIMERICK", "SK"],
            ["LIMESTONE", "NB"],
            ["LIMOGES", "ON"],
            ["LINCOLN", "NB"],
            ["LINDALE", "AB"],
            ["LINDBERGH", "AB"],
            ["LINDELL BEACH", "BC"],
            ["LINDEN", "AB"],
            ["LINDSAY", "NB"],
            ["LINDSAY", "ON"],
            ["LINGAN ROAD", "NS"],
            ["LINGAN", "NS"],
            ["LINGWICK", "QC"],
            ["LINTLAW", "SK"],
            ["LINTON CORNER", "NB"],
            ["LINWOOD", "ON"],
            ["LIONS BAY", "BC"],
            ["LIONS HEAD", "ON"],
            ["LIPTON", "SK"],
            ["LISCOMB", "NS"],
            ["LISIEUX", "SK"],
            ["LISLE", "ON"],
            ["LISTER", "BC"],
            ["LISTOWEL", "ON"],
            ["LISTUGUJ", "QC"],
            ["LITTLE BARTIBOG", "NB"],
            ["LITTLE BAY EAST", "NL"],
            ["LITTLE BAY ISLANDS", "NL"],
            ["LITTLE BAY NDB", "NL"],
            ["LITTLE BAY PB", "NL"],
            ["LITTLE BRAS D'OR", "NS"],
            ["LITTLE BRITAIN", "ON"],
            ["LITTLE BROOK", "NS"],
            ["LITTLE BULLHEAD", "MB"],
            ["LITTLE BURNT BAY", "NL"],
            ["LITTLE CATALINA", "NL"],
            ["LITTLE CURRENT", "ON"],
            ["LITTLE DOVER", "NS"],
            ["LITTLE FORT", "BC"],
            ["LITTLE GRAND RAPIDS", "MB"],
            ["LITTLE HARBOUR EAST PB", "NL"],
            ["LITTLE HEARTS EASE", "NL"],
            ["LITTLE LEPREAU", "NB"],
            ["LITTLE LORRAINE", "NS"],
            ["LITTLE NARROWS", "NS"],
            ["LITTLE POND", "NS"],
            ["LITTLE RIDGE", "NB"],
            ["LITTLE RIVER ALBERT CO", "NB"],
            ["LITTLE RIVER GLOUCESTER CO", "NB"],
            ["LITTLE RIVER HILL", "NB"],
            ["LITTLE RIVER", "NS"],
            ["LITTLE SALMON RIVER WEST", "NB"],
            ["LITTLE SHEMOGUE", "NB"],
            ["LITTLE SMOKY", "AB"],
            ["LITTLE ST LAWRENCE", "NL"],
            ["LITTLE TANCOOK", "NS"],
            ["LIVELONG", "SK"],
            ["LIVELY", "ON"],
            ["LIVERPOOL", "NS"],
            ["LLOYDMINSTER", "AB"],
            ["LLOYDMINSTER", "SK"],
            ["LOCH LOMOND", "NS"],
            ["LOCHLIN", "ON"],
            ["LOCKEPORT", "NS"],
            ["LOCKPORT", "MB"],
            ["LOCKSTEAD", "NB"],
            ["LOCKWOOD", "SK"],
            ["LOCUST HILL", "ON"],
            ["LODGE BAY", "NL"],
            ["LODGEPOLE", "AB"],
            ["LOGAN LAKE", "BC"],
            ["LOGY BAY", "NL"],
            ["LOMBARDY", "ON"],
            ["LOMOND", "AB"],
            ["LONDESBOROUGH", "ON"],
            ["LONDON", "ON"],
            ["LONDONDERRY", "NB"],
            ["LONDONDERRY", "NS"],
            ["LONE BUTTE", "BC"],
            ["LONE PINE", "AB"],
            ["LONE ROCK", "SK"],
            ["LONG CREEK", "NB"],
            ["LONG HARBOUR", "NL"],
            ["LONG ISLAND", "NS"],
            ["LONG POINT", "NB"],
            ["LONG POINT", "NS"],
            ["LONG REACH", "NB"],
            ["LONG SAULT", "ON"],
            ["LONG SETTLEMENT KINGS CO", "NB"],
            ["LONG SETTLEMENT", "NB"],
            ["LONGBOW LAKE", "ON"],
            ["LONGFORD MILLS", "ON"],
            ["LONGLAC", "ON"],
            ["LONGUE-POINTE-DE-MINGAN", "QC"],
            ["LONGUE-RIVE", "QC"],
            ["LONGUEUIL", "QC"],
            ["LONGVIEW", "AB"],
            ["LONGWORTH", "BC"],
            ["LOON BAY", "NL"],
            ["LOON LAKE", "SK"],
            ["LORD'S COVE", "NB"],
            ["LOREBURN", "SK"],
            ["LORETTE", "MB"],
            ["LORETTO", "ON"],
            ["LORING", "ON"],
            ["LORNE", "NB"],
            ["LORRAINE", "QC"],
            ["LORRAINVILLE", "QC"],
            ["LOSIER SETTLEMENT", "NB"],
            ["LOTBINIERE", "QC"],
            ["LOTS-RENVERSES", "QC"],
            ["LOUGHEED", "AB"],
            ["LOUIS CREEK", "BC"],
            ["LOUISBOURG", "NS"],
            ["LOUISDALE", "NS"],
            ["LOUISEVILLE", "QC"],
            ["LOURDES", "NL"],
            ["LOURDES", "QC"],
            ["LOURDES-DE-BLANC-SABLON", "QC"],
            ["LOURDES-DE-JOLIETTE", "QC"],
            ["LOUSANA", "AB"],
            ["LOVE", "SK"],
            ["LOVERNA", "SK"],
            ["LOW", "QC"],
            ["LOWBANKS", "ON"],
            ["LOWE FARM", "MB"],
            ["LOWER BRANCH", "NS"],
            ["LOWER BRIGHTON", "NB"],
            ["LOWER CAMBRIDGE", "NB"],
            ["LOWER CAPE", "NB"],
            ["LOWER COVE", "NB"],
            ["LOWER COVERDALE", "NB"],
            ["LOWER DERBY", "NB"],
            ["LOWER EAST PUBNICO", "NS"],
            ["LOWER FIVE ISLANDS", "NS"],
            ["LOWER GREENWICH", "NB"],
            ["LOWER HAINESVILLE", "NB"],
            ["LOWER ISLAND COVE", "NL"],
            ["LOWER KINGSCLEAR", "NB"],
            ["LOWER KINTORE", "NB"],
            ["LOWER KNOXFORD", "NB"],
            ["LOWER L'ARDOISE", "NS"],
            ["LOWER MILLSTREAM", "NB"],
            ["LOWER NEWCASTLE", "NB"],
            ["LOWER NICOLA", "BC"],
            ["LOWER NORTHFIELD", "NS"],
            ["LOWER NORTON", "NB"],
            ["LOWER ONSLOW", "NS"],
            ["LOWER POST", "BC"],
            ["LOWER PROSPECT", "NS"],
            ["LOWER QUEENSBURY", "NB"],
            ["LOWER SACKVILLE", "NS"],
            ["LOWER ST MARYS", "NB"],
            ["LOWER TRURO", "NS"],
            ["LOWER WASHABUCK", "NS"],
            ["LOWER WEDGEPORT", "NS"],
            ["LOWER WEST PUBNICO", "NS"],
            ["LOWER WOODS HARBOUR", "NS"],
            ["LOWER WOODSTOCK", "NB"],
            ["LUCAN", "ON"],
            ["LUCASVILLE", "NS"],
            ["LUCKNOW", "ON"],
            ["LUCKY LAKE", "SK"],
            ["LUDLOW", "NB"],
            ["LUGAR", "NB"],
            ["LUMBY", "BC"],
            ["LUMSDEN", "NL"],
            ["LUMSDEN", "SK"],
            ["LUND", "BC"],
            ["LUNDAR", "MB"],
            ["LUNDBRECK", "AB"],
            ["LUNENBURG", "NS"],
            ["LUNENBURG", "ON"],
            ["LUSELAND", "SK"],
            ["LUSKVILLE", "QC"],
            ["LUTES MOUNTAIN", "NB"],
            ["LUTSELK'E", "NT"],
            ["LYALTA", "AB"],
            ["LYDGATE", "NS"],
            ["LYLETON", "MB"],
            ["LYN", "ON"],
            ["LYNDEN", "ON"],
            ["LYNDHURST", "ON"],
            ["LYNN LAKE", "MB"],
            ["LYNNFIELD", "NB"],
            ["LYSTER", "QC"],
            ["LYTTLETON", "NB"],
            ["LYTTON", "BC"],
            ["M'CHIGEENG", "ON"],
            ["MA-ME-O BEACH", "AB"],
            ["MABERLY", "ON"],
            ["MABOU", "NS"],
            ["MACADAMS LAKE", "NS"],
            ["MACAMIC", "QC"],
            ["MACCAN", "NS"],
            ["MACDIARMID", "ON"],
            ["MACDONALD", "MB"],
            ["MACDOUGALL SETTLEMENT", "NB"],
            ["MACDOWALL", "SK"],
            ["MACES BAY", "NB"],
            ["MACGREGOR", "MB"],
            ["MACKAY SIDING", "NS"],
            ["MACKDALE", "NS"],
            ["MACKENZIE", "BC"],
            ["MACKEY", "ON"],
            ["MACKINNONS HARBOUR", "NS"],
            ["MACKLIN", "SK"],
            ["MACLAGGAN BRIDGE", "NB"],
            ["MACNUTT", "SK"],
            ["MACOUN", "SK"],
            ["MACPHEES CORNER", "NS"],
            ["MACRORIE", "SK"],
            ["MACTAQUAC", "NB"],
            ["MACTIER", "ON"],
            ["MADAWASKA MALISEET FRST NATION", "NB"],
            ["MADAWASKA", "ON"],
            ["MADDEN", "AB"],
            ["MADDINGTON", "QC"],
            ["MADEIRA PARK", "BC"],
            ["MADELEINE-CENTRE", "QC"],
            ["MADISON", "SK"],
            ["MADOC", "ON"],
            ["MADRAN", "NB"],
            ["MADSEN", "ON"],
            ["MAFEKING", "MB"],
            ["MAGNETAWAN", "ON"],
            ["MAGOG", "QC"],
            ["MAGPIE", "QC"],
            ["MAGRATH", "AB"],
            ["MAHONE BAY", "NS"],
            ["MAIDSTONE", "ON"],
            ["MAIDSTONE", "SK"],
            ["MAIN BROOK", "NL"],
            ["MAIN CENTRE", "SK"],
            ["MAIN POINT", "NL"],
            ["MAIN RIVER", "NB"],
            ["MAIN-A-DIEU", "NS"],
            ["MAINSTREAM", "NB"],
            ["MAISONNETTE", "NB"],
            ["MAITLAND BRIDGE", "NS"],
            ["MAITLAND", "NS"],
            ["MAITLAND", "ON"],
            ["MAJOR", "SK"],
            ["MAKINAK", "MB"],
            ["MAKINSONS", "NL"],
            ["MAKKOVIK", "NL"],
            ["MAKWA", "SK"],
            ["MALAGASH", "NS"],
            ["MALAHAT", "BC"],
            ["MALAKWA", "BC"],
            ["MALARTIC", "QC"],
            ["MALDEN", "NB"],
            ["MALEB", "AB"],
            ["MALIOTENAM", "QC"],
            ["MALLAIG", "AB"],
            ["MALLORYTOWN", "ON"],
            ["MALONTON", "MB"],
            ["MALTEMPEC", "NB"],
            ["MANCEBOURG", "QC"],
            ["MANCHE-D'EPEE", "QC"],
            ["MANDEVILLE", "QC"],
            ["MANGANESE MINES", "NS"],
            ["MANIGOTAGAN", "MB"],
            ["MANILLA", "ON"],
            ["MANITOU", "MB"],
            ["MANITOUWADGE", "ON"],
            ["MANITOWANING", "ON"],
            ["MANIWAKI", "QC"],
            ["MANKOTA", "SK"],
            ["MANN'S MOUNTAIN", "NB"],
            ["MANNHURST", "NB"],
            ["MANNING PARK", "BC"],
            ["MANNING", "AB"],
            ["MANNVILLE", "AB"],
            ["MANOR", "SK"],
            ["MANOTICK", "ON"],
            ["MANOUANE", "QC"],
            ["MANSEAU", "QC"],
            ["MANSFIELD", "ON"],
            ["MANSFIELD", "QC"],
            ["MANSON CREEK", "BC"],
            ["MANSON", "MB"],
            ["MANSONS LANDING", "BC"],
            ["MANSONVILLE", "QC"],
            ["MANTARIO", "SK"],
            ["MANYBERRIES", "AB"],
            ["MAPLE CREEK", "SK"],
            ["MAPLE GLEN", "NB"],
            ["MAPLE GROVE", "NB"],
            ["MAPLE GROVE", "NS"],
            ["MAPLE GROVE", "QC"],
            ["MAPLE LEAF", "ON"],
            ["MAPLE RIDGE", "BC"],
            ["MAPLE RIDGE", "NB"],
            ["MAPLE VIEW", "NB"],
            ["MAPLE", "ON"],
            ["MAPLEDALE", "NB"],
            ["MAPLEHURST", "NB"],
            ["MAPLEWOOD", "NB"],
            ["MAQUAPIT LAKE", "NB"],
            ["MAR", "ON"],
            ["MARA", "BC"],
            ["MARATHON", "ON"],
            ["MARBLETON", "QC"],
            ["MARCELIN", "SK"],
            ["MARCHAND", "MB"],
            ["MARENGO", "SK"],
            ["MARGAREE CENTRE", "NS"],
            ["MARGAREE FORKS", "NS"],
            ["MARGAREE HARBOUR", "NS"],
            ["MARGAREE VALLEY", "NS"],
            ["MARGAREE", "NS"],
            ["MARGARET", "MB"],
            ["MARGARETSVILLE", "NS"],
            ["MARGO", "SK"],
            ["MARIA", "QC"],
            ["MARIAPOLIS", "MB"],
            ["MARICOURT", "QC"],
            ["MARIE JOSEPH", "NS"],
            ["MARIE REINE", "AB"],
            ["MARIEVILLE", "QC"],
            ["MARION BRIDGE", "NS"],
            ["MARIUS", "MB"],
            ["MARKDALE", "ON"],
            ["MARKERVILLE", "AB"],
            ["MARKHAM", "ON"],
            ["MARKHAMVILLE", "NB"],
            ["MARKINCH", "SK"],
            ["MARKSTAY", "ON"],
            ["MARLBANK", "ON"],
            ["MARMORA", "ON"],
            ["MARNE", "NB"],
            ["MARQUETTE", "MB"],
            ["MARQUIS", "SK"],
            ["MARRTOWN", "NB"],
            ["MARSDEN", "SK"],
            ["MARSH LAKE", "YT"],
            ["MARSHALL", "SK"],
            ["MARSOUI", "QC"],
            ["MARSTON", "QC"],
            ["MARTEN RIVER", "ON"],
            ["MARTENSVILLE", "SK"],
            ["MARTINTOWN", "ON"],
            ["MARTINVILLE", "QC"],
            ["MARWAYNE", "AB"],
            ["MARYFIELD", "SK"],
            ["MARYHILL", "ON"],
            ["MARYS HARBOUR", "NL"],
            ["MARYSTOWN", "NL"],
            ["MARYSVALE", "NL"],
            ["MARYSVILLE", "ON"],
            ["MASCARENE", "NB"],
            ["MASCOUCHE", "QC"],
            ["MASHTEUIATSH", "QC"],
            ["MASKINONGE", "QC"],
            ["MASSET", "BC"],
            ["MASSEY DRIVE", "NL"],
            ["MASSEY", "ON"],
            ["MASSUEVILLE", "QC"],
            ["MATACHEWAN", "ON"],
            ["MATAGAMI", "QC"],
            ["MATANE", "QC"],
            ["MATAPEDIA", "QC"],
            ["MATES CORNER", "NB"],
            ["MATHER", "MB"],
            ["MATHESON ISLAND", "MB"],
            ["MATHESON", "ON"],
            ["MATLOCK", "MB"],
            ["MATTAWA", "ON"],
            ["MATTHEWS SETTLEMENT", "NB"],
            ["MATTICE", "ON"],
            ["MAUGERVILLE", "NB"],
            ["MAVILLETTE", "NS"],
            ["MAXVILLE", "ON"],
            ["MAXWELL", "NB"],
            ["MAXWELL", "ON"],
            ["MAYERTHORPE", "AB"],
            ["MAYFAIR", "SK"],
            ["MAYFIELD", "NB"],
            ["MAYMONT", "SK"],
            ["MAYNE", "BC"],
            ["MAYNOOTH", "ON"],
            ["MAYO", "QC"],
            ["MAYO", "YT"],
            ["MAYVIEW", "SK"],
            ["MAZENOD", "SK"],
            ["MAZEROLLE SETTLEMENT", "NB"],
            ["MCADAM", "NB"],
            ["MCARTHURS MILLS", "ON"],
            ["MCAULEY", "MB"],
            ["MCBRIDE", "BC"],
            ["MCCALLUM SETTLEMENT", "NS"],
            ["MCCALLUM", "NL"],
            ["MCCORD", "SK"],
            ["MCCREARY", "MB"],
            ["MCDONALDS CORNERS", "ON"],
            ["MCGIVNEY", "NB"],
            ["MCGRATHS COVE", "NS"],
            ["MCGRAY", "NS"],
            ["MCGREGOR", "ON"],
            ["MCINTOSH HILL", "NB"],
            ["MCKEES MILLS", "NB"],
            ["MCKELLAR", "ON"],
            ["MCKENNA", "NB"],
            ["MCKENZIE CORNER", "NB"],
            ["MCKENZIE ISLAND", "ON"],
            ["MCKERROW", "ON"],
            ["MCKINLEYVILLE", "NB"],
            ["MCLAUGHLIN", "AB"],
            ["MCLAUGHLIN", "NB"],
            ["MCLEAN", "SK"],
            ["MCLEESE LAKE", "BC"],
            ["MCLENNAN", "AB"],
            ["MCLEOD HILL", "NB"],
            ["MCLEOD LAKE", "BC"],
            ["MCLEODS", "NB"],
            ["MCLURE", "BC"],
            ["MCMAHON", "SK"],
            ["MCMASTERVILLE", "QC"],
            ["MCNAMEE", "NB"],
            ["MCQUADE", "NB"],
            ["MCRAE", "AB"],
            ["MCTAGGART", "SK"],
            ["MCWATTERS", "QC"],
            ["MEACHAM", "SK"],
            ["MEADOW BROOK", "NB"],
            ["MEADOW CREEK", "BC"],
            ["MEADOW LAKE", "SK"],
            ["MEADOW PORTAGE", "MB"],
            ["MEAFORD", "ON"],
            ["MEAGHERS GRANT", "NS"],
            ["MEANDER RIVER", "AB"],
            ["MEATH PARK", "SK"],
            ["MECHANIC SETTLEMENT", "NB"],
            ["MEDFORD", "NB"],
            ["MEDICINE HAT", "AB"],
            ["MEDORA", "MB"],
            ["MEDSTEAD", "SK"],
            ["MEDUCTIC", "NB"],
            ["MEETING CREEK", "AB"],
            ["MELBOURNE", "ON"],
            ["MELBOURNE", "QC"],
            ["MELDRUM BAY", "ON"],
            ["MELEB", "MB"],
            ["MELFORT", "SK"],
            ["MELITA", "MB"],
            ["MELOCHEVILLE", "QC"],
            ["MELROSE", "NB"],
            ["MELROSE", "NL"],
            ["MELVILLE", "NS"],
            ["MELVILLE", "SK"],
            ["MEMBERTOU", "NS"],
            ["MEMRAMCOOK EAST", "NB"],
            ["MEMRAMCOOK", "NB"],
            ["MENDHAM", "SK"],
            ["MENISINO", "MB"],
            ["MENNEVAL", "NB"],
            ["MENZIE", "MB"],
            ["MEOTA", "SK"],
            ["MERCIER", "QC"],
            ["MERIGOMISH", "NS"],
            ["MERLIN", "ON"],
            ["MERRICKVILLE", "ON"],
            ["MERRITT", "BC"],
            ["MERVILLE", "BC"],
            ["MERVIN", "SK"],
            ["MESACHIE LAKE", "BC"],
            ["MESKANAW", "SK"],
            ["MESSINES", "QC"],
            ["METABETCHOUAN-LAC-A-LA-CROIX", "QC"],
            ["METCALFE", "ON"],
            ["METEGHAN CENTRE", "NS"],
            ["METEGHAN RIVER", "NS"],
            ["METEGHAN", "NS"],
            ["METIS-SUR-MER", "QC"],
            ["METISKOW", "AB"],
            ["MEYRONNE", "SK"],
            ["MEZIADIN LAKE", "BC"],
            ["MIAMI", "MB"],
            ["MICA CREEK", "BC"],
            ["MICMAC", "NS"],
            ["MIDALE", "SK"],
            ["MIDDLE ARM GB", "NL"],
            ["MIDDLE BAY", "QC"],
            ["MIDDLE CAPE", "NS"],
            ["MIDDLE COVE", "NL"],
            ["MIDDLE HAINESVILLE", "NB"],
            ["MIDDLE LAHAVE", "NS"],
            ["MIDDLE LAKE", "SK"],
            ["MIDDLE MUSQUODOBOIT", "NS"],
            ["MIDDLE PORTERS LAKE", "NS"],
            ["MIDDLE RIVER", "NB"],
            ["MIDDLE SACKVILLE", "NB"],
            ["MIDDLE SACKVILLE", "NS"],
            ["MIDDLE STEWIACKE", "NS"],
            ["MIDDLE WEST PUBNICO", "NS"],
            ["MIDDLEBRO", "MB"],
            ["MIDDLETON", "NB"],
            ["MIDDLETON", "NS"],
            ["MIDDLEWOOD", "NS"],
            ["MIDGIC", "NB"],
            ["MIDHURST", "ON"],
            ["MIDLAND KINGS CO", "NB"],
            ["MIDLAND QUEENS CO", "NB"],
            ["MIDLAND", "ON"],
            ["MIDVILLE BRANCH", "NS"],
            ["MIDWAY", "BC"],
            ["MIDWAY", "NB"],
            ["MIGISI SAHGAIGAN", "ON"],
            ["MIKADO", "SK"],
            ["MILAN", "QC"],
            ["MILDEN", "SK"],
            ["MILDMAY", "ON"],
            ["MILDRED", "SK"],
            ["MILES COVE", "NL"],
            ["MILESTONE", "SK"],
            ["MILFORD BAY", "ON"],
            ["MILFORD STATION", "NS"],
            ["MILFORD", "NS"],
            ["MILFORD", "ON"],
            ["MILK RIVER", "AB"],
            ["MILL BAY", "BC"],
            ["MILL BROOK", "NB"],
            ["MILL COVE", "NB"],
            ["MILL CREEK", "NS"],
            ["MILL VILLAGE", "NS"],
            ["MILL VILLAGE.", "NS"],
            ["MILLARVILLE", "AB"],
            ["MILLBANK", "ON"],
            ["MILLBROOK", "NS"],
            ["MILLBROOK", "ON"],
            ["MILLE-ISLES", "QC"],
            ["MILLER LAKE", "ON"],
            ["MILLERTON", "NB"],
            ["MILLERTOWN", "NL"],
            ["MILLET", "AB"],
            ["MILLGROVE", "ON"],
            ["MILLICENT", "AB"],
            ["MILLTOWN", "NL"],
            ["MILLVILLE", "NB"],
            ["MILLVILLE", "NS"],
            ["MILNER", "BC"],
            ["MILO", "AB"],
            ["MILTON", "NS"],
            ["MILTON", "ON"],
            ["MILVERTON", "ON"],
            ["MIMINEGASH", "PE"],
            ["MINAKI", "ON"],
            ["MINBURN", "AB"],
            ["MINDEMOYA", "ON"],
            ["MINDEN", "ON"],
            ["MINE CENTRE", "ON"],
            ["MINESING", "ON"],
            ["MINETT", "ON"],
            ["MINEVILLE", "NS"],
            ["MINGS BIGHT", "NL"],
            ["MINIOTA", "MB"],
            ["MINISTERS ISLAND", "NB"],
            ["MINITONAS", "MB"],
            ["MINNEDOSA", "MB"],
            ["MINNITAKI", "ON"],
            ["MINSTREL ISLAND", "BC"],
            ["MINTO", "MB"],
            ["MINTO", "NB"],
            ["MINTON", "SK"],
            ["MIQUELON", "QC"],
            ["MIRA GUT", "NS"],
            ["MIRA ROAD", "NS"],
            ["MIRABEL", "QC"],
            ["MIRAMICHI BAY", "NB"],
            ["MIRAMICHI ROAD", "NB"],
            ["MIRAMICHI", "NB"],
            ["MIRROR", "AB"],
            ["MISCOU", "NB"],
            ["MISCOUCHE", "PE"],
            ["MISPEC", "NB"],
            ["MISSANABIE", "ON"],
            ["MISSION", "BC"],
            ["MISSISSAUGA", "ON"],
            ["MISSISSIPPI STATION", "ON"],
            ["MISTATIM", "SK"],
            ["MISTISSINI", "QC"],
            ["MITCHELL", "MB"],
            ["MITCHELL", "ON"],
            ["MOBERLY LAKE", "BC"],
            ["MOBERT", "ON"],
            ["MOBILE", "NL"],
            ["MOFFAT", "ON"],
            ["MOFFET", "QC"],
            ["MOHANNES", "NB"],
            ["MOISIE", "QC"],
            ["MOLEGA LAKE", "NS"],
            ["MONARCH", "AB"],
            ["MONASTERY", "NS"],
            ["MONCTON", "NB"],
            ["MONETVILLE", "ON"],
            ["MONITOR", "AB"],
            ["MONKLAND", "ON"],
            ["MONKSTOWN", "NL"],
            ["MONKTON", "ON"],
            ["MONQUART", "NB"],
            ["MONT NEBO", "SK"],
            ["MONT-BRUN", "QC"],
            ["MONT-CARMEL", "QC"],
            ["MONT-JOLI", "QC"],
            ["MONT-LAURIER", "QC"],
            ["MONT-LOUIS", "QC"],
            ["MONT-ROYAL", "QC"],
            ["MONT-SAINT-GREGOIRE", "QC"],
            ["MONT-SAINT-HILAIRE", "QC"],
            ["MONT-SAINT-MICHEL", "QC"],
            ["MONT-SAINT-PIERRE", "QC"],
            ["MONT-TREMBLANT", "QC"],
            ["MONTAGUE GOLD MINES", "NS"],
            ["MONTAGUE", "PE"],
            ["MONTBEILLARD", "QC"],
            ["MONTCALM", "QC"],
            ["MONTCERF-LYTTON", "QC"],
            ["MONTE CREEK", "BC"],
            ["MONTE LAKE", "BC"],
            ["MONTEAGLE", "NB"],
            ["MONTEBELLO", "QC"],
            ["MONTEITH", "ON"],
            ["MONTMAGNY", "QC"],
            ["MONTMARTRE", "SK"],
            ["MONTNEY", "BC"],
            ["MONTPELLIER", "QC"],
            ["MONTREAL LAKE", "SK"],
            ["MONTREAL RIVER HARBOUR", "ON"],
            ["MONTREAL", "QC"],
            ["MONTREAL-EST", "QC"],
            ["MONTREAL-NORD", "QC"],
            ["MONTREAL-OUEST", "QC"],
            ["MONTROSE", "BC"],
            ["MONUMENT", "NB"],
            ["MOONBEAM", "ON"],
            ["MOONSTONE", "ON"],
            ["MOOREFIELD", "ON"],
            ["MOORES MILLS", "NB"],
            ["MOORETOWN", "ON"],
            ["MOOSE CREEK", "ON"],
            ["MOOSE FACTORY", "ON"],
            ["MOOSE JAW", "SK"],
            ["MOOSE LAKE", "MB"],
            ["MOOSE MOUNTAIN", "NB"],
            ["MOOSEHORN CREEK", "NB"],
            ["MOOSEHORN", "MB"],
            ["MOOSELAND", "NS"],
            ["MOOSOMIN", "SK"],
            ["MOOSONEE", "ON"],
            ["MORDEN", "MB"],
            ["MORELL", "PE"],
            ["MORETONS HARBOUR", "NL"],
            ["MOREWOOD", "ON"],
            ["MORIN-HEIGHTS", "QC"],
            ["MORINVILLE", "AB"],
            ["MORLEY", "AB"],
            ["MORPETH", "ON"],
            ["MORRELL SIDING", "NB"],
            ["MORRIN", "AB"],
            ["MORRIS", "MB"],
            ["MORRISBURG", "ON"],
            ["MORRISDALE", "NB"],
            ["MORRISTON", "ON"],
            ["MORSE", "SK"],
            ["MORSON", "ON"],
            ["MORTLACH", "SK"],
            ["MOSER RIVER", "NS"],
            ["MOSSBANK", "SK"],
            ["MOSSLEIGH", "AB"],
            ["MOSSLEY", "ON"],
            ["MOUNT ALBERT", "ON"],
            ["MOUNT ARLINGTON HEIGHTS", "NL"],
            ["MOUNT BRYDGES", "ON"],
            ["MOUNT CARMEL", "NL"],
            ["MOUNT CURRIE", "BC"],
            ["MOUNT DELIGHT", "NB"],
            ["MOUNT ELGIN", "ON"],
            ["MOUNT FOREST", "ON"],
            ["MOUNT HEBRON", "NB"],
            ["MOUNT HOPE", "NB"],
            ["MOUNT HOPE", "ON"],
            ["MOUNT MORIAH", "NL"],
            ["MOUNT PEARL", "NL"],
            ["MOUNT PISGAH", "NB"],
            ["MOUNT PLEASANT", "NB"],
            ["MOUNT PLEASANT", "ON"],
            ["MOUNT STEWART", "PE"],
            ["MOUNT UNIACKE", "NS"],
            ["MOUNTAIN GROVE", "ON"],
            ["MOUNTAIN ROAD", "MB"],
            ["MOUNTAIN VIEW", "AB"],
            ["MOUNTAIN", "ON"],
            ["MOYIE", "BC"],
            ["MOZART", "SK"],
            ["MT MIDDLETON", "NB"],
            ["MUD LAKE", "NL"],
            ["MUENSTER", "SK"],
            ["MUIRKIRK", "ON"],
            ["MULGRAVE", "NS"],
            ["MULGRAVE-ET-DERRY", "QC"],
            ["MULHURST BAY", "AB"],
            ["MULLINGAR", "SK"],
            ["MULVIHILL", "MB"],
            ["MUNCEY", "ON"],
            ["MUNCHO LAKE", "BC"],
            ["MUNDARE", "AB"],
            ["MUNDLEVILLE", "NB"],
            ["MUNIAC", "NB"],
            ["MUNSON", "AB"],
            ["MUNSTER", "ON"],
            ["MURDOCHVILLE", "QC"],
            ["MURILLO", "ON"],
            ["MURRAY CORNER", "NB"],
            ["MURRAY HARBOUR", "PE"],
            ["MURRAY RIVER", "PE"],
            ["MURRAY SETTLEMENT", "NB"],
            ["MURRAY SIDING", "NS"],
            ["MUSGRAVE HARBOUR", "NL"],
            ["MUSGRAVETOWN", "NL"],
            ["MUSIDORA", "AB"],
            ["MUSKODAY", "SK"],
            ["MUSKRAT DAM", "ON"],
            ["MUSQUASH", "NB"],
            ["MUSQUODOBOIT HARBOUR", "NS"],
            ["MUTTON BAY", "QC"],
            ["MYRNAM", "AB"],
            ["NACKAWIC", "NB"],
            ["NACMINE", "AB"],
            ["NAICAM", "SK"],
            ["NAIN", "NL"],
            ["NAIRN CENTRE", "ON"],
            ["NAKINA", "ON"],
            ["NAKUSP", "BC"],
            ["NAMAO", "AB"],
            ["NAMPA", "AB"],
            ["NAMUR", "QC"],
            ["NANAIMO", "BC"],
            ["NANOOSE BAY", "BC"],
            ["NANTES", "QC"],
            ["NANTICOKE", "ON"],
            ["NANTON", "AB"],
            ["NAPADOGAN", "NB"],
            ["NAPAN", "NB"],
            ["NAPANEE", "ON"],
            ["NAPIERVILLE", "QC"],
            ["NAPINKA", "MB"],
            ["NAPPAN", "NS"],
            ["NARAMATA", "BC"],
            ["NARCISSE", "MB"],
            ["NASH CREEK", "NB"],
            ["NASHWAAK BRIDGE", "NB"],
            ["NASHWAAK VILLAGE", "NB"],
            ["NASONWORTH", "NB"],
            ["NASS CAMP", "BC"],
            ["NATASHQUAN", "QC"],
            ["NATUASHISH", "NL"],
            ["NAUGHTON", "ON"],
            ["NAUWIGEWAUK", "NB"],
            ["NAVAN", "ON"],
            ["NEDELEC", "QC"],
            ["NEEBING", "ON"],
            ["NEEPAWA", "MB"],
            ["NEERLANDIA", "AB"],
            ["NEGGINAN", "MB"],
            ["NEGUAC", "NB"],
            ["NEIDPATH", "SK"],
            ["NEILBURG", "SK"],
            ["NEILS HARBOUR", "NS"],
            ["NELSON HOLLOW", "NB"],
            ["NELSON HOUSE", "MB"],
            ["NELSON", "BC"],
            ["NEMAIAH VALLEY", "BC"],
            ["NEMISCAU", "QC"],
            ["NEPEAN", "ON"],
            ["NEPISIGUIT FALLS", "NB"],
            ["NEREPIS", "NB"],
            ["NESBITT", "MB"],
            ["NESTLETON STATION", "ON"],
            ["NESTOR FALLS", "ON"],
            ["NESTOW", "AB"],
            ["NETHERHILL", "SK"],
            ["NEUDORF", "SK"],
            ["NEUSTADT", "ON"],
            ["NEUVILLE", "QC"],
            ["NEVILLE", "SK"],
            ["NEVIS", "AB"],
            ["NEW AVON", "NB"],
            ["NEW BANDON GLOUCESTER CO", "NB"],
            ["NEW BANDON NORTHUMB CO", "NB"],
            ["NEW BOTHWELL", "MB"],
            ["NEW BRIGDEN", "AB"],
            ["NEW CAMPBELLTON", "NS"],
            ["NEW CANAAN", "NB"],
            ["NEW CANADA", "NS"],
            ["NEW CARLISLE", "QC"],
            ["NEW CHELSEA", "NL"],
            ["NEW DAYTON", "AB"],
            ["NEW DENMARK", "NB"],
            ["NEW DENVER", "BC"],
            ["NEW DUNDEE", "ON"],
            ["NEW ENGLAND SETTLEMENT", "NB"],
            ["NEW GERMANY", "NS"],
            ["NEW GLASGOW", "NS"],
            ["NEW GLASGOW", "PE"],
            ["NEW HAMBURG", "ON"],
            ["NEW HARBOUR TB", "NL"],
            ["NEW HARRIS", "NS"],
            ["NEW HAVEN", "NS"],
            ["NEW HAZELTON", "BC"],
            ["NEW HORTON", "NB"],
            ["NEW JERSEY", "NB"],
            ["NEW LINE", "NB"],
            ["NEW LISKEARD", "ON"],
            ["NEW LOWELL", "ON"],
            ["NEW MARKET", "NB"],
            ["NEW MARYLAND", "NB"],
            ["NEW MELBOURNE", "NL"],
            ["NEW MILLS", "NB"],
            ["NEW MINAS", "NS"],
            ["NEW NORWAY", "AB"],
            ["NEW PERLICAN", "NL"],
            ["NEW RICHMOND", "QC"],
            ["NEW RIVER BEACH", "NB"],
            ["NEW ROSS", "NS"],
            ["NEW SCOTLAND", "NB"],
            ["NEW SONGHEES 1A", "BC"],
            ["NEW VICTORIA", "NS"],
            ["NEW WATERFORD", "NS"],
            ["NEW WESTMINSTER", "BC"],
            ["NEW ZION", "NB"],
            ["NEWBORO", "ON"],
            ["NEWBRIDGE", "NB"],
            ["NEWBROOK", "AB"],
            ["NEWBURG", "NB"],
            ["NEWBURGH", "ON"],
            ["NEWBURY", "ON"],
            ["NEWCASTLE CENTRE", "NB"],
            ["NEWCASTLE CREEK", "NB"],
            ["NEWCASTLE", "ON"],
            ["NEWCOMBVILLE", "NS"],
            ["NEWDALE", "MB"],
            ["NEWINGTON", "ON"],
            ["NEWMANS COVE", "NL"],
            ["NEWMARKET", "ON"],
            ["NEWPORT STATION", "NS"],
            ["NEWPORT", "NS"],
            ["NEWPORT", "QC"],
            ["NEWTON SIDING", "MB"],
            ["NEWTON", "ON"],
            ["NEWTONVILLE", "ON"],
            ["NEWTOWN", "NB"],
            ["NEWTOWN", "NL"],
            ["NEWTOWN", "NS"],
            ["NIAGARA FALLS", "ON"],
            ["NIAGARA ON THE LAKE", "ON"],
            ["NICHOLAS DENYS", "NB"],
            ["NICOLET", "QC"],
            ["NICTAU", "NB"],
            ["NIGADOO", "NB"],
            ["NIMPO LAKE", "BC"],
            ["NINE MILE RIVER", "NS"],
            ["NINETTE", "MB"],
            ["NINGA", "MB"],
            ["NIPAWIN", "SK"],
            ["NIPIGON", "ON"],
            ["NIPISSING", "ON"],
            ["NIPPERS HARBOUR", "NL"],
            ["NISKU", "AB"],
            ["NITON JUNCTION", "AB"],
            ["NIVERVILLE", "MB"],
            ["NOBEL", "ON"],
            ["NOBLEFORD", "AB"],
            ["NOBLETON", "ON"],
            ["NOEL", "NS"],
            ["NOELS POND", "NL"],
            ["NOELVILLE", "ON"],
            ["NOINVILLE", "NB"],
            ["NOKOMIS", "SK"],
            ["NOLALU", "ON"],
            ["NOMININGUE", "QC"],
            ["NOONAN", "NB"],
            ["NORDEGG", "AB"],
            ["NORGLENWOLD", "AB"],
            ["NORLAND", "ON"],
            ["NORMAN WELLS", "NT"],
            ["NORMANDIN", "QC"],
            ["NORMANS COVE", "NL"],
            ["NORMETAL", "QC"],
            ["NORQUAY", "SK"],
            ["NORRIS ARM NORTHSIDE", "NL"],
            ["NORRIS ARM", "NL"],
            ["NORRIS POINT", "NL"],
            ["NORTH AUGUSTA", "ON"],
            ["NORTH BATTLEFORD", "SK"],
            ["NORTH BAY", "ON"],
            ["NORTH BUXTON", "ON"],
            ["NORTH COBALT", "ON"],
            ["NORTH EAST MARGAREE", "NS"],
            ["NORTH EAST POINT", "NS"],
            ["NORTH FORKS", "NB"],
            ["NORTH GOWER", "ON"],
            ["NORTH HARBOUR PB", "NL"],
            ["NORTH HARBOUR SMB", "NL"],
            ["NORTH HATLEY", "QC"],
            ["NORTH LAKE", "NB"],
            ["NORTH LANCASTER", "ON"],
            ["NORTH PINE", "BC"],
            ["NORTH PORTAL", "SK"],
            ["NORTH PRESTON", "NS"],
            ["NORTH RIVER", "NS"],
            ["NORTH RUSTICO", "PE"],
            ["NORTH SAANICH", "BC"],
            ["NORTH SALEM", "NS"],
            ["NORTH SHANNONVALE", "NB"],
            ["NORTH SPIRIT LAKE", "ON"],
            ["NORTH STAR", "AB"],
            ["NORTH SYDNEY", "NS"],
            ["NORTH TAY", "NB"],
            ["NORTH TETAGOUCHE", "NB"],
            ["NORTH VALLEY", "NL"],
            ["NORTH VANCOUVER", "BC"],
            ["NORTH VIEW", "NB"],
            ["NORTH WEST ARM", "NS"],
            ["NORTH WEST BROOK", "NL"],
            ["NORTH WEST RIVER", "NL"],
            ["NORTH WEYBURN", "SK"],
            ["NORTH WILTSHIRE", "PE"],
            ["NORTH YORK", "ON"],
            ["NORTHAMPTON", "NB"],
            ["NORTHBROOK", "ON"],
            ["NORTHERN BAY", "NL"],
            ["NORTHERN HARBOUR", "NB"],
            ["NORTHGATE", "SK"],
            ["NORTHPORT", "NS"],
            ["NORTHSIDE EAST BAY", "NS"],
            ["NORTON", "NB"],
            ["NORTONDALE", "NB"],
            ["NORVAL", "ON"],
            ["NORWAY HOUSE", "MB"],
            ["NORWICH", "ON"],
            ["NORWOOD", "ON"],
            ["NOTIKEWIN", "AB"],
            ["NOTRE DAME DE LOURDES", "MB"],
            ["NOTRE DAME DE LOURDES", "NB"],
            ["NOTRE-DAME", "NB"],
            ["NOTRE-DAME-DE-HAM", "QC"],
            ["NOTRE-DAME-DE-L'ILE-PERROT", "QC"],
            ["NOTRE-DAME-DE-LA-MERCI", "QC"],
            ["NOTRE-DAME-DE-LA-PAIX", "QC"],
            ["NOTRE-DAME-DE-LA-SALETTE", "QC"],
            ["NOTRE-DAME-DE-LORETTE", "QC"],
            ["NOTRE-DAME-DE-MONTAUBAN", "QC"],
            ["NOTRE-DAME-DE-PONTMAIN", "QC"],
            ["NOTRE-DAME-DE-STANBRIDGE", "QC"],
            ["NOTRE-DAME-DES-BOIS", "QC"],
            ["NOTRE-DAME-DES-ERABLES", "NB"],
            ["NOTRE-DAME-DES-MONTS", "QC"],
            ["NOTRE-DAME-DES-PINS", "QC"],
            ["NOTRE-DAME-DES-PRAIRIES", "QC"],
            ["NOTRE-DAME-DES-SEPT-DOULEURS", "QC"],
            ["NOTRE-DAME-DU-LAC", "QC"],
            ["NOTRE-DAME-DU-LAUS", "QC"],
            ["NOTRE-DAME-DU-MONT-CARMEL", "QC"],
            ["NOTRE-DAME-DU-NORD", "QC"],
            ["NOTRE-DAME-DU-PORTAGE", "QC"],
            ["NOTRE-DAME-DU-ROSAIRE", "QC"],
            ["NOTTAWA", "ON"],
            ["NOUVELLE", "QC"],
            ["NOUVELLE-OUEST", "QC"],
            ["NOVAR", "ON"],
            ["NOYAN", "QC"],
            ["NUT MOUNTAIN", "SK"],
            ["NUTTBY", "NS"],
            ["O'HANLY", "MB"],
            ["O'LEARY", "PE"],
            ["OAK BAY", "NB"],
            ["OAK BLUFF", "MB"],
            ["OAK HAVEN", "NB"],
            ["OAK HILL", "NB"],
            ["OAK LAKE", "MB"],
            ["OAK MOUNTAIN", "NB"],
            ["OAK POINT KINGS CO", "NB"],
            ["OAK POINT", "MB"],
            ["OAK POINT", "NB"],
            ["OAK RIVER", "MB"],
            ["OAKBANK", "MB"],
            ["OAKBURN", "MB"],
            ["OAKFIELD", "NS"],
            ["OAKHILL", "NS"],
            ["OAKLAND", "NB"],
            ["OAKLAND", "ON"],
            ["OAKVIEW", "MB"],
            ["OAKVILLE", "MB"],
            ["OAKVILLE", "NB"],
            ["OAKVILLE", "ON"],
            ["OAKWOOD", "ON"],
            ["OBA", "ON"],
            ["OBEDJIWAN", "QC"],
            ["OCEAN FALLS", "BC"],
            ["OCHRE PIT COVE", "NL"],
            ["OCHRE RIVER", "MB"],
            ["ODANAK", "QC"],
            ["ODELL", "NB"],
            ["ODESSA", "ON"],
            ["ODESSA", "SK"],
            ["OGDEN", "QC"],
            ["OGEMA", "SK"],
            ["OGOKI", "ON"],
            ["OHATON", "AB"],
            ["OHSWEKEN", "ON"],
            ["OIL CITY", "ON"],
            ["OIL SPRINGS", "ON"],
            ["OKA", "QC"],
            ["OKANAGAN CENTRE", "BC"],
            ["OKANAGAN FALLS", "BC"],
            ["OKLA", "SK"],
            ["OKOTOKS", "AB"],
            ["OLD AVON", "NB"],
            ["OLD BARNS", "NS"],
            ["OLD CROW", "YT"],
            ["OLD FORT BAY", "QC"],
            ["OLD PERLICAN", "NL"],
            ["OLD RIDGE", "NB"],
            ["OLD SHOP", "NL"],
            ["OLDCASTLE", "ON"],
            ["OLDHAM", "NS"],
            ["OLDS", "AB"],
            ["OLHA", "MB"],
            ["OLIVER", "BC"],
            ["OMEMEE", "ON"],
            ["OMPAH", "ON"],
            ["ONANOLE", "MB"],
            ["ONAPING", "ON"],
            ["ONEFOUR", "AB"],
            ["ONION LAKE", "SK"],
            ["ONOWAY", "AB"],
            ["ONSLOW MOUNTAIN", "NS"],
            ["OONA RIVER", "BC"],
            ["OPAL", "AB"],
            ["OPASATIKA", "ON"],
            ["OPASKWAYAK", "MB"],
            ["OPEN HALL", "NL"],
            ["ORANGE HILL", "NB"],
            ["ORANGEDALE", "NS"],
            ["ORANGEVILLE", "ON"],
            ["ORFORD", "QC"],
            ["ORILLIA", "ON"],
            ["ORION", "AB"],
            ["ORKNEY", "SK"],
            ["ORLEANS", "ON"],
            ["ORMISTON", "SK"],
            ["ORMSTOWN", "QC"],
            ["ORO STATION", "ON"],
            ["ORO", "ON"],
            ["OROMOCTO", "NB"],
            ["ORONO", "ON"],
            ["ORTON", "ON"],
            ["OSAGE", "SK"],
            ["OSBORNE CORNER", "NB"],
            ["OSBORNE HARBOUR", "NS"],
            ["OSGOODE", "ON"],
            ["OSHAWA", "ON"],
            ["OSLER", "SK"],
            ["OSNABURGH HOUSE", "ON"],
            ["OSOYOOS", "BC"],
            ["OTTAWA BROOK", "NS"],
            ["OTTAWA", "ON"],
            ["OTTER CREEK", "NB"],
            ["OTTER LAKE", "QC"],
            ["OTTERBURN PARK", "QC"],
            ["OTTERBURNE", "MB"],
            ["OTTERVILLE", "ON"],
            ["OUJE-BOUGOUMOU", "QC"],
            ["OUNGRE", "SK"],
            ["OUTER COVE", "NL"],
            ["OUTLOOK", "SK"],
            ["OUTREMONT", "QC"],
            ["OVERSTONEVILLE", "MB"],
            ["OWEN SOUND", "ON"],
            ["OXBOW", "NB"],
            ["OXBOW", "SK"],
            ["OXDRIFT", "ON"],
            ["OXFORD HOUSE", "MB"],
            ["OXFORD JUNCTION", "NS"],
            ["OXFORD MILLS", "ON"],
            ["OXFORD STATION", "ON"],
            ["OXFORD", "NS"],
            ["OYAMA", "BC"],
            ["OYEN", "AB"],
            ["PABINEAU FALLS", "NB"],
            ["PABINEAU FIRST NATION", "NB"],
            ["PABOS MILLS", "QC"],
            ["PABOS", "QC"],
            ["PACKINGTON", "QC"],
            ["PACQUET", "NL"],
            ["PADDLE PRAIRIE", "AB"],
            ["PADDOCKWOOD", "SK"],
            ["PADOUE", "QC"],
            ["PAIN COURT", "ON"],
            ["PAISLEY", "ON"],
            ["PAKENHAM", "ON"],
            ["PAKWAW LAKE", "SK"],
            ["PALGRAVE", "ON"],
            ["PALMAROLLE", "QC"],
            ["PALMER RAPIDS", "ON"],
            ["PALMER", "SK"],
            ["PALMERSTON", "ON"],
            ["PAMBRUN", "SK"],
            ["PANGMAN", "SK"],
            ["PANGNIRTUNG", "NU"],
            ["PANORAMA", "BC"],
            ["PANSY", "MB"],
            ["PAPINEAUVILLE", "QC"],
            ["PAQUETVILLE", "NB"],
            ["PARADISE HILL", "SK"],
            ["PARADISE RIVER", "NL"],
            ["PARADISE VALLEY", "AB"],
            ["PARADISE", "NL"],
            ["PARADISE", "NS"],
            ["PARENT", "QC"],
            ["PARHAM", "ON"],
            ["PARIS", "ON"],
            ["PARISVILLE", "QC"],
            ["PARKBEG", "SK"],
            ["PARKER RIDGE", "NB"],
            ["PARKER ROAD", "NB"],
            ["PARKERS COVE", "NL"],
            ["PARKERVIEW", "SK"],
            ["PARKHILL", "ON"],
            ["PARKINDALE", "NB"],
            ["PARKLAND", "AB"],
            ["PARKMAN", "SK"],
            ["PARKSIDE", "SK"],
            ["PARKSVILLE", "BC"],
            ["PARLEE BROOK", "NB"],
            ["PARLEEVILLE", "NB"],
            ["PARRSBORO", "NS"],
            ["PARRY SOUND", "ON"],
            ["PARRY", "SK"],
            ["PARSON", "BC"],
            ["PARSONS POND", "NL"],
            ["PASADENA", "NL"],
            ["PASPEBIAC", "QC"],
            ["PASQUA", "SK"],
            ["PASS LAKE", "ON"],
            ["PASSEKEAG", "NB"],
            ["PATHLOW", "SK"],
            ["PATRICIA", "AB"],
            ["PATUANAK", "SK"],
            ["PAUINGASSI", "MB"],
            ["PAULATUK", "NT"],
            ["PAVILION", "BC"],
            ["PAWITIK", "ON"],
            ["PAYNTON", "SK"],
            ["PAYS PLAT", "ON"],
            ["PEACE RIVER RD", "BC"],
            ["PEACE RIVER", "AB"],
            ["PEACHLAND", "BC"],
            ["PEARSONVILLE", "NB"],
            ["PEAWANUCK", "ON"],
            ["PEEBLES", "SK"],
            ["PEEL", "NB"],
            ["PEERLESS LAKE", "AB"],
            ["PEERS", "AB"],
            ["PEFFERLAW", "ON"],
            ["PEGGYS COVE", "NS"],
            ["PEGUIS", "MB"],
            ["PELEE ISLAND", "ON"],
            ["PELERIN", "NB"],
            ["PELICAN NARROWS", "SK"],
            ["PELICAN RAPIDS", "MB"],
            ["PELLY CROSSING", "YT"],
            ["PELLY", "SK"],
            ["PELTOMA SETTLEMENT", "NB"],
            ["PEMBERTON RIDGE", "NB"],
            ["PEMBERTON", "BC"],
            ["PEMBROKE", "NB"],
            ["PEMBROKE", "ON"],
            ["PENDER ISLAND", "BC"],
            ["PENETANGUISHENE", "ON"],
            ["PENHOLD", "AB"],
            ["PENNANT STATION", "SK"],
            ["PENNFIELD", "NB"],
            ["PENNIAC", "NB"],
            ["PENNY", "BC"],
            ["PENOBSQUIS", "NB"],
            ["PENSE", "SK"],
            ["PENTICTON", "BC"],
            ["PENZANCE", "SK"],
            ["PERCE", "QC"],
            ["PERDUE", "SK"],
            ["PERIBONKA", "QC"],
            ["PERKINSFIELD", "ON"],
            ["PERRAULT FALLS", "ON"],
            ["PERRY SETTLEMENT", "NB"],
            ["PERRYVALE", "AB"],
            ["PERTH ROAD", "ON"],
            ["PERTH", "ON"],
            ["PERTH-ANDOVER", "NB"],
            ["PETAWAWA", "ON"],
            ["PETERBOROUGH", "ON"],
            ["PETERSBURG", "ON"],
            ["PETERSFIELD", "MB"],
            ["PETERVIEW", "NL"],
            ["PETIT DE GRAT", "NS"],
            ["PETIT ETANG", "NS"],
            ["PETIT FORTE", "NL"],
            ["PETIT TRACADIE", "NB"],
            ["PETIT-CAP", "NB"],
            ["PETIT-PAQUETVILLE", "NB"],
            ["PETIT-ROCHER", "NB"],
            ["PETIT-ROCHER-NORD", "NB"],
            ["PETIT-ROCHER-OUEST", "NB"],
            ["PETIT-ROCHER-SUD", "NB"],
            ["PETIT-SAGUENAY", "QC"],
            ["PETIT-SHIPPAGAN", "NB"],
            ["PETITCODIAC EAST", "NB"],
            ["PETITCODIAC", "NB"],
            ["PETITE RIVIERE", "NS"],
            ["PETITE-LAMEQUE", "NB"],
            ["PETITE-RIVIERE-DE-L'ILE", "NB"],
            ["PETITE-RIVIERE-SAINT-FRANCOIS", "QC"],
            ["PETITE-VALLEE", "QC"],
            ["PETROLIA", "ON"],
            ["PETTY HARBOUR", "NL"],
            ["PHELPSTON", "ON"],
            ["PHILIPSBURG", "QC"],
            ["PHIPPEN", "SK"],
            ["PIAPOT", "SK"],
            ["PICADILLY", "NB"],
            ["PICKARDVILLE", "AB"],
            ["PICKEREL", "ON"],
            ["PICKERING", "ON"],
            ["PICKETTS COVE", "NB"],
            ["PICKLE LAKE", "ON"],
            ["PICTON", "ON"],
            ["PICTOU ISLAND", "NS"],
            ["PICTOU", "NS"],
            ["PICTURE BUTTE", "AB"],
            ["PIEDMONT", "QC"],
            ["PIERCELAND", "SK"],
            ["PIERCEMONT", "NB"],
            ["PIERREFONDS", "QC"],
            ["PIERREVILLE", "QC"],
            ["PIERSON", "MB"],
            ["PIGEON HILL", "NB"],
            ["PIKANGIKUM", "ON"],
            ["PIKE RIVER", "QC"],
            ["PIKWITONEI", "MB"],
            ["PILGER", "SK"],
            ["PILLEYS ISLAND", "NL"],
            ["PILOT BUTTE", "SK"],
            ["PILOT MOUND", "MB"],
            ["PINANTAN LAKE", "BC"],
            ["PINAWA", "MB"],
            ["PINCHER CREEK", "AB"],
            ["PINCOURT", "QC"],
            ["PINE FALLS", "MB"],
            ["PINE GLEN", "NB"],
            ["PINE GROVE", "NS"],
            ["PINE GROVE.", "NS"],
            ["PINE LAKE", "AB"],
            ["PINE RIDGE", "NB"],
            ["PINE RIVER", "MB"],
            ["PINEHOUSE LAKE", "SK"],
            ["PINEHURST", "NS"],
            ["PINEVILLE", "NB"],
            ["PINEWOOD", "ON"],
            ["PINEY", "MB"],
            ["PINK MOUNTAIN", "BC"],
            ["PINTENDRE", "QC"],
            ["PIOPOLIS", "QC"],
            ["PIPERS COVE", "NS"],
            ["PIPESTONE", "MB"],
            ["PITT MEADOWS", "BC"],
            ["PLACENTIA", "NL"],
            ["PLAINFIELD", "ON"],
            ["PLAISANCE", "QC"],
            ["PLAMONDON", "AB"],
            ["PLANTAGENET", "ON"],
            ["PLASTER ROCK", "NB"],
            ["PLATE COVE EAST", "NL"],
            ["PLATE COVE WEST", "NL"],
            ["PLATO", "SK"],
            ["PLATTSVILLE", "ON"],
            ["PLEASANT BAY", "NS"],
            ["PLEASANT HILL", "NS"],
            ["PLEASANT RIDGE CHAR COUNTY", "NB"],
            ["PLEASANT RIDGE KINGS CO", "NB"],
            ["PLEASANT VILLA", "NB"],
            ["PLEASANTDALE", "SK"],
            ["PLEASANTVILLE", "NS"],
            ["PLENTY", "SK"],
            ["PLESSISVILLE", "QC"],
            ["PLEVNA", "ON"],
            ["PLUM COULEE", "MB"],
            ["PLUM POINT", "NL"],
            ["PLUMAS", "MB"],
            ["PLUMWESEEP", "NB"],
            ["PLUNKETT", "SK"],
            ["PLYMOUTH", "NB"],
            ["PLYMPTON", "NS"],
            ["POCOLOGAN", "NB"],
            ["POHENEGAMOOK", "QC"],
            ["POINT ACONI", "NS"],
            ["POINT DE BUTE", "NB"],
            ["POINT EDWARD", "NS"],
            ["POINT EDWARD", "ON"],
            ["POINT LA NIM", "NB"],
            ["POINT LEAMINGTON", "NL"],
            ["POINT OF BAY", "NL"],
            ["POINT TUPPER", "NS"],
            ["POINTE A BOULEAU", "NB"],
            ["POINTE A TOM", "NB"],
            ["POINTE AUX ROCHES", "ON"],
            ["POINTE DES ROBICHAUD", "NB"],
            ["POINTE DIXON POINT", "NB"],
            ["POINTE DU BOIS", "MB"],
            ["POINTE-A-LA-CROIX", "QC"],
            ["POINTE-A-LA-GARDE", "QC"],
            ["POINTE-ALEXANDRE", "NB"],
            ["POINTE-AU-BARIL-STATION", "ON"],
            ["POINTE-AUX-LOUPS", "QC"],
            ["POINTE-AUX-OUTARDES", "QC"],
            ["POINTE-AUX-TREMBLES", "QC"],
            ["POINTE-BRULE", "NB"],
            ["POINTE-CALUMET", "QC"],
            ["POINTE-CANOT", "NB"],
            ["POINTE-CLAIRE", "QC"],
            ["POINTE-DES-CASCADES", "QC"],
            ["POINTE-DU-CHENE", "NB"],
            ["POINTE-FORTUNE", "QC"],
            ["POINTE-LEBEL", "QC"],
            ["POINTE-SAPIN", "NB"],
            ["POINTE-SAUVAGE", "NB"],
            ["POINTE-VERTE", "NB"],
            ["POIRIER SUBDIVISION", "NB"],
            ["POKEMOUCHE", "NB"],
            ["POKESHAW", "NB"],
            ["POKESUDIE", "NB"],
            ["POKIOK", "NB"],
            ["POLE HILL", "NB"],
            ["POLLARDS POINT", "NL"],
            ["POLLETT RIVER", "NB"],
            ["POLLOCKVILLE", "AB"],
            ["POLONIA", "MB"],
            ["POMEROY RIDGE", "NB"],
            ["POND INLET", "NU"],
            ["PONDSTREAM", "NB"],
            ["PONOKA", "AB"],
            ["PONT LAFRANCE", "NB"],
            ["PONT LANDRY", "NB"],
            ["PONT-ROUGE", "QC"],
            ["PONTEIX", "SK"],
            ["PONTYPOOL", "ON"],
            ["POODIAC", "NB"],
            ["POOLE", "ON"],
            ["POOLS COVE", "NL"],
            ["POOLS ISLAND", "NL"],
            ["POPLAR HILL", "ON"],
            ["POPLAR POINT", "MB"],
            ["POPLARFIELD", "MB"],
            ["PORCUPINE PLAIN", "SK"],
            ["PORCUPINE", "ON"],
            ["PORQUIS JUNCTION", "ON"],
            ["PORT ALBERNI", "BC"],
            ["PORT ALBERT", "NL"],
            ["PORT ALICE", "BC"],
            ["PORT ALMA", "ON"],
            ["PORT ANSON", "NL"],
            ["PORT AU CHOIX", "NL"],
            ["PORT AU PORT", "NL"],
            ["PORT BLANDFORD", "NL"],
            ["PORT BURWELL", "ON"],
            ["PORT CALEDONIA", "NS"],
            ["PORT CARLING", "ON"],
            ["PORT CLEMENTS", "BC"],
            ["PORT CLYDE", "NS"],
            ["PORT COLBORNE", "ON"],
            ["PORT COQUITLAM", "BC"],
            ["PORT DE GRAVE", "NL"],
            ["PORT DOVER", "ON"],
            ["PORT DUFFERIN", "NS"],
            ["PORT EDWARD", "BC"],
            ["PORT ELGIN", "NB"],
            ["PORT ELGIN", "ON"],
            ["PORT FRANKS", "ON"],
            ["PORT GREVILLE", "NS"],
            ["PORT HARDY", "BC"],
            ["PORT HASTINGS", "NS"],
            ["PORT HAWKESBURY", "NS"],
            ["PORT HOOD", "NS"],
            ["PORT HOPE SIMPSON", "NL"],
            ["PORT HOPE", "ON"],
            ["PORT HOWE", "NS"],
            ["PORT JOLI", "NS"],
            ["PORT LA TOUR", "NS"],
            ["PORT LAMBTON", "ON"],
            ["PORT LORING", "ON"],
            ["PORT MAITLAND", "NS"],
            ["PORT MALCOLM", "NS"],
            ["PORT MCNEILL", "BC"],
            ["PORT MCNICOLL", "ON"],
            ["PORT MEDWAY", "NS"],
            ["PORT MELLON", "BC"],
            ["PORT MOODY", "BC"],
            ["PORT MORIEN", "NS"],
            ["PORT MOUTON", "NS"],
            ["PORT NEVILLE", "BC"],
            ["PORT PERRY", "ON"],
            ["PORT RENFREW", "BC"],
            ["PORT REXTON", "NL"],
            ["PORT ROBINSON", "ON"],
            ["PORT ROWAN", "ON"],
            ["PORT SANDFIELD", "ON"],
            ["PORT SAUNDERS", "NL"],
            ["PORT SEVERN", "ON"],
            ["PORT STANLEY", "ON"],
            ["PORT SYDNEY", "ON"],
            ["PORT UNION", "NL"],
            ["PORT WILLIAMS", "NS"],
            ["PORT-CARTIER", "QC"],
            ["PORT-DANIEL", "QC"],
            ["PORT-MENIER", "QC"],
            ["PORTAGE LA PRAIRIE", "MB"],
            ["PORTAGE ST-LOUIS", "NB"],
            ["PORTAGE VALE", "NB"],
            ["PORTAGE", "NB"],
            ["PORTAGE", "NS"],
            ["PORTAGE-DU-FORT", "QC"],
            ["PORTER COVE", "NB"],
            ["PORTERS LAKE", "NS"],
            ["PORTLAND CREEK", "NL"],
            ["PORTLAND", "ON"],
            ["PORTNEUF", "QC"],
            ["PORTNEUF-SUR-MER", "QC"],
            ["PORTREEVE", "SK"],
            ["PORTUGAL COVE-ST PHILIPS", "NL"],
            ["PORTUGUESE COVE", "NS"],
            ["POSTVILLE", "NL"],
            ["POUCE COUPE", "BC"],
            ["POUCH COVE", "NL"],
            ["POULARIES", "QC"],
            ["POUND COVE", "NL"],
            ["POWASSAN", "ON"],
            ["POWELL RIVER", "BC"],
            ["POWERVIEW", "MB"],
            ["POWNAL", "PE"],
            ["PRAIRIE RIVER", "SK"],
            ["PRAIRIE VIEW", "SK"],
            ["PRATT", "MB"],
            ["PREECEVILLE", "SK"],
            ["PREISSAC", "QC"],
            ["PRELATE", "SK"],
            ["PRESCOTT", "ON"],
            ["PRESPATOU", "BC"],
            ["PREVOST", "QC"],
            ["PRICE", "QC"],
            ["PRICEVILLE", "NB"],
            ["PRICEVILLE", "ON"],
            ["PRIDDIS", "AB"],
            ["PRIMATE", "SK"],
            ["PRIME BROOK", "NS"],
            ["PRINCE ALBERT", "ON"],
            ["PRINCE ALBERT", "SK"],
            ["PRINCE GEORGE", "BC"],
            ["PRINCE OF WALES", "NB"],
            ["PRINCE RUPERT", "BC"],
            ["PRINCE WILLIAM", "NB"],
            ["PRINCEPORT", "NS"],
            ["PRINCESS HARBOUR", "MB"],
            ["PRINCESS PARK", "NB"],
            ["PRINCETON", "BC"],
            ["PRINCETON", "NL"],
            ["PRINCETON", "ON"],
            ["PRINCEVILLE", "QC"],
            ["PRINTZ COVE", "NB"],
            ["PRITCHARD", "BC"],
            ["PROCTER", "BC"],
            ["PROGRESS", "BC"],
            ["PROPHET RIVER", "BC"],
            ["PROSPECT BAY", "NS"],
            ["PROSPECT VILLAGE", "NS"],
            ["PROSPECT", "NS"],
            ["PROSSER BROOK", "NB"],
            ["PROTON STATION", "ON"],
            ["PROULXVILLE", "QC"],
            ["PROVIDENCE BAY", "ON"],
            ["PROVOST", "AB"],
            ["PRUD'HOMME", "SK"],
            ["PUBLIC LANDING", "NB"],
            ["PUBNICO", "NS"],
            ["PUGWASH JUNCTION", "NS"],
            ["PUGWASH", "NS"],
            ["PUKATAWAGAN", "MB"],
            ["PUNNICHY", "SK"],
            ["PURPLE SPRINGS", "AB"],
            ["PUSLINCH", "ON"],
            ["PUTNAM", "ON"],
            ["PUVIRNITUQ", "QC"],
            ["PYNN'S BROOK", "NL"],
            ["QIKIQTARJUAQ", "NU"],
            ["QU'APPELLE", "SK"],
            ["QUADEVILLE", "ON"],
            ["QUAKER BROOK", "NB"],
            ["QUALICUM BEACH", "BC"],
            ["QUAQTAQ", "QC"],
            ["QUARRYVILLE", "NB"],
            ["QUATHIASKI COVE", "BC"],
            ["QUATSINO", "BC"],
            ["QUEBEC", "QC"],
            ["QUEEN CHARLOTTE", "BC"],
            ["QUEENSTON", "ON"],
            ["QUEENSTOWN", "NB"],
            ["QUEENSVILLE", "NS"],
            ["QUEENSVILLE", "ON"],
            ["QUESNEL", "BC"],
            ["QUILCHENA", "BC"],
            ["QUILL LAKE", "SK"],
            ["QUINTON", "SK"],
            ["QUISPAMSIS", "NB"],
            ["QUYON", "QC"],
            ["RABBIT LAKE", "SK"],
            ["RACINE", "QC"],
            ["RADISSON", "QC"],
            ["RADISSON", "SK"],
            ["RADIUM HOT SPRINGS", "BC"],
            ["RADVILLE", "SK"],
            ["RADWAY", "AB"],
            ["RAGUENEAU", "QC"],
            ["RAINBOW LAKE", "AB"],
            ["RAINIER", "AB"],
            ["RAINY RIVER", "ON"],
            ["RAITH", "ON"],
            ["RALEIGH", "NL"],
            ["RALSTON", "AB"],
            ["RAMA", "ON"],
            ["RAMA", "SK"],
            ["RAMEA", "NL"],
            ["RAMORE", "ON"],
            ["RAMSAYVILLE", "ON"],
            ["RAMSEY", "ON"],
            ["RANDOLPH", "MB"],
            ["RANFURLY", "AB"],
            ["RANG-SAINT-GEORGES", "NB"],
            ["RANKIN INLET", "NU"],
            ["RAPID CITY", "MB"],
            ["RAPID LAKE", "QC"],
            ["RAPID VIEW", "SK"],
            ["RAPIDE-DANSEUR", "QC"],
            ["RAPIDES-DES-JOACHIMS", "QC"],
            ["RATHWELL", "MB"],
            ["RATTER CORNER", "NB"],
            ["RATTLING BROOK", "NL"],
            ["RAVENNA", "ON"],
            ["RAVIGNAN", "QC"],
            ["RAWDON", "QC"],
            ["RAYMOND", "AB"],
            ["RAYMORE", "SK"],
            ["REABORO", "ON"],
            ["RED BANK QUEENS CO", "NB"],
            ["RED BANK RESERVE", "NB"],
            ["RED BANK", "NB"],
            ["RED BAY", "NL"],
            ["RED BRIDGE", "NB"],
            ["RED DEER COUNTY", "AB"],
            ["RED DEER", "AB"],
            ["RED EARTH CREEK", "AB"],
            ["RED EARTH", "SK"],
            ["RED HARBOUR PB", "NL"],
            ["RED HEAD COVE", "NL"],
            ["RED LAKE", "ON"],
            ["RED POINT", "NS"],
            ["RED RAPIDS", "NB"],
            ["RED ROCK", "NB"],
            ["RED ROCK", "ON"],
            ["RED SUCKER LAKE", "MB"],
            ["RED WILLOW", "AB"],
            ["REDBRIDGE", "ON"],
            ["REDCLIFF", "AB"],
            ["REDDITT", "ON"],
            ["REDMONDVILLE", "NB"],
            ["REDSTONE", "BC"],
            ["REDVERS", "SK"],
            ["REDWATER", "AB"],
            ["REDWOOD MEADOWS", "AB"],
            ["REEFS HARBOUR", "NL"],
            ["REFUGE COVE", "BC"],
            ["REGINA BEACH", "SK"],
            ["REGINA", "SK"],
            ["REIDVILLE", "NL"],
            ["REINFELD", "MB"],
            ["REMIGNY", "QC"],
            ["RENAUDS MILLS", "NB"],
            ["RENCONTRE EAST", "NL"],
            ["RENEWS", "NL"],
            ["RENFREW", "ON"],
            ["RENNIE", "MB"],
            ["RENOUS", "NB"],
            ["RENWER", "MB"],
            ["REPENTIGNY", "QC"],
            ["REPULSE BAY", "NU"],
            ["RESERVE MINES", "NS"],
            ["RESOLUTE", "NU"],
            ["RESTON", "MB"],
            ["RESTOULE", "ON"],
            ["REVELSTOKE", "BC"],
            ["REWARD", "SK"],
            ["REXTON", "NB"],
            ["RHEIN", "SK"],
            ["RHODES CORNER", "NS"],
            ["RICETON", "SK"],
            ["RICEVILLE", "NB"],
            ["RICHARD", "SK"],
            ["RICHARDS LANDING", "ON"],
            ["RICHARDSON", "NB"],
            ["RICHARDSON", "SK"],
            ["RICHELIEU", "QC"],
            ["RICHER", "MB"],
            ["RICHIBOUCTOU-VILLAGE", "NB"],
            ["RICHIBUCTO ROAD", "NB"],
            ["RICHIBUCTO", "NB"],
            ["RICHLEA", "SK"],
            ["RICHMOND CORNER", "NB"],
            ["RICHMOND HILL", "ON"],
            ["RICHMOND SETTLEMENT", "NB"],
            ["RICHMOND", "BC"],
            ["RICHMOND", "ON"],
            ["RICHMOND", "PE"],
            ["RICHMOND", "QC"],
            ["RICHMOUND", "SK"],
            ["RIDEAU FERRY", "ON"],
            ["RIDGEDALE", "SK"],
            ["RIDGETOWN", "ON"],
            ["RIDGEVILLE", "MB"],
            ["RIDGEVILLE", "ON"],
            ["RIDGEWAY", "ON"],
            ["RIDING MOUNTAIN", "MB"],
            ["RIGAUD", "QC"],
            ["RIGOLET", "NL"],
            ["RILEY BROOK", "NB"],
            ["RIMBEY", "AB"],
            ["RIMOUSKI", "QC"],
            ["RINES CREEK", "NS"],
            ["RIO GRANDE", "NB"],
            ["RIONDEL", "BC"],
            ["RIPLEY", "ON"],
            ["RIPON", "QC"],
            ["RIPPLES", "NB"],
            ["RISKE CREEK", "BC"],
            ["RITCHIE", "NB"],
            ["RIVER BOURGEOIS", "NS"],
            ["RIVER DE CHUTE", "NB"],
            ["RIVER DENYS", "NS"],
            ["RIVER DRIVE PARK", "ON"],
            ["RIVER GLADE", "NB"],
            ["RIVER HEBERT EAST", "NS"],
            ["RIVER HEBERT", "NS"],
            ["RIVER HILLS", "MB"],
            ["RIVER JOHN", "NS"],
            ["RIVER OF PONDS", "NL"],
            ["RIVER PHILIP", "NS"],
            ["RIVER RYAN", "NS"],
            ["RIVER VALLEY", "ON"],
            ["RIVERBANK CARLETON CO", "NB"],
            ["RIVERBANK KINGS CO", "NB"],
            ["RIVERBANK SOUTH", "NB"],
            ["RIVERCOURSE", "AB"],
            ["RIVERHEAD HARBOUR GRACE", "NL"],
            ["RIVERHURST", "SK"],
            ["RIVERPORT", "NS"],
            ["RIVERS", "MB"],
            ["RIVERSDALE", "NS"],
            ["RIVERSIDE ESTATES", "SK"],
            ["RIVERSIDE", "NS"],
            ["RIVERSIDE-ALBERT", "NB"],
            ["RIVERTON", "MB"],
            ["RIVERVIEW", "NB"],
            ["RIVIERE A LA TRUITE", "NB"],
            ["RIVIERE DU NORD", "NB"],
            ["RIVIERE QUI BARRE", "AB"],
            ["RIVIERE-A-CLAUDE", "QC"],
            ["RIVIERE-A-PIERRE", "QC"],
            ["RIVIERE-AU-TONNERRE", "QC"],
            ["RIVIERE-BEAUDETTE", "QC"],
            ["RIVIERE-BLEUE", "QC"],
            ["RIVIERE-DU-LOUP", "QC"],
            ["RIVIERE-DU-PORTAGE", "NB"],
            ["RIVIERE-ETERNITE", "QC"],
            ["RIVIERE-HEVA", "QC"],
            ["RIVIERE-MADELEINE", "QC"],
            ["RIVIERE-OUELLE", "QC"],
            ["RIVIERE-PASPEBIAC", "QC"],
            ["RIVIERE-PENTECOTE", "QC"],
            ["RIVIERE-ROUGE", "QC"],
            ["RIVIERE-SAINT-JEAN", "QC"],
            ["RIVIERE-SAINT-PAUL", "QC"],
            ["RIVIERE-TROIS-PISTOLES", "QC"],
            ["RIVIERE-VERTE", "NB"],
            ["ROACHVILLE", "NB"],
            ["ROBB", "AB"],
            ["ROBERTS ARM", "NL"],
            ["ROBERTS CREEK", "BC"],
            ["ROBERTVILLE", "NB"],
            ["ROBERVAL", "QC"],
            ["ROBICHAUD SETTLEMENT", "NB"],
            ["ROBINSONS", "NL"],
            ["ROBINSONVILLE", "NB"],
            ["ROBLIN", "MB"],
            ["ROBLIN", "ON"],
            ["ROBSART", "SK"],
            ["ROBSON", "BC"],
            ["ROCANVILLE", "SK"],
            ["ROCHEBAUCOURT", "QC"],
            ["ROCHES POINT", "ON"],
            ["ROCHESTER", "AB"],
            ["ROCHEVILLE", "NB"],
            ["ROCHFORT BRIDGE", "AB"],
            ["ROCHON SANDS", "AB"],
            ["ROCK CREEK", "BC"],
            ["ROCK ELM", "NS"],
            ["ROCK RIDGE", "MB"],
            ["ROCKCLIFFE", "ON"],
            ["ROCKGLEN", "SK"],
            ["ROCKHAVEN", "SK"],
            ["ROCKLAND", "NB"],
            ["ROCKLAND", "ON"],
            ["ROCKPORT", "NB"],
            ["ROCKPORT", "ON"],
            ["ROCKTON", "ON"],
            ["ROCKWOOD", "ON"],
            ["ROCKY HARBOUR", "NL"],
            ["ROCKY MOUNTAIN HOUSE", "AB"],
            ["ROCKY RAPIDS", "AB"],
            ["ROCKY VIEW", "AB"],
            ["ROCKYFORD", "AB"],
            ["RODDICKTON", "NL"],
            ["RODGERS COVE", "NL"],
            ["RODNEY", "ON"],
            ["ROGERSVILLE", "NB"],
            ["ROGERSVILLE-EST", "NB"],
            ["ROGERSVILLE-OUEST", "NB"],
            ["ROKEBY", "SK"],
            ["ROLAND", "MB"],
            ["ROLLA", "BC"],
            ["ROLLET", "QC"],
            ["ROLLING HILLS", "AB"],
            ["ROLLINGDAM", "NB"],
            ["ROLLY VIEW", "AB"],
            ["ROLPHTON", "ON"],
            ["ROQUEMAURE", "QC"],
            ["RORKETON", "MB"],
            ["ROSA", "MB"],
            ["ROSAIREVILLE", "NB"],
            ["ROSALIND", "AB"],
            ["ROSE BAY", "NS"],
            ["ROSE BLANCHE", "NL"],
            ["ROSE PRAIRIE", "BC"],
            ["ROSE VALLEY", "SK"],
            ["ROSEAU RIVER", "MB"],
            ["ROSEBUD", "AB"],
            ["ROSEDALE STATION", "AB"],
            ["ROSEDALE VALLEY", "AB"],
            ["ROSEDALE", "BC"],
            ["ROSEDALE", "NB"],
            ["ROSEHILL", "NB"],
            ["ROSEISLE", "MB"],
            ["ROSEMARY", "AB"],
            ["ROSEMERE", "QC"],
            ["ROSEMONT", "ON"],
            ["ROSENEATH", "ON"],
            ["ROSENFELD", "MB"],
            ["ROSENORT", "MB"],
            ["ROSETOWN", "SK"],
            ["ROSEVALE", "NB"],
            ["ROSLIN", "ON"],
            ["ROSS FERRY", "NS"],
            ["ROSS RIVER", "YT"],
            ["ROSSBURN", "MB"],
            ["ROSSEAU", "ON"],
            ["ROSSENDALE", "MB"],
            ["ROSSER", "MB"],
            ["ROSSLAND", "BC"],
            ["ROSSPORT", "ON"],
            ["ROSSVILLE", "NB"],
            ["ROSTHERN", "SK"],
            ["ROSTOCK", "ON"],
            ["ROTHESAY", "NB"],
            ["ROUGEMONT", "QC"],
            ["ROUGH WATERS", "NB"],
            ["ROULEAU", "SK"],
            ["ROUND HARBOUR GB", "NL"],
            ["ROUND HILL", "AB"],
            ["ROUND ISLAND", "NS"],
            ["ROUND LAKE CENTRE", "ON"],
            ["ROUTHIERVILLE", "QC"],
            ["ROUYN-NORANDA", "QC"],
            ["ROWENA", "NB"],
            ["ROWLEY", "AB"],
            ["ROWLEY", "NB"],
            ["ROXBORO", "QC"],
            ["ROXTON FALLS", "QC"],
            ["ROXTON POND", "QC"],
            ["ROYAL ROAD", "NB"],
            ["ROYALTON", "NB"],
            ["ROYSTON", "BC"],
            ["RUDDELL", "SK"],
            ["RUISSEAU-A-REBOURS", "QC"],
            ["RUMSEY", "AB"],
            ["RUNNYMEDE", "SK"],
            ["RUSAGONIS", "NB"],
            ["RUSCOM STATION", "ON"],
            ["RUSH LAKE", "SK"],
            ["RUSHOON", "NL"],
            ["RUSSELL", "MB"],
            ["RUSSELL", "ON"],
            ["RUSSELLVILLE", "NB"],
            ["RUTHERGLEN", "ON"],
            ["RUTHILDA", "SK"],
            ["RUTHVEN", "ON"],
            ["RYCROFT", "AB"],
            ["RYLEY", "AB"],
            ["SAANICH", "BC"],
            ["SAANICHTON", "BC"],
            ["SABLE RIVER", "NS"],
            ["SABREVOIS", "QC"],
            ["SACHIGO LAKE", "ON"],
            ["SACHS HARBOUR", "NT"],
            ["SACKVILLE ROAD", "NB"],
            ["SACKVILLE", "NB"],
            ["SACRE-COEUR-SAGUENAY", "QC"],
            ["SADDLE LAKE", "AB"],
            ["SAINT JOHN", "NB"],
            ["SAINT PONS", "NB"],
            ["SAINT-ADALBERT", "QC"],
            ["SAINT-ADELME", "QC"],
            ["SAINT-ADELPHE-DE-CHAMPLAIN", "QC"],
            ["SAINT-ADOLPHE-D'HOWARD", "QC"],
            ["SAINT-ADRIEN", "QC"],
            ["SAINT-ADRIEN-D'IRLANDE", "QC"],
            ["SAINT-AGAPIT", "QC"],
            ["SAINT-AIME", "QC"],
            ["SAINT-AIME-DES-LACS", "QC"],
            ["SAINT-ALBAN", "QC"],
            ["SAINT-ALBERT", "QC"],
            ["SAINT-ALEXANDRE-D'IBERVILLE", "QC"],
            ["SAINT-ALEXANDRE-DE-KAMOURASKA", "QC"],
            ["SAINT-ALEXANDRE-DES-LACS", "QC"],
            ["SAINT-ALEXIS-DE-MATAPEDIA", "QC"],
            ["SAINT-ALEXIS-DE-MONTCALM", "QC"],
            ["SAINT-ALEXIS-DES-MONTS", "QC"],
            ["SAINT-ALFRED", "QC"],
            ["SAINT-ALPHONSE-DE-CAPLAN", "QC"],
            ["SAINT-ALPHONSE-DE-GRANBY", "QC"],
            ["SAINT-ALPHONSE-RODRIGUEZ", "QC"],
            ["SAINT-AMABLE", "QC"],
            ["SAINT-AMATEUR", "NB"],
            ["SAINT-AMBROISE", "QC"],
            ["SAINT-AMBROISE-DE-KILDARE", "QC"],
            ["SAINT-ANACLET", "QC"],
            ["SAINT-ANDRE", "NB"],
            ["SAINT-ANDRE-AVELLIN", "QC"],
            ["SAINT-ANDRE-D'ARGENTEUIL", "QC"],
            ["SAINT-ANDRE-DE-KAMOURASKA", "QC"],
            ["SAINT-ANDRE-DE-RESTIGOUCHE", "QC"],
            ["SAINT-ANDRE-DU-LAC-SAINT-JEAN", "QC"],
            ["SAINT-ANDRE-LEBLANC", "NB"],
            ["SAINT-ANICET", "QC"],
            ["SAINT-ANSELME", "QC"],
            ["SAINT-ANTOINE SUD", "NB"],
            ["SAINT-ANTOINE", "NB"],
            ["SAINT-ANTOINE-ABBE", "QC"],
            ["SAINT-ANTOINE-DE-KENT", "NB"],
            ["SAINT-ANTOINE-DE-TILLY", "QC"],
            ["SAINT-ANTOINE-SUR-RICHELIEU", "QC"],
            ["SAINT-ANTONIN", "QC"],
            ["SAINT-APOLLINAIRE", "QC"],
            ["SAINT-ARMAND", "QC"],
            ["SAINT-ARSENE", "QC"],
            ["SAINT-ARTHUR", "NB"],
            ["SAINT-AUBERT", "QC"],
            ["SAINT-AUGUSTIN-DE-DESMAURES", "QC"],
            ["SAINT-AUGUSTIN-SAGUENAY", "QC"],
            ["SAINT-BARNABE-SUD", "QC"],
            ["SAINT-BARTHELEMY", "QC"],
            ["SAINT-BASILE", "NB"],
            ["SAINT-BASILE", "QC"],
            ["SAINT-BASILE-LE-GRAND", "QC"],
            ["SAINT-BENJAMIN", "QC"],
            ["SAINT-BENOIT-DU-LAC", "QC"],
            ["SAINT-BENOIT-LABRE", "QC"],
            ["SAINT-BERNARD", "QC"],
            ["SAINT-BERNARD-DE-LACOLLE", "QC"],
            ["SAINT-BERNARD-DE-MICHAUDVILLE", "QC"],
            ["SAINT-BERNARD-SUR-MER", "QC"],
            ["SAINT-BLAISE-SUR-RICHELIEU", "QC"],
            ["SAINT-BONAVENTURE", "QC"],
            ["SAINT-BONIFACE-DE-SHAWINIGAN", "QC"],
            ["SAINT-BRUNO", "QC"],
            ["SAINT-BRUNO-DE-GUIGUES", "QC"],
            ["SAINT-BRUNO-DE-KAMOURASKA", "QC"],
            ["SAINT-BRUNO-LAC-SAINT-JEAN", "QC"],
            ["SAINT-CALIXTE", "QC"],
            ["SAINT-CAMILLE", "QC"],
            ["SAINT-CAMILLE-DE-BELLECHASSE", "QC"],
            ["SAINT-CASIMIR", "QC"],
            ["SAINT-CELESTIN", "QC"],
            ["SAINT-CESAIRE", "QC"],
            ["SAINT-CHARLES", "NB"],
            ["SAINT-CHARLES-BORROMEE", "QC"],
            ["SAINT-CHARLES-DE-BELLECHASSE", "QC"],
            ["SAINT-CHARLES-DE-BOURGET", "QC"],
            ["SAINT-CHARLES-DE-DRUMMOND", "QC"],
            ["SAINT-CHARLES-GARNIER", "QC"],
            ["SAINT-CHARLES-SUR-RICHELIEU", "QC"],
            ["SAINT-CHRISTOPHE-D'ARTHABASKA", "QC"],
            ["SAINT-CHRYSOSTOME", "QC"],
            ["SAINT-CLAUDE", "QC"],
            ["SAINT-CLEMENT", "QC"],
            ["SAINT-CLEOPHAS", "QC"],
            ["SAINT-CLEOPHAS-DE-BRANDON", "QC"],
            ["SAINT-CLET", "QC"],
            ["SAINT-COLOMBAN", "QC"],
            ["SAINT-COME", "QC"],
            ["SAINT-COME-LINIERE", "QC"],
            ["SAINT-CONSTANT", "QC"],
            ["SAINT-CUTHBERT", "QC"],
            ["SAINT-CYPRIEN", "QC"],
            ["SAINT-CYPRIEN-DES-ETCHEMINS", "QC"],
            ["SAINT-CYRILLE-DE-L'ISLET", "QC"],
            ["SAINT-CYRILLE-DE-WENDOVER", "QC"],
            ["SAINT-DAMASE", "QC"],
            ["SAINT-DAMASE-DE-MATAPEDIA", "QC"],
            ["SAINT-DAMASE-DES-AULNAIES", "QC"],
            ["SAINT-DAMIEN", "NB"],
            ["SAINT-DAMIEN", "QC"],
            ["SAINT-DAMIEN-DE-BUCKLAND", "QC"],
            ["SAINT-DAVID", "QC"],
            ["SAINT-DENIS-DE-BROMPTON", "QC"],
            ["SAINT-DENIS-DE-LA-BOUTEILLERIE", "QC"],
            ["SAINT-DENIS-SUR-RICHELIEU", "QC"],
            ["SAINT-DIDACE", "QC"],
            ["SAINT-DOMINIQUE", "QC"],
            ["SAINT-DOMINIQUE-DU-ROSAIRE", "QC"],
            ["SAINT-DONAT", "QC"],
            ["SAINT-DONAT-DE-MONTCALM", "QC"],
            ["SAINT-EDMOND-DE-GRANTHAM", "QC"],
            ["SAINT-EDMOND-LES-PLAINES", "QC"],
            ["SAINT-EDOUARD-DE-KENT", "NB"],
            ["SAINT-EDOUARD-DE-LOTBINIERE", "QC"],
            ["SAINT-EDOUARD-DE-MASKINONGE", "QC"],
            ["SAINT-EDOUARD-DE-NAPIERVILLE", "QC"],
            ["SAINT-ELIE-DE-CAXTON", "QC"],
            ["SAINT-ELOI", "QC"],
            ["SAINT-ELPHEGE", "QC"],
            ["SAINT-ELZEAR", "QC"],
            ["SAINT-ELZEAR-DE-BONAVENTURE", "QC"],
            ["SAINT-ELZEAR-DE-TEMISCOUATA", "QC"],
            ["SAINT-EMILE-DE-SUFFOLK", "QC"],
            ["SAINT-EPHREM-DE-BEAUCE", "QC"],
            ["SAINT-EPIPHANE", "QC"],
            ["SAINT-ESPRIT", "QC"],
            ["SAINT-ETIENNE-DE-BEAUHARNOIS", "QC"],
            ["SAINT-ETIENNE-DE-BOLTON", "QC"],
            ["SAINT-ETIENNE-DE-LAUZON", "QC"],
            ["SAINT-ETIENNE-DES-GRES", "QC"],
            ["SAINT-EUGENE-D'ARGENTENAY", "QC"],
            ["SAINT-EUGENE-DE-GRANTHAM", "QC"],
            ["SAINT-EUGENE-DE-GUIGUES", "QC"],
            ["SAINT-EUSEBE", "QC"],
            ["SAINT-EUSTACHE", "QC"],
            ["SAINT-EVARISTE-DE-FORSYTH", "QC"],
            ["SAINT-FABIEN", "QC"],
            ["SAINT-FABIEN-DE-PANET", "QC"],
            ["SAINT-FAUSTIN-LAC-CARRE", "QC"],
            ["SAINT-FELICIEN", "QC"],
            ["SAINT-FELIX-D'OTIS", "QC"],
            ["SAINT-FELIX-DE-DALQUIER", "QC"],
            ["SAINT-FELIX-DE-KINGSEY", "QC"],
            ["SAINT-FELIX-DE-VALOIS", "QC"],
            ["SAINT-FERDINAND", "QC"],
            ["SAINT-FERREOL-LES-NEIGES", "QC"],
            ["SAINT-FLAVIEN", "QC"],
            ["SAINT-FORTUNAT", "QC"],
            ["SAINT-FRANCOIS-D'ASSISE", "QC"],
            ["SAINT-FRANCOIS-D'ORLEANS", "QC"],
            ["SAINT-FRANCOIS-DE-MADAWASKA", "NB"],
            ["SAINT-FRANCOIS-DE-SALES", "QC"],
            ["SAINT-FRANCOIS-DU-LAC", "QC"],
            ["SAINT-FRANCOIS-XAVIER-DE-VIGER", "QC"],
            ["SAINT-FREDERIC", "QC"],
            ["SAINT-FULGENCE", "QC"],
            ["SAINT-GABRIEL-DE-BRANDON", "QC"],
            ["SAINT-GABRIEL-DE-RIMOUSKI", "QC"],
            ["SAINT-GABRIEL-DE-VALCARTIER", "QC"],
            ["SAINT-GEDEON", "QC"],
            ["SAINT-GEDEON-DE-BEAUCE", "QC"],
            ["SAINT-GEORGES", "QC"],
            ["SAINT-GEORGES-DE-CHAMPLAIN", "QC"],
            ["SAINT-GEORGES-DE-MALBAIE", "QC"],
            ["SAINT-GEORGES-DE-WINDSOR", "QC"],
            ["SAINT-GERARD-DES-LAURENTIDES", "QC"],
            ["SAINT-GERMAIN", "QC"],
            ["SAINT-GERMAIN-DE-GRANTHAM", "QC"],
            ["SAINT-GERVAIS", "QC"],
            ["SAINT-GILBERT", "QC"],
            ["SAINT-GILLES", "QC"],
            ["SAINT-GODEFROI", "QC"],
            ["SAINT-GREGOIRE", "NB"],
            ["SAINT-GUILLAUME", "QC"],
            ["SAINT-GUY", "QC"],
            ["SAINT-HENRI-DE-LEVIS", "QC"],
            ["SAINT-HERMENEGILDE", "QC"],
            ["SAINT-HILARION", "QC"],
            ["SAINT-HIPPOLYTE", "QC"],
            ["SAINT-HONORE-DE-CHICOUTIMI", "QC"],
            ["SAINT-HONORE-DE-SHENLEY", "QC"],
            ["SAINT-HONORE-DE-TEMISCOUATA", "QC"],
            ["SAINT-HUBERT", "QC"],
            ["SAINT-HUBERT-RIVIERE-DU-LOUP", "QC"],
            ["SAINT-HUGUES", "QC"],
            ["SAINT-HYACINTHE", "QC"],
            ["SAINT-IGNACE", "NB"],
            ["SAINT-IGNACE-DE-LOYOLA", "QC"],
            ["SAINT-IGNACE-DE-STANBRIDGE", "QC"],
            ["SAINT-IRENEE", "NB"],
            ["SAINT-IRENEE", "QC"],
            ["SAINT-ISIDORE", "NB"],
            ["SAINT-ISIDORE", "QC"],
            ["SAINT-ISIDORE-DE-CLIFTON", "QC"],
            ["SAINT-ISIDORE-DE-LAPRAIRIE", "QC"],
            ["SAINT-JACQUES", "NB"],
            ["SAINT-JACQUES", "QC"],
            ["SAINT-JACQUES-DE-LEEDS", "QC"],
            ["SAINT-JACQUES-LE-MINEUR", "QC"],
            ["SAINT-JEAN-BAPTISTE", "QC"],
            ["SAINT-JEAN-CHRYSOSTOME", "QC"],
            ["SAINT-JEAN-D'ORLEANS", "QC"],
            ["SAINT-JEAN-DE-BREBEUF", "QC"],
            ["SAINT-JEAN-DE-CHERBOURG", "QC"],
            ["SAINT-JEAN-DE-DIEU", "QC"],
            ["SAINT-JEAN-DE-LA-LANDE", "QC"],
            ["SAINT-JEAN-DE-MATAPEDIA", "QC"],
            ["SAINT-JEAN-DE-MATHA", "QC"],
            ["SAINT-JEAN-DES-PILES", "QC"],
            ["SAINT-JEAN-PORT-JOLI", "QC"],
            ["SAINT-JEAN-SUR-RICHELIEU", "QC"],
            ["SAINT-JEROME", "QC"],
            ["SAINT-JOACHIM-DE-COURVAL", "QC"],
            ["SAINT-JOACHIM-DE-SHEFFORD", "QC"],
            ["SAINT-JOGUES", "QC"],
            ["SAINT-JOSEPH-DE-BEAUCE", "QC"],
            ["SAINT-JOSEPH-DE-COLERAINE", "QC"],
            ["SAINT-JOSEPH-DE-HAM-SUD", "QC"],
            ["SAINT-JOSEPH-DE-KAMOURASKA", "QC"],
            ["SAINT-JOSEPH-DE-KENT", "NB"],
            ["SAINT-JOSEPH-DE-LA-RIVE", "QC"],
            ["SAINT-JOSEPH-DE-LEPAGE", "QC"],
            ["SAINT-JOSEPH-DE-SOREL", "QC"],
            ["SAINT-JOSEPH-DU-LAC", "QC"],
            ["SAINT-JUDE", "QC"],
            ["SAINT-JULES", "QC"],
            ["SAINT-JULIEN", "QC"],
            ["SAINT-JUST-DE-BRETENIERES", "QC"],
            ["SAINT-JUSTE-DU-LAC", "QC"],
            ["SAINT-JUSTIN", "QC"],
            ["SAINT-LAMBERT", "QC"],
            ["SAINT-LAMBERT-DE-LAUZON", "QC"],
            ["SAINT-LAURENT NORD", "NB"],
            ["SAINT-LAURENT", "NB"],
            ["SAINT-LAURENT", "QC"],
            ["SAINT-LAURENT-ILE-D'ORLEANS", "QC"],
            ["SAINT-LAZARE", "QC"],
            ["SAINT-LAZARE-DE-BELLECHASSE", "QC"],
            ["SAINT-LEANDRE", "QC"],
            ["SAINT-LEOLIN", "NB"],
            ["SAINT-LEON", "QC"],
            ["SAINT-LEON-LE-GRAND", "QC"],
            ["SAINT-LEONARD", "NB"],
            ["SAINT-LEONARD", "QC"],
            ["SAINT-LEONARD-D'ASTON", "QC"],
            ["SAINT-LEONARD-DE-PORTNEUF", "QC"],
            ["SAINT-LEONARD-PARENT", "NB"],
            ["SAINT-LIBOIRE", "QC"],
            ["SAINT-LIGUORI", "QC"],
            ["SAINT-LIN-LAURENTIDES", "QC"],
            ["SAINT-LOUIS", "NB"],
            ["SAINT-LOUIS", "QC"],
            ["SAINT-LOUIS-DE-BLANDFORD", "QC"],
            ["SAINT-LOUIS-DE-GONZAGUE", "QC"],
            ["SAINT-LOUIS-DE-KENT", "NB"],
            ["SAINT-LOUIS-DU-HA-HA", "QC"],
            ["SAINT-LUC-DE-BELLECHASSE", "QC"],
            ["SAINT-LUC-DE-VINCENNES", "QC"],
            ["SAINT-LUCIEN", "QC"],
            ["SAINT-LUDGER", "QC"],
            ["SAINT-LUDGER-DE-MILOT", "QC"],
            ["SAINT-MAGLOIRE", "QC"],
            ["SAINT-MAJORIQUE", "QC"],
            ["SAINT-MALACHIE", "QC"],
            ["SAINT-MALO", "QC"],
            ["SAINT-MARC-DE-FIGUERY", "QC"],
            ["SAINT-MARC-DES-CARRIERES", "QC"],
            ["SAINT-MARC-DU-LAC-LONG", "QC"],
            ["SAINT-MARC-SUR-RICHELIEU", "QC"],
            ["SAINT-MARCEL-DE-RICHELIEU", "QC"],
            ["SAINT-MARCELLIN", "QC"],
            ["SAINT-MARTIN", "QC"],
            ["SAINT-MARTIN-DE-RESTIGOUCHE", "NB"],
            ["SAINT-MATHIAS-SUR-RICHELIEU", "QC"],
            ["SAINT-MATHIEU-D'HARRICANA", "QC"],
            ["SAINT-MATHIEU-DE-BELOEIL", "QC"],
            ["SAINT-MATHIEU-DE-LAPRAIRIE", "QC"],
            ["SAINT-MATHIEU-DE-RIOUX", "QC"],
            ["SAINT-MATHIEU-DU-PARC", "QC"],
            ["SAINT-MAURE", "NB"],
            ["SAINT-MAURICE", "NB"],
            ["SAINT-MAURICE", "QC"],
            ["SAINT-MEDARD", "QC"],
            ["SAINT-MICHEL", "QC"],
            ["SAINT-MICHEL-DE-BELLECHASSE", "QC"],
            ["SAINT-MICHEL-DES-SAINTS", "QC"],
            ["SAINT-MODESTE", "QC"],
            ["SAINT-MOISE", "QC"],
            ["SAINT-NARCISSE", "QC"],
            ["SAINT-NARCISSE-DE-BEAURIVAGE", "QC"],
            ["SAINT-NARCISSE-DE-RIMOUSKI", "QC"],
            ["SAINT-NAZAIRE-D'ACTON", "QC"],
            ["SAINT-NAZAIRE-DE-DORCHESTER", "QC"],
            ["SAINT-NEREE", "QC"],
            ["SAINT-NICEPHORE", "QC"],
            ["SAINT-NICOLAS", "QC"],
            ["SAINT-NOEL", "QC"],
            ["SAINT-NORBERT", "NB"],
            ["SAINT-NORBERT", "QC"],
            ["SAINT-NORBERT-D'ARTHABASKA", "QC"],
            ["SAINT-ODILON", "QC"],
            ["SAINT-OMER", "QC"],
            ["SAINT-OMER-L'ISLET", "QC"],
            ["SAINT-OURS", "QC"],
            ["SAINT-PACOME", "QC"],
            ["SAINT-PAMPHILE", "QC"],
            ["SAINT-PASCAL", "QC"],
            ["SAINT-PASCAL-BAYLON", "ON"],
            ["SAINT-PATRICE-DE-BEAURIVAGE", "QC"],
            ["SAINT-PAUL", "NB"],
            ["SAINT-PAUL", "QC"],
            ["SAINT-PAUL-D'ABBOTSFORD", "QC"],
            ["SAINT-PAUL-DE-LA-CROIX", "QC"],
            ["SAINT-PAUL-DE-MONTMINY", "QC"],
            ["SAINT-PAULIN", "QC"],
            ["SAINT-PHILEMON", "QC"],
            ["SAINT-PHILIBERT", "QC"],
            ["SAINT-PHILIPPE", "NB"],
            ["SAINT-PHILIPPE", "QC"],
            ["SAINT-PHILIPPE-DE-NERI", "QC"],
            ["SAINT-PIE", "QC"],
            ["SAINT-PIE-DE-GUIRE", "QC"],
            ["SAINT-PIERRE-BAPTISTE", "QC"],
            ["SAINT-PIERRE-DE-BROUGHTON", "QC"],
            ["SAINT-PIERRE-DE-LAMY", "QC"],
            ["SAINT-PIERRE-ILE-D'ORLEANS", "QC"],
            ["SAINT-PIERRE-LES-BECQUETS", "QC"],
            ["SAINT-PLACIDE", "QC"],
            ["SAINT-POLYCARPE", "QC"],
            ["SAINT-PRIME", "QC"],
            ["SAINT-PROSPER", "QC"],
            ["SAINT-PROSPER-DE-DORCHESTER", "QC"],
            ["SAINT-QUENTIN", "NB"],
            ["SAINT-RAPHAEL", "QC"],
            ["SAINT-RAYMOND", "QC"],
            ["SAINT-REDEMPTEUR", "QC"],
            ["SAINT-REMI", "QC"],
            ["SAINT-REMI-D'AMHERST", "QC"],
            ["SAINT-REMI-DE-TINGWICK", "QC"],
            ["SAINT-RENE", "QC"],
            ["SAINT-RENE-DE-MATANE", "QC"],
            ["SAINT-ROBERT", "QC"],
            ["SAINT-ROBERT-BELLARMIN", "QC"],
            ["SAINT-ROCH-DE-L'ACHIGAN", "QC"],
            ["SAINT-ROCH-DE-MEKINAC", "QC"],
            ["SAINT-ROCH-DE-RICHELIEU", "QC"],
            ["SAINT-ROCH-DES-AULNAIES", "QC"],
            ["SAINT-ROCH-OUEST", "QC"],
            ["SAINT-ROMAIN", "QC"],
            ["SAINT-ROMUALD", "QC"],
            ["SAINT-ROSAIRE", "QC"],
            ["SAINT-SAMUEL", "QC"],
            ["SAINT-SAUVEUR", "NB"],
            ["SAINT-SAUVEUR", "QC"],
            ["SAINT-SEBASTIEN", "QC"],
            ["SAINT-SEBASTIEN-DE-FRONTENAC", "QC"],
            ["SAINT-SEVERE", "QC"],
            ["SAINT-SEVERIN-DE-BEAUCE", "QC"],
            ["SAINT-SIMEON", "QC"],
            ["SAINT-SIMEON-DE-BONAVENTURE", "QC"],
            ["SAINT-SIMON", "NB"],
            ["SAINT-SIMON-DE-BAGOT", "QC"],
            ["SAINT-SIMON-DE-RIMOUSKI", "QC"],
            ["SAINT-SIMON-LES-MINES", "QC"],
            ["SAINT-STANISLAS", "QC"],
            ["SAINT-STANISLAS-DE-CHAMPLAIN", "QC"],
            ["SAINT-STANISLAS-DE-KOSTKA", "QC"],
            ["SAINT-SULPICE", "QC"],
            ["SAINT-SYLVERE", "QC"],
            ["SAINT-SYLVESTRE", "QC"],
            ["SAINT-TELESPHORE", "QC"],
            ["SAINT-THARCISIUS", "QC"],
            ["SAINT-THEODORE-D'ACTON", "QC"],
            ["SAINT-THEOPHILE", "QC"],
            ["SAINT-THOMAS", "QC"],
            ["SAINT-THOMAS-DE-KENT", "NB"],
            ["SAINT-THOMAS-DIDYME", "QC"],
            ["SAINT-THURIBE", "QC"],
            ["SAINT-TITE", "QC"],
            ["SAINT-TITE-DES-CAPS", "QC"],
            ["SAINT-UBALDE", "QC"],
            ["SAINT-ULRIC", "QC"],
            ["SAINT-URBAIN-DE-CHARLEVOIX", "QC"],
            ["SAINT-URBAIN-PREMIER", "QC"],
            ["SAINT-VALENTIN", "QC"],
            ["SAINT-VALERE", "QC"],
            ["SAINT-VALERIEN-DE-RIMOUSKI", "QC"],
            ["SAINT-VALLIER", "QC"],
            ["SAINT-VIANNEY", "QC"],
            ["SAINT-VICTOR", "QC"],
            ["SAINT-VITAL-DE-CLERMONT", "QC"],
            ["SAINT-WENCESLAS", "QC"],
            ["SAINT-WILFRED", "NB"],
            ["SAINT-ZACHARIE", "QC"],
            ["SAINT-ZENON", "QC"],
            ["SAINT-ZEPHIRIN-DE-COURVAL", "QC"],
            ["SAINT-ZOTIQUE", "QC"],
            ["SAINTE ROSE", "NB"],
            ["SAINTE-ADELE", "QC"],
            ["SAINTE-AGATHE-DE-LOTBINIERE", "QC"],
            ["SAINTE-AGATHE-DES-MONTS", "QC"],
            ["SAINTE-AGATHE-NORD", "QC"],
            ["SAINTE-AGNES-DE-DUNDEE", "QC"],
            ["SAINTE-ANGELE-DE-MERICI", "QC"],
            ["SAINTE-ANGELE-DE-MONNOIR", "QC"],
            ["SAINTE-ANGELE-DE-PREMONT", "QC"],
            ["SAINTE-ANNE GLOUCESTER CO", "NB"],
            ["SAINTE-ANNE-DE-BEAUPRE", "QC"],
            ["SAINTE-ANNE-DE-BELLEVUE", "QC"],
            ["SAINTE-ANNE-DE-KENT", "NB"],
            ["SAINTE-ANNE-DE-LA-PERADE", "QC"],
            ["SAINTE-ANNE-DE-LA-ROCHELLE", "QC"],
            ["SAINTE-ANNE-DE-MADAWASKA", "NB"],
            ["SAINTE-ANNE-DE-SOREL", "QC"],
            ["SAINTE-ANNE-DES-LACS", "QC"],
            ["SAINTE-ANNE-DES-MONTS", "QC"],
            ["SAINTE-ANNE-DES-PLAINES", "QC"],
            ["SAINTE-ANNE-DU-LAC", "QC"],
            ["SAINTE-ANNE-DU-SAULT", "QC"],
            ["SAINTE-APOLLINE-DE-PATTON", "QC"],
            ["SAINTE-AURELIE", "QC"],
            ["SAINTE-BARBE", "QC"],
            ["SAINTE-BEATRIX", "QC"],
            ["SAINTE-BRIGIDE-D'IBERVILLE", "QC"],
            ["SAINTE-BRIGITTE-DE-LAVAL", "QC"],
            ["SAINTE-BRIGITTE-DES-SAULTS", "QC"],
            ["SAINTE-CATHERINE", "QC"],
            ["SAINTE-CATHERINE-DE-HATLEY", "QC"],
            ["SAINTE-CECILE", "NB"],
            ["SAINTE-CECILE-DE-LEVRARD", "QC"],
            ["SAINTE-CECILE-DE-MASHAM", "QC"],
            ["SAINTE-CECILE-DE-MILTON", "QC"],
            ["SAINTE-CECILE-DE-WHITTON", "QC"],
            ["SAINTE-CHRISTINE", "QC"],
            ["SAINTE-CHRISTINE-D'AUVERGNE", "QC"],
            ["SAINTE-CLAIRE", "QC"],
            ["SAINTE-CLOTILDE-DE-BEAUCE", "QC"],
            ["SAINTE-CLOTILDE-DE-CHATEAUGUAY", "QC"],
            ["SAINTE-CLOTILDE-DE-HORTON", "QC"],
            ["SAINTE-CROIX", "QC"],
            ["SAINTE-DOROTHEE", "QC"],
            ["SAINTE-EDWIDGE", "QC"],
            ["SAINTE-ELISABETH", "QC"],
            ["SAINTE-ELISABETH-DE-PROULX", "QC"],
            ["SAINTE-ELIZABETH-DE-WARWICK", "QC"],
            ["SAINTE-EMELIE-DE-L'ENERGIE", "QC"],
            ["SAINTE-EULALIE", "QC"],
            ["SAINTE-EUPHEMIE", "QC"],
            ["SAINTE-FAMILLE", "QC"],
            ["SAINTE-FELICITE", "QC"],
            ["SAINTE-FELICITE-DE-L'ISLET", "QC"],
            ["SAINTE-FLAVIE", "QC"],
            ["SAINTE-FLORENCE", "QC"],
            ["SAINTE-FRANCOISE", "QC"],
            ["SAINTE-FRANCOISE-DE-LOTBINIERE", "QC"],
            ["SAINTE-GENEVIEVE", "QC"],
            ["SAINTE-GENEVIEVE-DE-BATISCAN", "QC"],
            ["SAINTE-GERMAINE-BOULE", "QC"],
            ["SAINTE-GERTRUDE-MANNEVILLE", "QC"],
            ["SAINTE-HEDWIDGE-DE-ROBERVAL", "QC"],
            ["SAINTE-HELENE-DE-BAGOT", "QC"],
            ["SAINTE-HELENE-DE-BREAKEYVILLE", "QC"],
            ["SAINTE-HELENE-DE-CHESTER", "QC"],
            ["SAINTE-HELENE-DE-KAMOURASKA", "QC"],
            ["SAINTE-HENEDINE", "QC"],
            ["SAINTE-JULIE", "QC"],
            ["SAINTE-JULIENNE", "QC"],
            ["SAINTE-JUSTINE", "QC"],
            ["SAINTE-JUSTINE-DE-NEWTON", "QC"],
            ["SAINTE-LOUISE", "NB"],
            ["SAINTE-LOUISE", "QC"],
            ["SAINTE-LUCE", "QC"],
            ["SAINTE-LUCIE-DE-BEAUREGARD", "QC"],
            ["SAINTE-LUCIE-DES-LAURENTIDES", "QC"],
            ["SAINTE-MADELEINE", "QC"],
            ["SAINTE-MARCELLINE-DE-KILDARE", "QC"],
            ["SAINTE-MARGUERITE-MARIE", "QC"],
            ["SAINTE-MARIE", "QC"],
            ["SAINTE-MARIE-DE-BLANDFORD", "QC"],
            ["SAINTE-MARIE-DE-KENT", "NB"],
            ["SAINTE-MARIE-SAINT-RAPHAEL", "NB"],
            ["SAINTE-MARIE-SALOME", "QC"],
            ["SAINTE-MARTHE", "QC"],
            ["SAINTE-MARTHE-SUR-LE-LAC", "QC"],
            ["SAINTE-MARTINE", "QC"],
            ["SAINTE-MELANIE", "QC"],
            ["SAINTE-MONIQUE", "QC"],
            ["SAINTE-MONIQUE-LAC-SAINT-JEAN", "QC"],
            ["SAINTE-PAULE", "QC"],
            ["SAINTE-PERPETUE", "QC"],
            ["SAINTE-PERPETUE-DE-L'ISLET", "QC"],
            ["SAINTE-PETRONILLE", "QC"],
            ["SAINTE-RITA", "QC"],
            ["SAINTE-ROSE", "QC"],
            ["SAINTE-ROSE-DE-WATFORD", "QC"],
            ["SAINTE-ROSE-DU-NORD", "QC"],
            ["SAINTE-ROSETTE", "NB"],
            ["SAINTE-SABINE", "QC"],
            ["SAINTE-SABINE-DE-BELLECHASSE", "QC"],
            ["SAINTE-SERAPHINE", "QC"],
            ["SAINTE-SOPHIE", "QC"],
            ["SAINTE-SOPHIE-D'HALIFAX", "QC"],
            ["SAINTE-SOPHIE-DE-LEVRARD", "QC"],
            ["SAINTE-THECLE", "QC"],
            ["SAINTE-THERESE SUD", "NB"],
            ["SAINTE-THERESE", "QC"],
            ["SAINTE-THERESE-DE-GASPE", "QC"],
            ["SAINTE-THERESE-DE-LA-GATINEAU", "QC"],
            ["SAINTE-URSULE", "QC"],
            ["SAINTE-VICTOIRE-DE-SOREL", "QC"],
            ["SAINTS-ANGES", "QC"],
            ["SAINTS-MARTYRS-CANADIENS", "QC"],
            ["SALABERRY-DE-VALLEYFIELD", "QC"],
            ["SALEM", "NB"],
            ["SALFORD", "ON"],
            ["SALISBURY WEST", "NB"],
            ["SALISBURY", "NB"],
            ["SALLUIT", "QC"],
            ["SALLYS COVE", "NL"],
            ["SALMO", "BC"],
            ["SALMON ARM", "BC"],
            ["SALMON BEACH", "NB"],
            ["SALMON COVE BDV", "NL"],
            ["SALMON CREEK", "NB"],
            ["SALMON RIVER ROAD", "NB"],
            ["SALMON RIVER", "NB"],
            ["SALMON RIVER", "NS"],
            ["SALMON RIVER.", "NS"],
            ["SALT SPRING ISLAND", "BC"],
            ["SALT SPRINGS", "NB"],
            ["SALT SPRINGS", "NS"],
            ["SALTCOATS", "SK"],
            ["SALVAGE", "NL"],
            ["SAMBRO CREEK", "NS"],
            ["SAMBRO HEAD", "NS"],
            ["SAMBRO", "NS"],
            ["SAMPSON COVE", "NS"],
            ["SAN CLARA", "MB"],
            ["SANDFIELD", "NS"],
            ["SANDFORD", "ON"],
            ["SANDILANDS", "MB"],
            ["SANDRINGHAM", "NL"],
            ["SANDSPIT", "BC"],
            ["SANDY BAY", "SK"],
            ["SANDY COVE", "NL"],
            ["SANDY COVE", "NS"],
            ["SANDY HOOK", "MB"],
            ["SANDY LAKE", "MB"],
            ["SANDY LAKE", "ON"],
            ["SANFORD", "MB"],
            ["SANGUDO", "AB"],
            ["SANIKILUAQ", "NU"],
            ["SARNIA", "ON"],
            ["SARSFIELD", "ON"],
            ["SARTO", "MB"],
            ["SASKATOON", "SK"],
            ["SATURNA", "BC"],
            ["SAUBLE BEACH", "ON"],
            ["SAULNIERVILLE", "NS"],
            ["SAULT STE. MARIE", "ON"],
            ["SAUMAREZ", "NB"],
            ["SAVANT LAKE", "ON"],
            ["SAVOIE LANDING", "NB"],
            ["SAVONA", "BC"],
            ["SAWYERVILLE", "QC"],
            ["SAYABEC", "QC"],
            ["SAYWARD", "BC"],
            ["SCANDIA", "AB"],
            ["SCANTERBURY", "MB"],
            ["SCARBOROUGH", "ON"],
            ["SCEPTRE", "SK"],
            ["SCHANZENFELD", "MB"],
            ["SCHEFFERVILLE", "QC"],
            ["SCHOMBERG", "ON"],
            ["SCHREIBER", "ON"],
            ["SCHULER", "AB"],
            ["SCHUMACHER", "ON"],
            ["SCOTCH CREEK", "BC"],
            ["SCOTCH LAKE", "NB"],
            ["SCOTCH LAKE", "NS"],
            ["SCOTCH RIDGE", "NB"],
            ["SCOTCH SETTLEMENT YORK CO", "NB"],
            ["SCOTCH SETTLEMENT", "NB"],
            ["SCOTCH VILLAGE", "NS"],
            ["SCOTCHTOWN", "NB"],
            ["SCOTCHTOWN", "NS"],
            ["SCOTLAND", "ON"],
            ["SCOTSBURN", "NS"],
            ["SCOTSTOWN", "QC"],
            ["SCOTSVILLE", "NS"],
            ["SCOTT SIDING", "NB"],
            ["SCOTT", "QC"],
            ["SCOTT", "SK"],
            ["SCOUDOUC ROAD", "NB"],
            ["SCOUDOUC", "NB"],
            ["SCOUT LAKE", "SK"],
            ["SEA SIDE", "NB"],
            ["SEABRIGHT", "NS"],
            ["SEAFORTH", "ON"],
            ["SEAGRAVE", "ON"],
            ["SEAL COVE FB", "NL"],
            ["SEAL COVE WB", "NL"],
            ["SEARCHMONT", "ON"],
            ["SEARSVILLE", "NB"],
            ["SEBA BEACH", "AB"],
            ["SEBRIGHT", "ON"],
            ["SEBRINGVILLE", "ON"],
            ["SECHELT", "BC"],
            ["SECOND FALLS", "NB"],
            ["SECOND NORTH RIVER", "NB"],
            ["SEDALIA", "AB"],
            ["SEDDONS CORNER", "MB"],
            ["SEDGEWICK", "AB"],
            ["SEDLEY", "SK"],
            ["SEELEYS BAY", "ON"],
            ["SEELEYS COVE", "NB"],
            ["SELBY", "ON"],
            ["SELDOM", "NL"],
            ["SELKIRK", "MB"],
            ["SELKIRK", "ON"],
            ["SEMANS", "SK"],
            ["SENLAC", "SK"],
            ["SENNETERRE", "QC"],
            ["SENNEVILLE", "QC"],
            ["SEPT-ILES", "QC"],
            ["SERPENT RIVER", "ON"],
            ["SESEKINIKA", "ON"],
            ["SETON PORTAGE", "BC"],
            ["SEVEN PERSONS", "AB"],
            ["SEVEN SISTERS FALLS", "MB"],
            ["SEVERN BRIDGE", "ON"],
            ["SEVOGLE", "NB"],
            ["SEXSMITH", "AB"],
            ["SHACKLETON", "SK"],
            ["SHAD BAY", "NS"],
            ["SHAG HARBOUR", "NS"],
            ["SHAKESPEARE", "ON"],
            ["SHALALTH", "BC"],
            ["SHALLOW LAKE", "ON"],
            ["SHALLOWAY COVE", "NL"],
            ["SHAMATTAWA", "MB"],
            ["SHAMROCK", "SK"],
            ["SHANKLIN", "NB"],
            ["SHANNON", "NB"],
            ["SHANNON", "QC"],
            ["SHANNONVILLE", "ON"],
            ["SHANTY BAY", "ON"],
            ["SHARBOT LAKE", "ON"],
            ["SHARON", "ON"],
            ["SHAUGHNESSY", "AB"],
            ["SHAUNAVON", "SK"],
            ["SHAWINIGAN", "QC"],
            ["SHAWINIGAN-SUD", "QC"],
            ["SHAWNIGAN LAKE", "BC"],
            ["SHAWVILLE", "QC"],
            ["SHEA HEIGHTS", "NL"],
            ["SHEARSTOWN", "NL"],
            ["SHEARWATER", "NS"],
            ["SHEBANDOWAN", "ON"],
            ["SHEDDEN", "ON"],
            ["SHEDIAC BRIDGE", "NB"],
            ["SHEDIAC BRIDGE-SHEDIAC RIVER", "NB"],
            ["SHEDIAC CAPE", "NB"],
            ["SHEDIAC RIVER", "NB"],
            ["SHEDIAC", "NB"],
            ["SHEENBORO", "QC"],
            ["SHEET HARBOUR", "NS"],
            ["SHEFFIELD", "NB"],
            ["SHEFFIELD", "ON"],
            ["SHEFFORD", "QC"],
            ["SHEGUIANDAH", "ON"],
            ["SHEHO", "SK"],
            ["SHELBURNE", "NS"],
            ["SHELBURNE", "ON"],
            ["SHELDRAKE", "QC"],
            ["SHELL LAKE", "SK"],
            ["SHELLBROOK", "SK"],
            ["SHELLMOUTH", "MB"],
            ["SHEMOGUE", "NB"],
            ["SHENACADIE", "NS"],
            ["SHENSTONE", "NB"],
            ["SHEPODY ALBERT CO", "NB"],
            ["SHEPODY KINGS CO", "NB"],
            ["SHERBROOKE", "NS"],
            ["SHERBROOKE", "QC"],
            ["SHERKSTON", "ON"],
            ["SHERRIDON", "MB"],
            ["SHERRINGTON", "QC"],
            ["SHERWOOD PARK", "AB"],
            ["SHESHEGWANING", "ON"],
            ["SHIGAWAKE", "QC"],
            ["SHILO", "MB"],
            ["SHINING TREE", "ON"],
            ["SHIP HARBOUR PB", "NL"],
            ["SHIPMAN", "SK"],
            ["SHIPPAGAN", "NB"],
            ["SHIPSHAW", "QC"],
            ["SHIRLEY", "BC"],
            ["SHOAL LAKE", "MB"],
            ["SHOE COVE", "NL"],
            ["SHORTDALE", "MB"],
            ["SHORTTS LAKE", "NS"],
            ["SHUBENACADIE EAST", "NS"],
            ["SHUBENACADIE", "NS"],
            ["SIBBALD", "AB"],
            ["SICAMOUS", "BC"],
            ["SIDNEY", "BC"],
            ["SIDNEY", "MB"],
            ["SIEGAS", "NB"],
            ["SIFTON", "MB"],
            ["SIKSIKA", "AB"],
            ["SILLIKERS", "NB"],
            ["SILTON", "SK"],
            ["SILVER RIDGE", "MB"],
            ["SILVER VALLEY", "AB"],
            ["SILVER WATER", "ON"],
            ["SILVER", "MB"],
            ["SILVERTON", "BC"],
            ["SIMCOE", "ON"],
            ["SIMMIE", "SK"],
            ["SIMONDS", "NB"],
            ["SIMOOM SOUND", "BC"],
            ["SIMPSON", "SK"],
            ["SINCLAIR MILLS", "BC"],
            ["SINCLAIR", "MB"],
            ["SINGHAMPTON", "ON"],
            ["SINTALUTA", "SK"],
            ["SIOUX LOOKOUT", "ON"],
            ["SIOUX NARROWS", "ON"],
            ["SIRDAR", "BC"],
            ["SISSON BROOK", "NB"],
            ["SISSON RIDGE", "NB"],
            ["SIX ROADS", "NB"],
            ["SKEAD", "ON"],
            ["SKIFF LAKE", "NB"],
            ["SKIFF", "AB"],
            ["SKOOKUMCHUCK", "BC"],
            ["SKOWNAN", "MB"],
            ["SLATE FALLS", "ON"],
            ["SLAVE LAKE", "AB"],
            ["SLEEMAN", "ON"],
            ["SLEMON PARK", "PE"],
            ["SLOCAN PARK", "BC"],
            ["SLOCAN", "BC"],
            ["SLOPE", "NB"],
            ["SMEATON", "SK"],
            ["SMILEY", "SK"],
            ["SMITH CROSSING", "NB"],
            ["SMITH", "AB"],
            ["SMITH'S CORNER", "NB"],
            ["SMITHERS", "BC"],
            ["SMITHFIELD", "NB"],
            ["SMITHS COVE", "NS"],
            ["SMITHS CREEK", "NB"],
            ["SMITHS FALLS", "ON"],
            ["SMITHSVILLE", "NS"],
            ["SMITHTOWN", "NB"],
            ["SMITHVILLE", "ON"],
            ["SMOKY LAKE", "AB"],
            ["SMOOTH ROCK FALLS", "ON"],
            ["SNIDER MOUNTAIN", "NB"],
            ["SNOOKS ARM", "NL"],
            ["SNOW LAKE", "MB"],
            ["SNOW ROAD STATION", "ON"],
            ["SNOWDEN", "SK"],
            ["SNOWFLAKE", "MB"],
            ["SOINTULA", "BC"],
            ["SOLSGIRTH", "MB"],
            ["SOMBRA", "ON"],
            ["SOMERSET", "MB"],
            ["SOMERVILLE", "NB"],
            ["SONNINGDALE", "SK"],
            ["SOOKE", "BC"],
            ["SOPS ARM", "NL"],
            ["SOREL-TRACY", "QC"],
            ["SORMANY", "NB"],
            ["SORRENTO", "BC"],
            ["SOURIS", "MB"],
            ["SOURIS", "PE"],
            ["SOUTH BAPTISTE", "AB"],
            ["SOUTH BAR", "NS"],
            ["SOUTH BAYMOUTH", "ON"],
            ["SOUTH BRANCH KENT CO", "NB"],
            ["SOUTH BRANCH KINGS CO", "NB"],
            ["SOUTH BRANCH", "NL"],
            ["SOUTH BROOK GB", "NL"],
            ["SOUTH BROOKFIELD", "NS"],
            ["SOUTH CANAAN", "NB"],
            ["SOUTH DILDO", "NL"],
            ["SOUTH EAST BIGHT", "NL"],
            ["SOUTH ESK", "NB"],
            ["SOUTH GILLIES", "ON"],
            ["SOUTH HAZELTON", "BC"],
            ["SOUTH HEAD", "NS"],
            ["SOUTH INDIAN LAKE", "MB"],
            ["SOUTH JUNCTION", "MB"],
            ["SOUTH LANCASTER", "ON"],
            ["SOUTH MAITLAND", "NS"],
            ["SOUTH MOUNTAIN", "ON"],
            ["SOUTH NELSON", "NB"],
            ["SOUTH OHIO", "NS"],
            ["SOUTH OROMOCTO LAKE", "NB"],
            ["SOUTH PORCUPINE", "ON"],
            ["SOUTH RIVER", "NL"],
            ["SOUTH RIVER", "ON"],
            ["SOUTH SLOCAN", "BC"],
            ["SOUTH TETAGOUCHE", "NB"],
            ["SOUTH WEST MARGAREE", "NS"],
            ["SOUTH WOODSLEE", "ON"],
            ["SOUTHAMPTON", "NB"],
            ["SOUTHAMPTON", "NS"],
            ["SOUTHAMPTON", "ON"],
            ["SOUTHBANK", "BC"],
            ["SOUTHEND", "SK"],
            ["SOUTHERN BAY", "NL"],
            ["SOUTHERN HARBOUR PB", "NL"],
            ["SOUTHEY", "SK"],
            ["SOUTHFIELD", "NB"],
            ["SOUTHPORT", "MB"],
            ["SOUTHSIDE BOULARDERIE", "NS"],
            ["SOUTHWOLD", "ON"],
            ["SOVEREIGN", "SK"],
            ["SPALDING", "SK"],
            ["SPANIARDS BAY", "NL"],
            ["SPANISH", "ON"],
            ["SPARTA", "ON"],
            ["SPARWOOD", "BC"],
            ["SPECTACLE LAKES", "NS"],
            ["SPEDDEN", "AB"],
            ["SPEERS", "SK"],
            ["SPEERVILLE", "NB"],
            ["SPENCERVILLE", "ON"],
            ["SPENCES BRIDGE", "BC"],
            ["SPERLING", "MB"],
            ["SPILLIMACHEEN", "BC"],
            ["SPIRIT RIVER", "AB"],
            ["SPIRITWOOD", "SK"],
            ["SPLIT LAKE", "MB"],
            ["SPRAGGE", "ON"],
            ["SPRAGUE", "MB"],
            ["SPRING BAY", "ON"],
            ["SPRING COULEE", "AB"],
            ["SPRING LAKE", "AB"],
            ["SPRING VALLEY", "SK"],
            ["SPRINGBROOK", "AB"],
            ["SPRINGBROOK", "ON"],
            ["SPRINGDALE", "NB"],
            ["SPRINGDALE", "NL"],
            ["SPRINGFIELD KINGS CO", "NB"],
            ["SPRINGFIELD YORK CO", "NB"],
            ["SPRINGFIELD", "MB"],
            ["SPRINGFIELD", "NS"],
            ["SPRINGFIELD", "ON"],
            ["SPRINGFORD", "ON"],
            ["SPRINGHILL", "NS"],
            ["SPRINGSIDE", "SK"],
            ["SPRINGSTEIN", "MB"],
            ["SPRINGWATER", "SK"],
            ["SPRUCE GROVE", "AB"],
            ["SPRUCE HOME", "SK"],
            ["SPRUCE LAKE", "SK"],
            ["SPRUCE VIEW", "AB"],
            ["SPRUCEDALE", "ON"],
            ["SPUTINOW", "AB"],
            ["SPY HILL", "SK"],
            ["SQUAMISH", "BC"],
            ["SQUATEC", "QC"],
            ["SQUAW CAP", "NB"],
            ["SQUIRREL COVE", "BC"],
            ["ST ADOLPHE", "MB"],
            ["ST AGATHA", "ON"],
            ["ST ALBANS", "NL"],
            ["ST ALBERT", "ON"],
            ["ST ALMO", "NB"],
            ["ST ALPHONSE", "MB"],
            ["ST AMBROISE", "MB"],
            ["ST ANDREWS CHANNEL", "NS"],
            ["ST ANDREWS WEST", "ON"],
            ["ST ANDREWS", "MB"],
            ["ST ANDREWS", "NB"],
            ["ST ANDREWS", "NL"],
            ["ST ANDREWS", "NS"],
            ["ST ANNS", "ON"],
            ["ST ANTHONY EAST", "NL"],
            ["ST BENEDICT", "SK"],
            ["ST BERNARDIN", "ON"],
            ["ST BERNARDS-JACQUES FONTAINE", "NL"],
            ["ST BRENDANS", "NL"],
            ["ST BRIDES", "AB"],
            ["ST BRIDES", "NL"],
            ["ST BRIEUX", "SK"],
            ["ST CATHARINES", "ON"],
            ["ST CHADS", "NL"],
            ["ST CHARLES", "ON"],
            ["ST CLAUDE", "MB"],
            ["ST CLEMENTS", "MB"],
            ["ST CLEMENTS", "ON"],
            ["ST COLUMBA", "NS"],
            ["ST CROIX", "NB"],
            ["ST DAVID RIDGE", "NB"],
            ["ST DAVIDS", "NL"],
            ["ST DAVIDS", "ON"],
            ["ST DENIS", "SK"],
            ["ST EUGENE", "ON"],
            ["ST EUSTACHE", "MB"],
            ["ST FINTANS", "NL"],
            ["ST FRANCOIS XAVIER", "MB"],
            ["ST GEORGE BRANT", "ON"],
            ["ST GEORGE", "NB"],
            ["ST GEORGES", "NL"],
            ["ST GERMAIN SOUTH", "MB"],
            ["ST GREGOR", "SK"],
            ["ST ISIDORE DE BELLEVUE", "SK"],
            ["ST ISIDORE", "AB"],
            ["ST ISIDORE", "ON"],
            ["ST JACOBS", "ON"],
            ["ST JEAN BAPTISTE", "MB"],
            ["ST JOACHIM", "ON"],
            ["ST JOSEPH", "MB"],
            ["ST JOSEPHS SAL", "NL"],
            ["ST JUDES", "NL"],
            ["ST JULIENS", "NL"],
            ["ST LAURENT", "MB"],
            ["ST LAWRENCE", "NL"],
            ["ST LAZARE", "MB"],
            ["ST LEON", "MB"],
            ["ST LEWIS", "NL"],
            ["ST LINA", "AB"],
            ["ST LOUIS", "SK"],
            ["ST LUNAIRE-GRIQUET", "NL"],
            ["ST MALO", "MB"],
            ["ST MARGARET VILLAGE", "NS"],
            ["ST MARGARETS", "NB"],
            ["ST MARKS", "MB"],
            ["ST MARTIN", "MB"],
            ["ST MARTINS NORTH", "NB"],
            ["ST MARTINS", "NB"],
            ["ST MARYS", "NL"],
            ["ST MARYS", "ON"],
            ["ST MICHAEL", "AB"],
            ["ST PAUL", "AB"],
            ["ST PAULS STATION", "ON"],
            ["ST PAULS", "NL"],
            ["ST PETERS", "NS"],
            ["ST PIERRE JOLYS", "MB"],
            ["ST SHOTTS", "NL"],
            ["ST STEPHEN", "NB"],
            ["ST THERESA POINT", "MB"],
            ["ST THOMAS", "NB"],
            ["ST THOMAS", "ON"],
            ["ST VICTOR", "SK"],
            ["ST VINCENT", "AB"],
            ["ST VINCENTS", "NL"],
            ["ST WALBURG", "SK"],
            ["ST WILLIAMS", "ON"],
            ["ST-ANTOINE NORD", "NB"],
            ["ST-ATHANASE", "QC"],
            ["ST-BARNABE-NORD", "QC"],
            ["ST-FRANCOIS-DE-LA-RIVIERE-DU-S", "QC"],
            ["ST-FRANCOIS-XAVIER-DE-BROMPTON", "QC"],
            ["ST-GABRIEL-DE-KAMOURASKA", "QC"],
            ["ST-HILAIRE", "NB"],
            ["ST-JEAN-BAPTISTE", "NB"],
            ["ST-JOACHIM-DE-MONTMORENCY", "QC"],
            ["ST-JOSEPH-DE-LA-POINTE-DE-LEVY", "QC"],
            ["ST-JOSEPH-DE-MADAWASKA", "NB"],
            ["ST-JOSEPH-DU-MOINE", "NS"],
            ["ST-LOUIS", "PE"],
            ["ST-MARCEL-DE-L'ISLET", "QC"],
            ["ST-NAZAIRE-DU-LAC-ST-JEAN", "QC"],
            ["ST-OCTAVE", "QC"],
            ["ST-ONESIME", "QC"],
            ["ST-PETERS BAY", "PE"],
            ["ST-PIERRE-DE-LA-RIVIERE-DU-SUD", "QC"],
            ["ST-VALERIEN", "QC"],
            ["ST. ALBERT", "AB"],
            ["ST. ANTHONY", "NL"],
            ["ST. GEORGES", "MB"],
            ["ST. JOHN'S", "NL"],
            ["STAFFA", "ON"],
            ["STAG HARBOUR", "NL"],
            ["STALWART", "SK"],
            ["STANBRIDGE EAST", "QC"],
            ["STANBRIDGE STATION", "QC"],
            ["STAND OFF", "AB"],
            ["STANDARD", "AB"],
            ["STANDON", "QC"],
            ["STANLEY MISSION", "SK"],
            ["STANLEY", "NB"],
            ["STANSTEAD", "QC"],
            ["STAPLES SETTLEMENT", "NB"],
            ["STAPLES", "ON"],
            ["STAR CITY", "SK"],
            ["STAR", "AB"],
            ["STARBUCK", "MB"],
            ["STAUFFER", "AB"],
            ["STAVELY", "AB"],
            ["STAYNER", "ON"],
            ["STE AGATHE", "MB"],
            ["STE ANNE DE PRESCOTT", "ON"],
            ["STE ANNE", "MB"],
            ["STE CROIX", "NS"],
            ["STE ROSE DU LAC", "MB"],
            ["STE-ANNE-DU-RUISSEAU", "NS"],
            ["STE-CATHERINE-DE-LA-J-CARTIER", "QC"],
            ["STE-IRENE-DE-MATAPEDIA", "QC"],
            ["STE-JEANNE-D'ARC-DE-MATANE", "QC"],
            ["STE-MARGUERITE-DE-DORCHESTER", "QC"],
            ["STE-MARGUERITE-DU-LAC-MASSON", "QC"],
            ["STEAD", "MB"],
            ["STEELMAN", "SK"],
            ["STEEP ROCK", "MB"],
            ["STEEVES MOUNTAIN", "NB"],
            ["STEEVES SETTLEMENT", "NB"],
            ["STEINBACH", "MB"],
            ["STELLA", "ON"],
            ["STELLARTON", "NS"],
            ["STENEN", "SK"],
            ["STEPHENFIELD", "MB"],
            ["STEPHENVILLE CROSSING", "NL"],
            ["STEPHENVILLE", "NL"],
            ["STETTLER", "AB"],
            ["STEVENSON ISLAND", "MB"],
            ["STEVENSVILLE", "ON"],
            ["STEWART VALLEY", "SK"],
            ["STEWART", "BC"],
            ["STEWIACKE", "NS"],
            ["STICKNEY", "NB"],
            ["STILESVILLE", "NB"],
            ["STILLWATER LAKE", "NS"],
            ["STIRLING", "AB"],
            ["STIRLING", "NS"],
            ["STIRLING", "ON"],
            ["STITTSVILLE", "ON"],
            ["STOCKHOLM", "SK"],
            ["STOCKTON", "MB"],
            ["STOKE", "QC"],
            ["STOKES BAY", "ON"],
            ["STONECLIFFE", "ON"],
            ["STONEHAM-ET-TEWKESBURY", "QC"],
            ["STONEHAVEN", "NB"],
            ["STONEVILLE", "NL"],
            ["STONEWALL", "MB"],
            ["STONEY CREEK", "NB"],
            ["STONEY CREEK", "ON"],
            ["STONEY ISLAND", "NS"],
            ["STONY BEACH", "SK"],
            ["STONY MOUNTAIN", "MB"],
            ["STONY PLAIN", "AB"],
            ["STONY RAPIDS", "SK"],
            ["STOREYTOWN", "NB"],
            ["STORNOWAY", "QC"],
            ["STORNOWAY", "SK"],
            ["STORTHOAKS", "SK"],
            ["STOUFFVILLE", "ON"],
            ["STOUGHTON", "SK"],
            ["STRAFFORDVILLE", "ON"],
            ["STRANRAER", "SK"],
            ["STRASBOURG", "SK"],
            ["STRATFORD", "ON"],
            ["STRATFORD", "PE"],
            ["STRATFORD", "QC"],
            ["STRATHADAM", "NB"],
            ["STRATHCLAIR", "MB"],
            ["STRATHMORE", "AB"],
            ["STRATHROY", "ON"],
            ["STRATTON", "ON"],
            ["STREAMSTOWN", "AB"],
            ["STRICKLAND", "ON"],
            ["STROME", "AB"],
            ["STRONGFIELD", "SK"],
            ["STUART ISLAND", "BC"],
            ["STUART TOWN", "NB"],
            ["STUARTBURN", "MB"],
            ["STUKELY-SUD", "QC"],
            ["STUMP LAKE", "SK"],
            ["STURGEON COUNTY", "AB"],
            ["STURGEON FALLS", "ON"],
            ["STURGEON LANDING", "SK"],
            ["STURGIS", "SK"],
            ["STYMIEST", "NB"],
            ["SUCCESS", "SK"],
            ["SUDBURY", "ON"],
            ["SUGAR CAMP", "NS"],
            ["SULTAN", "ON"],
            ["SUMMER BEAVER", "ON"],
            ["SUMMERBERRY", "SK"],
            ["SUMMERFIELD CARLETON CO", "NB"],
            ["SUMMERFIELD KINGS CO", "NB"],
            ["SUMMERFORD", "NL"],
            ["SUMMERLAND", "BC"],
            ["SUMMERSIDE", "PE"],
            ["SUMMERSTOWN", "ON"],
            ["SUMMERVILLE", "NB"],
            ["SUMMERVILLE", "NL"],
            ["SUMMERVILLE", "NS"],
            ["SUMMIT LAKE", "BC"],
            ["SUN PEAKS", "BC"],
            ["SUNDERLAND", "ON"],
            ["SUNDOWN", "MB"],
            ["SUNDRE", "AB"],
            ["SUNDRIDGE", "ON"],
            ["SUNNY CORNER", "NB"],
            ["SUNNYBRAE", "NS"],
            ["SUNNYBROOK", "AB"],
            ["SUNNYNOOK", "AB"],
            ["SUNNYSIDE BEACH", "NB"],
            ["SUNNYSIDE", "NL"],
            ["SUNSET BEACH", "AB"],
            ["SUNSET HOUSE", "AB"],
            ["SUNSET PRAIRIE", "BC"],
            ["SURGE NARROWS", "BC"],
            ["SURREY", "BC"],
            ["SUSSEX CORNER", "NB"],
            ["SUSSEX EAST", "NB"],
            ["SUSSEX SOUTH", "NB"],
            ["SUSSEX", "NB"],
            ["SUTTON WEST", "ON"],
            ["SUTTON", "QC"],
            ["SWALWELL", "AB"],
            ["SWAN CREEK", "NB"],
            ["SWAN HILLS", "AB"],
            ["SWAN LAKE", "MB"],
            ["SWAN RIVER", "MB"],
            ["SWANSEA POINT", "BC"],
            ["SWASTIKA", "ON"],
            ["SWEET BAY", "NL"],
            ["SWIFT CURRENT", "NL"],
            ["SWIFT CURRENT", "SK"],
            ["SYDENHAM", "ON"],
            ["SYDNEY FORKS", "NS"],
            ["SYDNEY MINES", "NS"],
            ["SYDNEY RIVER", "NS"],
            ["SYDNEY", "NS"],
            ["SYLVAN LAKE", "AB"],
            ["SYLVANIA", "SK"],
            ["SYPHER COVE", "NB"],
            ["TA TA CREEK", "BC"],
            ["TABER", "AB"],
            ["TABUSINTAC", "NB"],
            ["TADOULE LAKE", "MB"],
            ["TADOUSSAC", "QC"],
            ["TAGISH", "YT"],
            ["TAHSIS", "BC"],
            ["TAILLON", "QC"],
            ["TAKLA LANDING", "BC"],
            ["TALBOTVILLE ROYAL", "ON"],
            ["TALOYOAK", "NU"],
            ["TAMWORTH", "ON"],
            ["TANCOOK ISLAND", "NS"],
            ["TANGENT", "AB"],
            ["TANGIER", "NS"],
            ["TANTALLON", "NS"],
            ["TANTALLON", "SK"],
            ["TAPPEN", "BC"],
            ["TARA", "ON"],
            ["TARGETTVILLE", "NB"],
            ["TARZWELL", "ON"],
            ["TASCHEREAU", "QC"],
            ["TASIUJAQ", "QC"],
            ["TATAMAGOUCHE", "NS"],
            ["TATLA LAKE", "BC"],
            ["TATLAYOKO LAKE", "BC"],
            ["TAVISTOCK", "ON"],
            ["TAWATINAW", "AB"],
            ["TAXIS RIVER", "NB"],
            ["TAY CREEK", "NB"],
            ["TAY FALLS", "NB"],
            ["TAYLOR VILLAGE", "NB"],
            ["TAYLOR", "BC"],
            ["TAYMOUTH", "NB"],
            ["TECUMSEH", "ON"],
            ["TEEDS MILLS", "NB"],
            ["TEES", "AB"],
            ["TEESWATER", "ON"],
            ["TEETERVILLE", "ON"],
            ["TEHKUMMAH", "ON"],
            ["TELEGRAPH COVE", "BC"],
            ["TELEGRAPH CREEK", "BC"],
            ["TELKWA", "BC"],
            ["TEMAGAMI", "ON"],
            ["TEMISCAMING", "QC"],
            ["TEMPERANCE VALE", "NB"],
            ["TEMPLE", "NB"],
            ["TEMPLEMAN", "NL"],
            ["TERENCE BAY", "NS"],
            ["TERRA COTTA", "ON"],
            ["TERRACE BAY", "ON"],
            ["TERRACE", "BC"],
            ["TERRASSE-VAUDREUIL", "QC"],
            ["TERREBONNE", "QC"],
            ["TERRENCEVILLE", "NL"],
            ["TESLIN", "YT"],
            ["TESSIER", "SK"],
            ["TETAGOUCHE FALLS", "NB"],
            ["TETE-A-LA-BALEINE", "QC"],
            ["TEULON", "MB"],
            ["THAMESFORD", "ON"],
            ["THAMESVILLE", "ON"],
            ["THE GLADES", "NB"],
            ["THE PAS", "MB"],
            ["THEDFORD", "ON"],
            ["THEODORE", "SK"],
            ["THESSALON", "ON"],
            ["THETFORD MINES", "QC"],
            ["THETIS ISLAND", "BC"],
            ["THICKET PORTAGE", "MB"],
            ["THOMASBURG", "ON"],
            ["THOMASVILLE", "NS"],
            ["THOMPSON", "MB"],
            ["THORBURN", "NS"],
            ["THORHILD", "AB"],
            ["THORNBURY", "ON"],
            ["THORNDALE", "ON"],
            ["THORNE", "ON"],
            ["THORNHILL", "BC"],
            ["THORNHILL", "MB"],
            ["THORNHILL", "ON"],
            ["THORNLOE", "ON"],
            ["THORNTON", "ON"],
            ["THOROLD", "ON"],
            ["THORSBY", "AB"],
            ["THREE BROOKS", "NB"],
            ["THREE HILLS", "AB"],
            ["THREE TREE CREEK", "NB"],
            ["THUNDER BAY", "ON"],
            ["THURSO", "QC"],
            ["TICHBORNE", "ON"],
            ["TICKLE COVE", "NL"],
            ["TIDE HEAD", "NB"],
            ["TIGER LILY", "AB"],
            ["TIGNISH", "PE"],
            ["TILBURY", "ON"],
            ["TILDEN LAKE", "ON"],
            ["TILLEY ROAD", "NB"],
            ["TILLEY", "AB"],
            ["TILLEY", "NB"],
            ["TILLSONBURG", "ON"],
            ["TILSTON", "MB"],
            ["TILTING", "NL"],
            ["TIMBER BAY", "SK"],
            ["TIMBER RIVER", "NB"],
            ["TIMBERLEA", "NS"],
            ["TIMMINS", "ON"],
            ["TINGWICK", "QC"],
            ["TINKER", "NB"],
            ["TISDALE", "SK"],
            ["TITUSVILLE", "NB"],
            ["TIVERTON", "NS"],
            ["TIVERTON", "ON"],
            ["TIZZARDS HARBOUR", "NL"],
            ["TLELL", "BC"],
            ["TOAD RIVER", "BC"],
            ["TOBERMORY", "ON"],
            ["TOBIQUE FIRST NATION", "NB"],
            ["TOBIQUE NARROWS", "NB"],
            ["TOFIELD", "AB"],
            ["TOFINO", "BC"],
            ["TOGO", "SK"],
            ["TOLEDO", "ON"],
            ["TOLSTOI", "MB"],
            ["TOMAHAWK", "AB"],
            ["TOMPKINS", "SK"],
            ["TOMSLAKE", "BC"],
            ["TOPLEY", "BC"],
            ["TORBAY", "NL"],
            ["TORONTO", "ON"],
            ["TORQUAY", "SK"],
            ["TORRANCE", "ON"],
            ["TORRINGTON", "AB"],
            ["TORS COVE", "NL"],
            ["TORY HILL", "ON"],
            ["TOTTENHAM", "ON"],
            ["TOUROND", "MB"],
            ["TOURVILLE", "QC"],
            ["TOUTES AIDES", "MB"],
            ["TOWER HILL", "NB"],
            ["TOWER ROAD", "NS"],
            ["TOWNSEND", "ON"],
            ["TRACADIE BEACH", "NB"],
            ["TRACADIE-SHEILA", "NB"],
            ["TRACEY MILLS", "NB"],
            ["TRACY", "NB"],
            ["TRACYVILLE", "NB"],
            ["TRAIL", "BC"],
            ["TRAMPING LAKE", "SK"],
            ["TRAVERSE BAY", "MB"],
            ["TRAYTOWN", "NL"],
            ["TRECESSON", "QC"],
            ["TREHERNE", "MB"],
            ["TREMBLAY", "NB"],
            ["TRENT RIVER", "ON"],
            ["TRENTON", "NS"],
            ["TRENTON", "ON"],
            ["TREPASSEY", "NL"],
            ["TRES-SAINT-REDEMPTEUR", "QC"],
            ["TRIBUNE", "SK"],
            ["TRING-JONCTION", "QC"],
            ["TRINITY BB", "NL"],
            ["TRINITY TB", "NL"],
            ["TRITON", "NL"],
            ["TROCHU", "AB"],
            ["TROIS-PISTOLES", "QC"],
            ["TROIS-RIVES", "QC"],
            ["TROIS-RIVIERES", "QC"],
            ["TROIS-RUISSEAUX", "NB"],
            ["TROSSACHS", "SK"],
            ["TROUT BROOK", "NB"],
            ["TROUT CREEK", "ON"],
            ["TROUT LAKE", "AB"],
            ["TROUT LAKE", "NT"],
            ["TROUT RIVER", "NL"],
            ["TROY", "NS"],
            ["TROY", "ON"],
            ["TRUAX", "SK"],
            ["TRUDEL", "NB"],
            ["TRURO HEIGHTS", "NS"],
            ["TRURO", "NS"],
            ["TSAWWASSEN", "BC"],
            ["TSAY KEH DENE", "BC"],
            ["TSIIGEHTCHIC", "NT"],
            ["TSUU T'INA", "AB"],
            ["TUFFNELL", "SK"],
            ["TUGASKE", "SK"],
            ["TUKTOYAKTUK", "NT"],
            ["TULAMEEN", "BC"],
            ["TULITA", "NT"],
            ["TULLIBY LAKE", "AB"],
            ["TUMBLER RIDGE", "BC"],
            ["TUNIS", "ON"],
            ["TUPPERVILLE", "ON"],
            ["TURIN", "AB"],
            ["TURKEY POINT", "ON"],
            ["TURKS COVE", "NL"],
            ["TURNER VALLEY", "AB"],
            ["TURNOR LAKE", "SK"],
            ["TURTLE CREEK", "NB"],
            ["TURTLEFORD", "SK"],
            ["TUSKET", "NS"],
            ["TUXFORD", "SK"],
            ["TWAY", "SK"],
            ["TWEED", "ON"],
            ["TWILLINGATE", "NL"],
            ["TWIN BUTTE", "AB"],
            ["TWO BROOKS", "NB"],
            ["TWO HILLS", "AB"],
            ["TYNDALL", "MB"],
            ["TYNE VALLEY", "PE"],
            ["TYNEMOUTH CREEK", "NB"],
            ["TYNER", "SK"],
            ["TYVAN", "SK"],
            ["UCLUELET", "BC"],
            ["UDORA", "ON"],
            ["ULUKHAKTOK", "NT"],
            ["ULVERTON", "QC"],
            ["UMIUJAQ", "QC"],
            ["UNION BAY", "BC"],
            ["UNION CORNER", "NB"],
            ["UNION", "ON"],
            ["UNIONVILLE", "ON"],
            ["UNITY", "SK"],
            ["UPHAM", "NB"],
            ["UPPER BLACKVILLE", "NB"],
            ["UPPER BRANCH", "NS"],
            ["UPPER BRIGHTON", "NB"],
            ["UPPER BROOKSIDE", "NS"],
            ["UPPER CANADA VILLAGE", "ON"],
            ["UPPER CAPE", "NB"],
            ["UPPER CAVERHILL", "NB"],
            ["UPPER CHELSEA", "NS"],
            ["UPPER COVERDALE", "NB"],
            ["UPPER DERBY", "NB"],
            ["UPPER DORCHESTER", "NB"],
            ["UPPER FRASER", "BC"],
            ["UPPER GAGETOWN", "NB"],
            ["UPPER GOLDEN GROVE", "NB"],
            ["UPPER GRAND MIRA", "NS"],
            ["UPPER HAINESVILLE", "NB"],
            ["UPPER HAMMONDS PLAINS", "NS"],
            ["UPPER HAMPSTEAD", "NB"],
            ["UPPER ISLAND COVE", "NL"],
            ["UPPER KENNETCOOK", "NS"],
            ["UPPER KENT", "NB"],
            ["UPPER KESWICK", "NB"],
            ["UPPER KINGSCLEAR", "NB"],
            ["UPPER KINTORE", "NB"],
            ["UPPER KNOXFORD", "NB"],
            ["UPPER LAHAVE", "NS"],
            ["UPPER LEITCHES CREEK", "NS"],
            ["UPPER LETANG", "NB"],
            ["UPPER LOCH LOMOND", "NB"],
            ["UPPER MILLS", "NB"],
            ["UPPER MUSQUODOBOIT", "NS"],
            ["UPPER NINE MILE RIVER", "NS"],
            ["UPPER NORTH RIVER", "NS"],
            ["UPPER NORTH SYDNEY", "NS"],
            ["UPPER NORTHFIELD", "NS"],
            ["UPPER ONSLOW", "NS"],
            ["UPPER PORT LA TOUR", "NS"],
            ["UPPER QUEENSBURY", "NB"],
            ["UPPER RAWDON", "NS"],
            ["UPPER REXTON", "NB"],
            ["UPPER ROCKPORT", "NB"],
            ["UPPER SACKVILLE", "NB"],
            ["UPPER SACKVILLE", "NS"],
            ["UPPER SALMON CREEK", "NB"],
            ["UPPER STEWIACKE", "NS"],
            ["UPPER TANTALLON", "NS"],
            ["UPPER TRACY", "NB"],
            ["UPPER WASHABUCK", "NS"],
            ["UPPER WOODSTOCK", "NB"],
            ["UPPERTON", "NB"],
            ["UPSALA", "ON"],
            ["UPSALQUITCH", "NB"],
            ["UPTON", "QC"],
            ["URANIUM CITY", "SK"],
            ["URBANIA", "NS"],
            ["UTOPIA", "NB"],
            ["UTOPIA", "ON"],
            ["UTTERSON", "ON"],
            ["UXBRIDGE", "ON"],
            ["VAL CARON", "ON"],
            ["VAL COMEAU", "NB"],
            ["VAL COTE", "ON"],
            ["VAL GAGNE", "ON"],
            ["VAL MARIE", "SK"],
            ["VAL RITA", "ON"],
            ["VAL THERESE", "ON"],
            ["VAL-ALAIN", "QC"],
            ["VAL-BRILLANT", "QC"],
            ["VAL-D'AMOUR", "NB"],
            ["VAL-D'ESPOIR", "QC"],
            ["VAL-D'OR", "QC"],
            ["VAL-DAVID", "QC"],
            ["VAL-DES-BOIS", "QC"],
            ["VAL-DES-LACS", "QC"],
            ["VAL-DES-MONTS", "QC"],
            ["VAL-DOUCET", "NB"],
            ["VAL-JOLI", "QC"],
            ["VAL-MORIN", "QC"],
            ["VAL-PARADIS", "QC"],
            ["VAL-RACINE", "QC"],
            ["VAL-SAINT-GILLES", "QC"],
            ["VALCOURT", "QC"],
            ["VALEMOUNT", "BC"],
            ["VALHALLA CENTRE", "AB"],
            ["VALLEE-JONCTION", "QC"],
            ["VALLEY POND", "NL"],
            ["VALLEY RIVER", "MB"],
            ["VALLEY ROAD", "NB"],
            ["VALLEY", "NS"],
            ["VALLEYVIEW", "AB"],
            ["VAN ANDA", "BC"],
            ["VANCOUVER", "BC"],
            ["VANDERHOOF", "BC"],
            ["VANESSA", "ON"],
            ["VANGUARD", "SK"],
            ["VANIER", "ON"],
            ["VANKLEEK HILL", "ON"],
            ["VANSCOY", "SK"],
            ["VARENNES", "QC"],
            ["VARNA", "ON"],
            ["VARS", "ON"],
            ["VASSAR", "MB"],
            ["VAUDREUIL-DORION", "QC"],
            ["VAUDREUIL-SUR-LE-LAC", "QC"],
            ["VAUGHAN", "ON"],
            ["VAUXHALL", "AB"],
            ["VAVENBY", "BC"],
            ["VAWN", "SK"],
            ["VEGA", "AB"],
            ["VEGREVILLE", "AB"],
            ["VENISE-EN-QUEBEC", "QC"],
            ["VENOSTA", "QC"],
            ["VERCHERES", "QC"],
            ["VERDUN", "QC"],
            ["VEREGIN", "SK"],
            ["VERMETTE", "MB"],
            ["VERMILION BAY", "ON"],
            ["VERMILION", "AB"],
            ["VERNER", "ON"],
            ["VERNON BRIDGE", "PE"],
            ["VERNON", "BC"],
            ["VERNON", "ON"],
            ["VERONA", "ON"],
            ["VERRET", "NB"],
            ["VERWOOD", "SK"],
            ["VESPRA", "NB"],
            ["VETERAN", "AB"],
            ["VIBANK", "SK"],
            ["VICEROY", "SK"],
            ["VICTOIRE", "SK"],
            ["VICTORIA BEACH", "MB"],
            ["VICTORIA CB", "NL"],
            ["VICTORIA CORNER", "NB"],
            ["VICTORIA COVE", "NL"],
            ["VICTORIA HARBOUR", "ON"],
            ["VICTORIA MINES", "NS"],
            ["VICTORIA", "BC"],
            ["VICTORIA", "PE"],
            ["VICTORIAVILLE", "QC"],
            ["VIDORA", "SK"],
            ["VIENNA", "ON"],
            ["VIKING", "AB"],
            ["VILLAGE BLANCHARD", "NB"],
            ["VILLAGE SAINT-PIERRE", "QC"],
            ["VILLAGE-DES-POIRIER", "NB"],
            ["VILLAGE-SAINT-LAURENT", "NB"],
            ["VILLE-MARIE", "QC"],
            ["VILLEBOIS", "QC"],
            ["VILLEROY", "QC"],
            ["VILNA", "AB"],
            ["VIMONT", "QC"],
            ["VIMY", "AB"],
            ["VINEGAR HILL", "NB"],
            ["VINELAND STATION", "ON"],
            ["VINELAND", "ON"],
            ["VIRDEN", "MB"],
            ["VIRGIL", "ON"],
            ["VIRGINIATOWN", "ON"],
            ["VISCOUNT", "SK"],
            ["VISTA", "MB"],
            ["VITA", "MB"],
            ["VITTORIA", "ON"],
            ["VOGAR", "MB"],
            ["VONDA", "SK"],
            ["VULCAN", "AB"],
            ["WAASIS", "NB"],
            ["WABAMUN", "AB"],
            ["WABASCA", "AB"],
            ["WABIGOON", "ON"],
            ["WABOWDEN", "MB"],
            ["WABUSH", "NL"],
            ["WADENA", "SK"],
            ["WAGMATCOOK", "NS"],
            ["WAHNAPITAE", "ON"],
            ["WAINFLEET", "ON"],
            ["WAINWRIGHT", "AB"],
            ["WAKAW", "SK"],
            ["WAKEFIELD", "NB"],
            ["WAKEFIELD", "QC"],
            ["WALDECK", "SK"],
            ["WALDERSEE", "MB"],
            ["WALDHEIM", "SK"],
            ["WALDHOF", "ON"],
            ["WALDRON", "SK"],
            ["WALFORD STATION", "ON"],
            ["WALHACHIN", "BC"],
            ["WALKER SETTLEMENT", "NB"],
            ["WALKERTON", "ON"],
            ["WALLACE", "NS"],
            ["WALLACEBURG", "ON"],
            ["WALLACETOWN", "ON"],
            ["WALLENSTEIN", "ON"],
            ["WALSH", "AB"],
            ["WALSINGHAM", "ON"],
            ["WALTERS FALLS", "ON"],
            ["WALTHAM", "QC"],
            ["WALTON", "NS"],
            ["WALTON", "ON"],
            ["WANDERING RIVER", "AB"],
            ["WANHAM", "AB"],
            ["WANIPIGOW", "MB"],
            ["WANLESS", "MB"],
            ["WAPELLA", "SK"],
            ["WAPSKE", "NB"],
            ["WARBURG", "AB"],
            ["WARD SETTLEMENT", "NB"],
            ["WARDEN", "QC"],
            ["WARDLOW", "AB"],
            ["WARDNER", "BC"],
            ["WARDS CREEK", "NB"],
            ["WARDSVILLE", "ON"],
            ["WARE", "BC"],
            ["WAREHAM-CENTREVILLE", "NL"],
            ["WARKWORTH", "ON"],
            ["WARMAN", "SK"],
            ["WARMINSTER", "ON"],
            ["WARNER", "AB"],
            ["WARREN", "MB"],
            ["WARREN", "ON"],
            ["WARSAW", "ON"],
            ["WARSPITE", "AB"],
            ["WARWICK SETTLEMENT", "NB"],
            ["WARWICK", "QC"],
            ["WASA", "BC"],
            ["WASAGA BEACH", "ON"],
            ["WASAGAMACK", "MB"],
            ["WASAGAMING", "MB"],
            ["WASECA", "SK"],
            ["WASHABUCK CENTRE", "NS"],
            ["WASHAGO", "ON"],
            ["WASKADA", "MB"],
            ["WASKAGANISH", "QC"],
            ["WASKATENAU", "AB"],
            ["WASKESIU LAKE", "SK"],
            ["WASWANIPI", "QC"],
            ["WATER VALLEY", "AB"],
            ["WATERBOROUGH", "NB"],
            ["WATERDOWN", "ON"],
            ["WATERFORD", "NB"],
            ["WATERFORD", "ON"],
            ["WATERHEN LAKE", "SK"],
            ["WATERHEN", "MB"],
            ["WATERLOO", "NS"],
            ["WATERLOO", "ON"],
            ["WATERLOO", "QC"],
            ["WATERSIDE", "NB"],
            ["WATERTON PARK", "AB"],
            ["WATERVILLE CARLETON CO", "NB"],
            ["WATERVILLE", "NS"],
            ["WATERVILLE", "QC"],
            ["WATERVILLE-SUNBURY", "NB"],
            ["WATFORD", "ON"],
            ["WATINO", "AB"],
            ["WATROUS", "SK"],
            ["WATSON LAKE", "YT"],
            ["WATSON", "SK"],
            ["WAUBAUSHENE", "ON"],
            ["WAUCHOPE", "SK"],
            ["WAVERLEY", "NS"],
            ["WAWA", "ON"],
            ["WAWANESA", "MB"],
            ["WAWEIG", "NB"],
            ["WAWOTA", "SK"],
            ["WAYERTON", "NB"],
            ["WAYWAYSEECAPPO", "MB"],
            ["WEAGAMOW LAKE", "ON"],
            ["WEAVER SIDING", "NB"],
            ["WEAVER", "NB"],
            ["WEBB", "SK"],
            ["WEBBWOOD", "ON"],
            ["WEBEQUIE", "ON"],
            ["WEDGEPORT", "NS"],
            ["WEEDON", "QC"],
            ["WEEKES", "SK"],
            ["WEIRDALE", "SK"],
            ["WEKWETI", "NT"],
            ["WELDON", "NB"],
            ["WELDON", "SK"],
            ["WELLAND", "ON"],
            ["WELLANDPORT", "ON"],
            ["WELLESLEY", "ON"],
            ["WELLING", "AB"],
            ["WELLINGTON STATION", "PE"],
            ["WELLINGTON", "NS"],
            ["WELLINGTON", "ON"],
            ["WELLS", "BC"],
            ["WELLWOOD", "MB"],
            ["WELSFORD", "NB"],
            ["WELSHPOOL", "NB"],
            ["WELWYN", "SK"],
            ["WEMBLEY", "AB"],
            ["WEMINDJI", "QC"],
            ["WEMOTACI", "QC"],
            ["WENDAKE", "QC"],
            ["WENDOVER", "ON"],
            ["WENTWORTH", "NS"],
            ["WENTWORTH", "QC"],
            ["WENTWORTH-NORD", "QC"],
            ["WENTZELLS LAKE", "NS"],
            ["WESLEYVILLE", "NL"],
            ["WEST ARICHAT", "NS"],
            ["WEST BAPTISTE", "AB"],
            ["WEST BAY CENTRE", "NL"],
            ["WEST BAY ROAD", "NS"],
            ["WEST BAY", "NS"],
            ["WEST BEND", "SK"],
            ["WEST BRANCH", "NB"],
            ["WEST BROME", "QC"],
            ["WEST CLIFFORD", "NS"],
            ["WEST DOVER", "NS"],
            ["WEST FLORENCEVILLE", "NB"],
            ["WEST GUILFORD", "ON"],
            ["WEST INDIAN ROAD", "NS"],
            ["WEST KELOWNA", "BC"],
            ["WEST LORNE", "ON"],
            ["WEST MONTROSE", "ON"],
            ["WEST NORTHFIELD", "NS"],
            ["WEST PENNANT", "NS"],
            ["WEST PORTERS LAKE", "NS"],
            ["WEST PUBNICO", "NS"],
            ["WEST QUACO", "NB"],
            ["WEST RIVER STATION", "NS"],
            ["WEST RIVER", "NB"],
            ["WEST ST ANDREWS", "NS"],
            ["WEST ST MODESTE", "NL"],
            ["WEST ST PAUL", "MB"],
            ["WEST VANCOUVER", "BC"],
            ["WESTBANK", "BC"],
            ["WESTBOURNE", "MB"],
            ["WESTBRIDGE", "BC"],
            ["WESTBROOK", "ON"],
            ["WESTBURY", "QC"],
            ["WESTCHESTER STATION", "NS"],
            ["WESTCOCK", "NB"],
            ["WESTERN BAY", "NL"],
            ["WESTERN SHORE", "NS"],
            ["WESTEROSE", "AB"],
            ["WESTHOLME", "BC"],
            ["WESTLOCK", "AB"],
            ["WESTMEATH", "ON"],
            ["WESTMOUNT", "NS"],
            ["WESTMOUNT", "QC"],
            ["WESTON", "NB"],
            ["WESTPHAL", "NS"],
            ["WESTPORT", "NL"],
            ["WESTPORT", "NS"],
            ["WESTPORT", "ON"],
            ["WESTVILLE", "NS"],
            ["WESTWOLD", "BC"],
            ["WESTWOOD", "ON"],
            ["WETASKIWIN", "AB"],
            ["WEYAKWIN", "SK"],
            ["WEYBURN", "SK"],
            ["WEYMOUTH", "NS"],
            ["WHALE COVE", "NU"],
            ["WHALETOWN", "BC"],
            ["WHATI", "NT"],
            ["WHEATLEY", "ON"],
            ["WHEATON SETTLEMENT", "NB"],
            ["WHELAN", "SK"],
            ["WHISPERING HILLS", "AB"],
            ["WHISTLER", "BC"],
            ["WHITBOURNE", "NL"],
            ["WHITBY", "ON"],
            ["WHITE BEAR", "SK"],
            ["WHITE CITY", "SK"],
            ["WHITE FOX", "SK"],
            ["WHITE GULL", "AB"],
            ["WHITE HEAD ISLAND", "NB"],
            ["WHITE HEAD", "NB"],
            ["WHITE LAKE", "ON"],
            ["WHITE RAPIDS", "NB"],
            ["WHITE RIVER", "ON"],
            ["WHITE ROCK", "BC"],
            ["WHITECAP", "SK"],
            ["WHITECOURT", "AB"],
            ["WHITEDOG", "ON"],
            ["WHITEFISH FALLS", "ON"],
            ["WHITEFISH", "ON"],
            ["WHITEHORSE", "YT"],
            ["WHITELAW", "AB"],
            ["WHITEMOUTH", "MB"],
            ["WHITES BROOK", "NB"],
            ["WHITES COVE", "NB"],
            ["WHITES LAKE", "NS"],
            ["WHITES MOUNTAIN", "NB"],
            ["WHITESHELL", "MB"],
            ["WHITEVALE", "ON"],
            ["WHITEWAY", "NL"],
            ["WHITEWOOD", "SK"],
            ["WHITNEY", "NB"],
            ["WHITNEY", "ON"],
            ["WHYCOCOMAGH", "NS"],
            ["WHYNOTTS SETTLEMENT", "NS"],
            ["WIARTON", "ON"],
            ["WICKHAM", "NB"],
            ["WICKHAM", "QC"],
            ["WICKLOW", "NB"],
            ["WIDEWATER", "AB"],
            ["WIGGINS MILL", "NB"],
            ["WIKWEMIKONG", "ON"],
            ["WILBERFORCE", "ON"],
            ["WILCOX", "SK"],
            ["WILD COVE WB", "NL"],
            ["WILDWOOD", "AB"],
            ["WILEVILLE", "NS"],
            ["WILKESPORT", "ON"],
            ["WILKIE", "SK"],
            ["WILLIAMS HARBOUR", "NL"],
            ["WILLIAMS LAKE", "BC"],
            ["WILLIAMSBURG", "NB"],
            ["WILLIAMSBURG", "ON"],
            ["WILLIAMSFORD", "ON"],
            ["WILLIAMSTOWN CARLETON CO", "NB"],
            ["WILLIAMSTOWN", "NB"],
            ["WILLIAMSTOWN", "ON"],
            ["WILLIAMSWOOD", "NS"],
            ["WILLINGDON", "AB"],
            ["WILLOW BEACH", "ON"],
            ["WILLOW BUNCH", "SK"],
            ["WILLOW GROVE", "NB"],
            ["WILLOW RIVER", "BC"],
            ["WILLOWBROOK", "SK"],
            ["WILMOT STATION", "NS"],
            ["WILMOT", "NB"],
            ["WILMOT", "ON"],
            ["WILNO", "ON"],
            ["WILSONS BEACH", "NB"],
            ["WILSONVILLE", "ON"],
            ["WILTONDALE", "NL"],
            ["WIMBORNE", "AB"],
            ["WINCHESTER SPRINGS", "ON"],
            ["WINCHESTER", "ON"],
            ["WINDERMERE", "BC"],
            ["WINDERMERE", "ON"],
            ["WINDHAM CENTRE", "ON"],
            ["WINDSOR JUNCTION", "NS"],
            ["WINDSOR", "NB"],
            ["WINDSOR", "NS"],
            ["WINDSOR", "ON"],
            ["WINDSOR", "QC"],
            ["WINDTHORST", "SK"],
            ["WINFIELD", "AB"],
            ["WINFIELD", "BC"],
            ["WINGHAM", "ON"],
            ["WINGS POINT", "NL"],
            ["WINKLER", "MB"],
            ["WINLAW", "BC"],
            ["WINNIPEG BEACH", "MB"],
            ["WINNIPEG", "MB"],
            ["WINNIPEGOSIS", "MB"],
            ["WINSLOE", "PE"],
            ["WINTER HARBOUR", "BC"],
            ["WINTERLAND", "NL"],
            ["WINTERTON", "NL"],
            ["WIRRAL", "NB"],
            ["WISETON", "SK"],
            ["WISHART", "SK"],
            ["WITLESS BAY", "NL"],
            ["WITTENBURG", "NS"],
            ["WOBURN", "QC"],
            ["WOKING", "AB"],
            ["WOLFE ISLAND", "ON"],
            ["WOLFVILLE", "NS"],
            ["WOLINAK", "QC"],
            ["WOLLASTON LAKE", "SK"],
            ["WOLSELEY", "SK"],
            ["WONOWON", "BC"],
            ["WOOD MOUNTAIN", "SK"],
            ["WOOD POINT", "NB"],
            ["WOODBRIDGE", "ON"],
            ["WOODFORDS", "NL"],
            ["WOODHAM", "ON"],
            ["WOODLANDS", "MB"],
            ["WOODLANDS", "NB"],
            ["WOODLAWN", "ON"],
            ["WOODMANS POINT", "NB"],
            ["WOODMORE", "MB"],
            ["WOODRIDGE", "MB"],
            ["WOODROW", "SK"],
            ["WOODSIDE", "MB"],
            ["WOODSIDE", "NB"],
            ["WOODSTOCK FIRST NATION", "NB"],
            ["WOODSTOCK", "NB"],
            ["WOODSTOCK", "NL"],
            ["WOODSTOCK", "ON"],
            ["WOODVIEW", "ON"],
            ["WOODVILLE", "ON"],
            ["WOOLER", "ON"],
            ["WORSLEY", "AB"],
            ["WORTHINGTON", "ON"],
            ["WOSS", "BC"],
            ["WOSTOK", "AB"],
            ["WOTTON", "QC"],
            ["WRENTHAM", "AB"],
            ["WRIGLEY", "NT"],
            ["WROXETER", "ON"],
            ["WROXTON", "SK"],
            ["WUHRS BEACH", "NB"],
            ["WUNNUMIN LAKE", "ON"],
            ["WYEBRIDGE", "ON"],
            ["WYERS BROOK", "NB"],
            ["WYEVALE", "ON"],
            ["WYMARK", "SK"],
            ["WYNNDEL", "BC"],
            ["WYNYARD", "SK"],
            ["WYOMING", "ON"],
            ["WYSES CORNER", "NS"],
            ["YAHK", "BC"],
            ["YALE", "BC"],
            ["YAMACHICHE", "QC"],
            ["YAMASKA", "QC"],
            ["YAMASKA-EST", "QC"],
            ["YARBO", "SK"],
            ["YARKER", "ON"],
            ["YARMOUTH", "NS"],
            ["YELLOW CREEK", "SK"],
            ["YELLOW GRASS", "SK"],
            ["YELLOW QUILL", "SK"],
            ["YELLOWKNIFE", "NT"],
            ["YMIR", "BC"],
            ["YOHO", "NB"],
            ["YORK HARBOUR", "NL"],
            ["YORK LANDING", "MB"],
            ["YORK", "ON"],
            ["YORK", "PE"],
            ["YORK.", "ON"],
            ["YORKTON", "SK"],
            ["YOUBOU", "BC"],
            ["YOUNG", "SK"],
            ["YOUNGS COVE", "NB"],
            ["YOUNGS POINT", "ON"],
            ["YOUNGSTOWN", "AB"],
            ["ZAMA CITY", "AB"],
            ["ZEALAND", "NB"],
            ["ZEALANDIA", "SK"],
            ["ZEBALLOS", "BC"],
            ["ZEHNER", "SK"],
            ["ZENON PARK", "SK"],
            ["ZEPHYR", "ON"],
            ["ZHODA", "MB"],
            ["ZIONVILLE", "NB"],
            ["ZURICH", "ON"]
        ];
    }
    return CanadaLocation;
}());



/***/ }),

/***/ "./src/app/shared/fake-db/users.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/fake-db/users.ts ***!
  \*****************************************/
/*! exports provided: UserDB */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserDB", function() { return UserDB; });
var UserDB = /** @class */ (function () {
    function UserDB() {
        this.users = [
            {
                '_id': '5a7b73f76bed15c94d1e46d4',
                'index': 0,
                'guid': 'c01da2d1-07f8-4acc-a1e3-72dda7310af8',
                'isActive': false,
                'balance': 2838.08,
                'age': 30,
                'name': 'Stefanie Marsh',
                'gender': 'female',
                'company': 'ACIUM',
                'email': 'stefaniemarsh@acium.com',
                'phone': '+1 (857) 535-2066',
                'address': '163 Poplar Avenue, Cliffside, Virginia, 4592',
                'bd': '2015-02-08T04:28:44 -06:00'
            },
            {
                '_id': '5a7b73f7f79f4250b96a355a',
                'index': 1,
                'guid': '3f04aa40-62da-466d-ac14-2b8a5da3d1ce',
                'isActive': true,
                'balance': 3043.81,
                'age': 39,
                'name': 'Elena Bennett',
                'gender': 'female',
                'company': 'FIBRODYNE',
                'email': 'elenabennett@fibrodyne.com',
                'phone': '+1 (994) 570-2070',
                'address': '526 Grace Court, Cherokee, Oregon, 7017',
                'bd': '2017-11-15T09:04:57 -06:00'
            },
            {
                '_id': '5a7b73f78b64a02a67204d6e',
                'index': 2,
                'guid': 'e7d9d61e-b657-4fcf-b069-2eb9bfdc44fa',
                'isActive': true,
                'balance': 1796.92,
                'age': 23,
                'name': 'Joni Cabrera',
                'gender': 'female',
                'company': 'POWERNET',
                'email': 'jonicabrera@powernet.com',
                'phone': '+1 (848) 410-2368',
                'address': '554 Barlow Drive, Alamo, Michigan, 3686',
                'bd': '2017-10-15T12:55:51 -06:00'
            },
            {
                '_id': '5a7b73f7572e59b231149b94',
                'index': 3,
                'guid': '47673d82-ab31-48a1-8a16-2c6701573c67',
                'isActive': false,
                'balance': 2850.27,
                'age': 37,
                'name': 'Gallagher Shaw',
                'gender': 'male',
                'company': 'ZILLAR',
                'email': 'gallaghershaw@zillar.com',
                'phone': '+1 (896) 422-3786',
                'address': '111 Argyle Road, Graball, Idaho, 7272',
                'bd': '2017-11-19T03:38:30 -06:00'
            },
            {
                '_id': '5a7b73f70f9d074552e13090',
                'index': 4,
                'guid': 'bc9c7cd3-04e0-4095-a933-af28efaf3b3e',
                'isActive': false,
                'balance': 3743.48,
                'age': 26,
                'name': 'Blanchard Knapp',
                'gender': 'male',
                'company': 'ACRODANCE',
                'email': 'blanchardknapp@acrodance.com',
                'phone': '+1 (867) 542-2772',
                'address': '707 Malta Street, Yukon, Wyoming, 6861',
                'bd': '2014-05-28T01:33:58 -06:00'
            },
            {
                '_id': '5a7b73f78988bd6e92650473',
                'index': 5,
                'guid': '08cb947c-e49c-4736-9687-0fca0992ec38',
                'isActive': false,
                'balance': 3453.79,
                'age': 34,
                'name': 'Parker Rivas',
                'gender': 'male',
                'company': 'SLAMBDA',
                'email': 'parkerrivas@slambda.com',
                'phone': '+1 (997) 413-2418',
                'address': '543 Roosevelt Place, Tibbie, Minnesota, 6944',
                'bd': '2015-01-05T09:55:23 -06:00'
            },
            {
                '_id': '5a7b73f72488770f90649570',
                'index': 6,
                'guid': '771c85d5-7762-4bae-96fd-09892a9c4374',
                'isActive': false,
                'balance': 3334.73,
                'age': 20,
                'name': 'Alexandria Forbes',
                'gender': 'female',
                'company': 'EQUITOX',
                'email': 'alexandriaforbes@equitox.com',
                'phone': '+1 (869) 521-2533',
                'address': '663 Minna Street, Omar, Alabama, 5265',
                'bd': '2017-03-09T05:48:57 -06:00'
            },
            {
                '_id': '5a7b73f7c576e368b321a705',
                'index': 7,
                'guid': '2455a7ef-a537-46e1-a210-75e5e2187460',
                'isActive': false,
                'balance': 3488.64,
                'age': 37,
                'name': 'Lessie Wise',
                'gender': 'female',
                'company': 'AFFLUEX',
                'email': 'lessiewise@affluex.com',
                'phone': '+1 (820) 404-2967',
                'address': '752 Woodhull Street, Utting, Oklahoma, 2739',
                'bd': '2014-10-21T03:09:34 -06:00'
            },
            {
                '_id': '5a7b73f705f8a9c6e35c8ca2',
                'index': 8,
                'guid': 'a90d65a8-681d-462f-bf08-eceeef366375',
                'isActive': true,
                'balance': 3786.67,
                'age': 36,
                'name': 'Carrie Gates',
                'gender': 'female',
                'company': 'VIRVA',
                'email': 'carriegates@virva.com',
                'phone': '+1 (845) 463-3986',
                'address': '561 Boulevard Court, Rote, Louisiana, 8458',
                'bd': '2017-03-30T02:06:23 -06:00'
            },
            {
                '_id': '5a7b73f7a3e2be2dbb7b093e',
                'index': 9,
                'guid': 'fb3d0f97-91ae-4336-b0b4-19f4a00fe567',
                'isActive': false,
                'balance': 3335.5,
                'age': 33,
                'name': 'Dalton Spears',
                'gender': 'male',
                'company': 'MIRACLIS',
                'email': 'daltonspears@miraclis.com',
                'phone': '+1 (919) 541-3528',
                'address': '167 Lester Court, Glasgow, Arkansas, 6311',
                'bd': '2017-04-01T01:41:12 -06:00'
            },
            {
                '_id': '5a7b73f716de69a9217c1273',
                'index': 10,
                'guid': '129a92fd-848f-48eb-98a1-aebf6e92b079',
                'isActive': false,
                'balance': 3811.15,
                'age': 30,
                'name': 'Delia Merrill',
                'gender': 'female',
                'company': 'COMTEST',
                'email': 'deliamerrill@comtest.com',
                'phone': '+1 (879) 401-2304',
                'address': '761 Polhemus Place, Kidder, Puerto Rico, 5901',
                'bd': '2014-08-29T08:42:59 -06:00'
            },
            {
                '_id': '5a7b73f7ed19007bed2d29fb',
                'index': 11,
                'guid': 'd799b69a-192d-4ee3-9a69-9e8e5afc45b0',
                'isActive': false,
                'balance': 3935.82,
                'age': 28,
                'name': 'Vance Aguilar',
                'gender': 'male',
                'company': 'CYCLONICA',
                'email': 'vanceaguilar@cyclonica.com',
                'phone': '+1 (972) 549-2681',
                'address': '653 Billings Place, Gardners, Connecticut, 7805',
                'bd': '2015-02-21T03:06:14 -06:00'
            },
            {
                '_id': '5a7b73f78d0dc0858a70c44a',
                'index': 12,
                'guid': '8cbb37bb-7644-4993-b48b-df3a69deb339',
                'isActive': true,
                'balance': 3868.95,
                'age': 28,
                'name': 'Adams Harper',
                'gender': 'male',
                'company': 'NORSUP',
                'email': 'adamsharper@norsup.com',
                'phone': '+1 (824) 494-3395',
                'address': '571 Turner Place, Norris, Mississippi, 3829',
                'bd': '2014-01-30T02:05:53 -06:00'
            },
            {
                '_id': '5a7b73f7e929494a8568a885',
                'index': 13,
                'guid': '22ec32d7-0ba9-4366-b6d8-ca16389a2cd9',
                'isActive': false,
                'balance': 3954.41,
                'age': 34,
                'name': 'Bass Sexton',
                'gender': 'male',
                'company': 'CIRCUM',
                'email': 'basssexton@circum.com',
                'phone': '+1 (930) 476-3634',
                'address': '563 Victor Road, Richmond, Kansas, 7742',
                'bd': '2014-05-04T10:16:32 -06:00'
            },
            {
                '_id': '5a7b73f767e97ce3136444fd',
                'index': 14,
                'guid': '031d282f-0be9-49e1-a211-9aa59d449d91',
                'isActive': false,
                'balance': 3287.33,
                'age': 24,
                'name': 'Howard Velez',
                'gender': 'male',
                'company': 'ECOSYS',
                'email': 'howardvelez@ecosys.com',
                'phone': '+1 (920) 556-2885',
                'address': '378 Grimes Road, Websterville, Marshall Islands, 3506',
                'bd': '2015-12-19T08:17:58 -06:00'
            },
            {
                '_id': '5a7b73f7fba076653cc18925',
                'index': 15,
                'guid': 'd76ab6d6-d1db-4286-8516-ce6c9db3972a',
                'isActive': false,
                'balance': 3279.98,
                'age': 21,
                'name': 'Lola Morton',
                'gender': 'female',
                'company': 'PROVIDCO',
                'email': 'lolamorton@providco.com',
                'phone': '+1 (963) 458-2788',
                'address': '991 Ashland Place, Richville, New York, 3529',
                'bd': '2016-11-29T07:58:24 -06:00'
            },
            {
                '_id': '5a7b73f7c6d408bc853be87c',
                'index': 16,
                'guid': '30c2d1c7-770b-4adb-b6df-cc205d748323',
                'isActive': false,
                'balance': 3955.55,
                'age': 37,
                'name': 'Bishop Rutledge',
                'gender': 'male',
                'company': 'DAYCORE',
                'email': 'bishoprutledge@daycore.com',
                'phone': '+1 (886) 539-3156',
                'address': '870 Vanderveer Place, Bridgetown, California, 7593',
                'bd': '2014-11-10T04:47:00 -06:00'
            },
            {
                '_id': '5a7b73f7abe6c78719d2f494',
                'index': 17,
                'guid': '2d8e77a1-4a88-4642-b6a8-693de296661c',
                'isActive': true,
                'balance': 1832.83,
                'age': 23,
                'name': 'Lea Reese',
                'gender': 'female',
                'company': 'GLUID',
                'email': 'leareese@gluid.com',
                'phone': '+1 (866) 413-2199',
                'address': '811 Dunne Place, Vowinckel, Rhode Island, 8646',
                'bd': '2014-03-16T04:30:06 -06:00'
            },
            {
                '_id': '5a7b73f72d64af126b8080be',
                'index': 18,
                'guid': 'e1e8ee63-6d08-48fc-a077-2265cee34f23',
                'isActive': true,
                'balance': 2419.18,
                'age': 23,
                'name': 'Knox Moses',
                'gender': 'male',
                'company': 'BRAINCLIP',
                'email': 'knoxmoses@brainclip.com',
                'phone': '+1 (982) 519-2486',
                'address': '917 Turnbull Avenue, Shasta, Virgin Islands, 7016',
                'bd': '2015-11-09T10:11:15 -06:00'
            },
            {
                '_id': '5a7b73f789b4e9086d34b255',
                'index': 19,
                'guid': '13552b7d-928c-4b92-a2ae-5ccbee807594',
                'isActive': false,
                'balance': 1220.91,
                'age': 22,
                'name': 'Marsha Jacobs',
                'gender': 'female',
                'company': 'COMSTAR',
                'email': 'marshajacobs@comstar.com',
                'phone': '+1 (858) 511-2546',
                'address': '580 Hampton Avenue, Ilchester, New Hampshire, 2191',
                'bd': '2016-02-11T01:34:23 -06:00'
            },
            {
                '_id': '5a7b73f737eea8e94089b7b4',
                'index': 20,
                'guid': 'cf577c87-b40c-4c09-9fac-d04c9a824b86',
                'isActive': false,
                'balance': 2446.07,
                'age': 25,
                'name': 'Bell Emerson',
                'gender': 'male',
                'company': 'MULTIFLEX',
                'email': 'bellemerson@multiflex.com',
                'phone': '+1 (806) 496-2473',
                'address': '238 Oxford Walk, Monument, New Mexico, 1345',
                'bd': '2016-10-07T01:07:21 -06:00'
            },
            {
                '_id': '5a7b73f76bc821dc6ee56ee2',
                'index': 21,
                'guid': 'b6c685c2-a497-4261-9217-622723d5235f',
                'isActive': false,
                'balance': 3694.63,
                'age': 33,
                'name': 'Cecelia Graham',
                'gender': 'female',
                'company': 'ZOXY',
                'email': 'ceceliagraham@zoxy.com',
                'phone': '+1 (933) 429-3129',
                'address': '954 Lawton Street, Terlingua, New Jersey, 6723',
                'bd': '2017-12-01T04:36:13 -06:00'
            },
            {
                '_id': '5a7b73f794c27c4048290cbf',
                'index': 22,
                'guid': '7e887403-8ff5-41b4-9902-bb63ff714fee',
                'isActive': true,
                'balance': 2804.02,
                'age': 29,
                'name': 'Anthony Pennington',
                'gender': 'male',
                'company': 'NAMEGEN',
                'email': 'anthonypennington@namegen.com',
                'phone': '+1 (860) 458-3988',
                'address': '287 Auburn Place, Gardiner, Northern Mariana Islands, 7131',
                'bd': '2018-02-04T11:06:51 -06:00'
            },
            {
                '_id': '5a7b73f720a5781f7d19597a',
                'index': 23,
                'guid': '9e108687-e1ca-4385-bdd5-62ab006f8aa3',
                'isActive': true,
                'balance': 1984.1,
                'age': 36,
                'name': 'Mayo Justice',
                'gender': 'male',
                'company': 'SLOFAST',
                'email': 'mayojustice@slofast.com',
                'phone': '+1 (854) 428-2270',
                'address': '648 Melba Court, Dodge, Pennsylvania, 7596',
                'bd': '2016-12-29T07:28:10 -06:00'
            },
            {
                '_id': '5a7b73f7f0a4c5e6c9807fb2',
                'index': 24,
                'guid': '93b0b383-dd69-4453-be26-f13ae361ce67',
                'isActive': true,
                'balance': 1845.13,
                'age': 22,
                'name': 'Vaughn Salazar',
                'gender': 'male',
                'company': 'ZAGGLE',
                'email': 'vaughnsalazar@zaggle.com',
                'phone': '+1 (986) 415-3294',
                'address': '382 Dewitt Avenue, Goodville, Palau, 711',
                'bd': '2014-10-31T12:32:59 -06:00'
            },
            {
                '_id': '5a7b73f7e6c45298c709371c',
                'index': 25,
                'guid': '5a059bbb-3f6d-47bc-ba2b-c13eeaaa93b4',
                'isActive': false,
                'balance': 3684.79,
                'age': 31,
                'name': 'Calhoun Bradshaw',
                'gender': 'male',
                'company': 'OVERPLEX',
                'email': 'calhounbradshaw@overplex.com',
                'phone': '+1 (964) 594-2363',
                'address': '527 Seton Place, Wedgewood, Wisconsin, 8306',
                'bd': '2016-05-27T10:46:17 -06:00'
            },
            {
                '_id': '5a7b73f79468759d25ecdcf4',
                'index': 26,
                'guid': '68d7f78e-5001-480b-a67d-72b370a5c2de',
                'isActive': false,
                'balance': 1831.14,
                'age': 29,
                'name': 'Dianne Bauer',
                'gender': 'female',
                'company': 'XUMONK',
                'email': 'diannebauer@xumonk.com',
                'phone': '+1 (866) 510-2479',
                'address': '540 Moffat Street, Emison, South Carolina, 7329',
                'bd': '2014-09-02T04:57:23 -06:00'
            },
            {
                '_id': '5a7b73f7346b1bbab11524fa',
                'index': 27,
                'guid': '0729eef8-36c5-4aa2-8e31-f5e2ca19b94b',
                'isActive': false,
                'balance': 1719.77,
                'age': 22,
                'name': 'Hebert Bryan',
                'gender': 'male',
                'company': 'COMTRAIL',
                'email': 'hebertbryan@comtrail.com',
                'phone': '+1 (838) 579-3709',
                'address': '669 Hausman Street, Gerber, Kentucky, 7779',
                'bd': '2017-11-29T12:22:59 -06:00'
            },
            {
                '_id': '5a7b73f75116874002de08de',
                'index': 28,
                'guid': '63014b40-3f1e-40ff-b2f7-f55ef6a5a599',
                'isActive': true,
                'balance': 1973.27,
                'age': 20,
                'name': 'Cash Bean',
                'gender': 'male',
                'company': 'SUPREMIA',
                'email': 'cashbean@supremia.com',
                'phone': '+1 (846) 551-2291',
                'address': '152 Garnet Street, Boling, Nevada, 4867',
                'bd': '2014-01-06T10:18:37 -06:00'
            },
            {
                '_id': '5a7b73f739be4dc1f743993c',
                'index': 29,
                'guid': 'ae498760-b43b-4c9c-8575-820f419984f6',
                'isActive': true,
                'balance': 2118.14,
                'age': 36,
                'name': 'Candy Hopper',
                'gender': 'female',
                'company': 'ACCUFARM',
                'email': 'candyhopper@accufarm.com',
                'phone': '+1 (841) 425-2442',
                'address': '695 Nassau Avenue, Nutrioso, Maryland, 2026',
                'bd': '2016-01-03T02:15:56 -06:00'
            },
            {
                '_id': '5a7b73f70b86f2969d762be2',
                'index': 30,
                'guid': 'f19cb86e-ab4f-4d07-833a-4adb8a19d0af',
                'isActive': false,
                'balance': 3794.89,
                'age': 37,
                'name': 'Fisher Powell',
                'gender': 'male',
                'company': 'ENOMEN',
                'email': 'fisherpowell@enomen.com',
                'phone': '+1 (876) 562-2932',
                'address': '616 Tapscott Avenue, Crucible, Nebraska, 4900',
                'bd': '2018-01-31T05:15:13 -06:00'
            },
            {
                '_id': '5a7b73f7394648a68c2a6ae3',
                'index': 31,
                'guid': 'a88e5389-0b07-4d19-ac6c-718ce9e0de55',
                'isActive': false,
                'balance': 3343.45,
                'age': 38,
                'name': 'Rosemary Sloan',
                'gender': 'female',
                'company': 'PHORMULA',
                'email': 'rosemarysloan@phormula.com',
                'phone': '+1 (924) 517-3289',
                'address': '687 Navy Walk, Edmund, Delaware, 1419',
                'bd': '2018-01-23T11:32:25 -06:00'
            },
            {
                '_id': '5a7b73f77ad97f4e1c2fa65a',
                'index': 32,
                'guid': 'fb915568-2875-49b3-96d7-6b54b2b186a1',
                'isActive': true,
                'balance': 2680.62,
                'age': 30,
                'name': 'Elba Glover',
                'gender': 'female',
                'company': 'APPLICA',
                'email': 'elbaglover@applica.com',
                'phone': '+1 (857) 495-3565',
                'address': '279 Bridgewater Street, Edneyville, Utah, 9246',
                'bd': '2015-10-03T12:24:56 -06:00'
            },
            {
                '_id': '5a7b73f72598106a97fbf7d5',
                'index': 33,
                'guid': 'fac3cd4b-2d42-4b4f-9d6f-0bac689bd47b',
                'isActive': false,
                'balance': 3286.46,
                'age': 37,
                'name': 'Mildred Short',
                'gender': 'female',
                'company': 'NIXELT',
                'email': 'mildredshort@nixelt.com',
                'phone': '+1 (980) 530-3588',
                'address': '434 Elm Place, Coloma, West Virginia, 1990',
                'bd': '2016-03-22T10:13:26 -06:00'
            },
            {
                '_id': '5a7b73f7b88290b05f53faa1',
                'index': 34,
                'guid': 'b1c6a3a3-00bd-4bc6-87df-69eecd909ab5',
                'isActive': false,
                'balance': 1484.16,
                'age': 24,
                'name': 'Karin Schultz',
                'gender': 'female',
                'company': 'PLASMOS',
                'email': 'karinschultz@plasmos.com',
                'phone': '+1 (904) 544-2796',
                'address': '380 Rockaway Avenue, Faxon, American Samoa, 5776',
                'bd': '2016-03-27T09:30:36 -06:00'
            },
            {
                '_id': '5a7b73f7d2f7429d0caec5fe',
                'index': 35,
                'guid': '62c961ac-49b1-4a69-b4bf-13a396ec4fd9',
                'isActive': false,
                'balance': 3450.17,
                'age': 23,
                'name': 'Addie Rose',
                'gender': 'female',
                'company': 'XYQAG',
                'email': 'addierose@xyqag.com',
                'phone': '+1 (838) 549-3147',
                'address': '999 Coleridge Street, Golconda, Vermont, 9575',
                'bd': '2016-10-01T06:50:42 -06:00'
            },
            {
                '_id': '5a7b73f78a4c54ff8334e053',
                'index': 36,
                'guid': '4f2f7ae5-0bd1-4665-b97f-c556e5162349',
                'isActive': false,
                'balance': 1797.89,
                'age': 23,
                'name': 'Janie Ellison',
                'gender': 'female',
                'company': 'SPLINX',
                'email': 'janieellison@splinx.com',
                'phone': '+1 (947) 460-2254',
                'address': '114 Landis Court, Genoa, Indiana, 5198',
                'bd': '2017-07-28T12:45:44 -06:00'
            },
            {
                '_id': '5a7b73f7c87f7e86fcb00055',
                'index': 37,
                'guid': 'b7236378-8129-44b5-bcc6-0369290ffad6',
                'isActive': false,
                'balance': 3776.51,
                'age': 38,
                'name': 'Elisabeth Campbell',
                'gender': 'female',
                'company': 'GOKO',
                'email': 'elisabethcampbell@goko.com',
                'phone': '+1 (849) 430-3377',
                'address': '832 Kermit Place, Lutsen, Georgia, 9145',
                'bd': '2015-04-26T06:40:08 -06:00'
            },
            {
                '_id': '5a7b73f712f9208f145fa6ea',
                'index': 38,
                'guid': '5c955e3a-5f3a-4ead-96ee-80a5de6dc479',
                'isActive': true,
                'balance': 3794.93,
                'age': 27,
                'name': 'Noble Holland',
                'gender': 'male',
                'company': 'NUTRALAB',
                'email': 'nobleholland@nutralab.com',
                'phone': '+1 (888) 573-3730',
                'address': '408 Roosevelt Court, Hiwasse, North Dakota, 281',
                'bd': '2014-03-25T12:24:34 -06:00'
            },
            {
                '_id': '5a7b73f7aa1f371de59df90b',
                'index': 39,
                'guid': '94698a81-61a6-4e23-a952-76a50fba71ef',
                'isActive': true,
                'balance': 2205.55,
                'age': 35,
                'name': 'Laverne Brock',
                'gender': 'female',
                'company': 'ICOLOGY',
                'email': 'lavernebrock@icology.com',
                'phone': '+1 (821) 600-3174',
                'address': '391 Conover Street, Cassel, Tennessee, 6566',
                'bd': '2016-01-27T09:40:41 -06:00'
            },
            {
                '_id': '5a7b73f7c45c697931199945',
                'index': 40,
                'guid': 'a05a215f-be1c-49d1-89ca-c821b118f923',
                'isActive': true,
                'balance': 2397.12,
                'age': 29,
                'name': 'Irene Frost',
                'gender': 'female',
                'company': 'RODEMCO',
                'email': 'irenefrost@rodemco.com',
                'phone': '+1 (918) 539-2612',
                'address': '401 Moore Place, Groton, Arizona, 3415',
                'bd': '2017-09-14T09:46:55 -06:00'
            },
            {
                '_id': '5a7b73f7ef55416e92ebc818',
                'index': 41,
                'guid': '1ae8ceac-e8d0-4417-9f6f-04cd4e4738ad',
                'isActive': false,
                'balance': 3335.51,
                'age': 35,
                'name': 'Beard Hendricks',
                'gender': 'male',
                'company': 'QUONK',
                'email': 'beardhendricks@quonk.com',
                'phone': '+1 (847) 521-3952',
                'address': '576 Bayard Street, Chloride, Federated States Of Micronesia, 8070',
                'bd': '2016-11-01T12:47:26 -06:00'
            },
            {
                '_id': '5a7b73f7cbeecfe6febd672d',
                'index': 42,
                'guid': 'afdf3298-77bd-46b3-ae8d-232f815c5f01',
                'isActive': false,
                'balance': 2205.01,
                'age': 37,
                'name': 'Nelson Shields',
                'gender': 'male',
                'company': 'ARTWORLDS',
                'email': 'nelsonshields@artworlds.com',
                'phone': '+1 (956) 534-3050',
                'address': '581 Maple Street, Needmore, Colorado, 2062',
                'bd': '2014-07-21T08:22:01 -06:00'
            },
            {
                '_id': '5a7b73f71803de25c5f754ad',
                'index': 43,
                'guid': '5b872cad-4388-496b-8ede-5f86990dec00',
                'isActive': true,
                'balance': 1001.05,
                'age': 21,
                'name': 'Luella Duffy',
                'gender': 'female',
                'company': 'KROG',
                'email': 'luelladuffy@krog.com',
                'phone': '+1 (973) 451-2222',
                'address': '349 Bryant Street, Tioga, South Dakota, 6493',
                'bd': '2016-04-27T02:46:46 -06:00'
            },
            {
                '_id': '5a7b73f77f2a05eacb331c74',
                'index': 44,
                'guid': '7d6b7650-10d7-435d-87ca-33a1fe12cd57',
                'isActive': false,
                'balance': 1926.79,
                'age': 27,
                'name': 'Rosa Guthrie',
                'gender': 'female',
                'company': 'COMTOURS',
                'email': 'rosaguthrie@comtours.com',
                'phone': '+1 (814) 528-2701',
                'address': '719 Kathleen Court, Morriston, Guam, 4011',
                'bd': '2015-07-02T08:22:18 -06:00'
            },
            {
                '_id': '5a7b73f7727afbb0fc15653b',
                'index': 45,
                'guid': 'ebbc985b-227e-4954-a8a6-588b2a2bff22',
                'isActive': false,
                'balance': 2464.9,
                'age': 29,
                'name': 'Dillard Carlson',
                'gender': 'male',
                'company': 'COMCUR',
                'email': 'dillardcarlson@comcur.com',
                'phone': '+1 (847) 469-3741',
                'address': '918 Oceanic Avenue, Cochranville, Missouri, 1018',
                'bd': '2016-06-11T11:31:54 -06:00'
            },
            {
                '_id': '5a7b73f71dd7612e967e01ae',
                'index': 46,
                'guid': '63a2ee7f-2141-4ec5-b1e2-fcdcd62f28ed',
                'isActive': false,
                'balance': 3917.74,
                'age': 25,
                'name': 'Faye Walls',
                'gender': 'female',
                'company': 'EMERGENT',
                'email': 'fayewalls@emergent.com',
                'phone': '+1 (964) 527-3791',
                'address': '947 Judge Street, Nescatunga, Maine, 4928',
                'bd': '2014-06-23T12:46:21 -06:00'
            },
            {
                '_id': '5a7b73f7b33c73c425db7ee0',
                'index': 47,
                'guid': '61d40a89-af0c-40ca-8970-c54978134e6b',
                'isActive': true,
                'balance': 2213.18,
                'age': 32,
                'name': 'Norma Hooper',
                'gender': 'female',
                'company': 'PARCOE',
                'email': 'normahooper@parcoe.com',
                'phone': '+1 (827) 503-2742',
                'address': '470 Fenimore Street, Hatteras, Texas, 1582',
                'bd': '2015-01-15T12:22:00 -06:00'
            },
            {
                '_id': '5a7b73f7c30aa4064670cf21',
                'index': 48,
                'guid': '969d77af-b251-4924-82cf-7c787752161d',
                'isActive': false,
                'balance': 3673.94,
                'age': 23,
                'name': 'Lee Wiggins',
                'gender': 'female',
                'company': 'NITRACYR',
                'email': 'leewiggins@nitracyr.com',
                'phone': '+1 (941) 478-3536',
                'address': '958 Flatbush Avenue, Clara, North Carolina, 970',
                'bd': '2018-01-09T11:09:34 -06:00'
            },
            {
                '_id': '5a7b73f7ecd5a4859f2d94dc',
                'index': 49,
                'guid': 'cdf9b8de-a309-4cb7-80bb-f1b830b8b640',
                'isActive': true,
                'balance': 2166.21,
                'age': 27,
                'name': 'Alvarez Lynch',
                'gender': 'male',
                'company': 'KIGGLE',
                'email': 'alvarezlynch@kiggle.com',
                'phone': '+1 (929) 528-3805',
                'address': '901 Stratford Road, Derwood, Iowa, 1402',
                'bd': '2015-01-08T04:28:57 -06:00'
            },
            {
                '_id': '5a7b73f7216c8cabc849eea7',
                'index': 50,
                'guid': 'c4175d6a-1560-468e-b682-701c1549b6b1',
                'isActive': false,
                'balance': 3479.39,
                'age': 39,
                'name': 'Oneal Rosario',
                'gender': 'male',
                'company': 'UBERLUX',
                'email': 'onealrosario@uberlux.com',
                'phone': '+1 (951) 572-3027',
                'address': '267 Rockaway Parkway, Chapin, Montana, 7813',
                'bd': '2014-02-10T05:08:13 -06:00'
            },
            {
                '_id': '5a7b73f78841719bf955b2d9',
                'index': 51,
                'guid': '966c9ce6-9151-47cb-8c71-98c4cd0d2f40',
                'isActive': false,
                'balance': 1625.49,
                'age': 36,
                'name': 'Olsen Stevens',
                'gender': 'male',
                'company': 'EMPIRICA',
                'email': 'olsenstevens@empirica.com',
                'phone': '+1 (871) 403-3377',
                'address': '704 Lamont Court, Saranap, Massachusetts, 3171',
                'bd': '2014-09-17T05:13:13 -06:00'
            },
            {
                '_id': '5a7b73f7b7b8e578dff0f85c',
                'index': 52,
                'guid': '8269a34f-3a02-47d6-bcb1-8f076bb478f0',
                'isActive': true,
                'balance': 1143.73,
                'age': 27,
                'name': 'Marian Henson',
                'gender': 'female',
                'company': 'ENDIPINE',
                'email': 'marianhenson@endipine.com',
                'phone': '+1 (995) 406-2592',
                'address': '803 Ellery Street, Boykin, Alaska, 8624',
                'bd': '2016-08-28T01:22:51 -06:00'
            },
            {
                '_id': '5a7b73f737459ec79c91ca75',
                'index': 53,
                'guid': 'badb9342-10fd-4520-ae66-c246e47add8f',
                'isActive': false,
                'balance': 1458.01,
                'age': 23,
                'name': 'Dudley Dickson',
                'gender': 'male',
                'company': 'POLARIA',
                'email': 'dudleydickson@polaria.com',
                'phone': '+1 (860) 428-3250',
                'address': '833 Revere Place, Rockbridge, Illinois, 4628',
                'bd': '2017-01-19T12:36:59 -06:00'
            },
            {
                '_id': '5a7b73f70ddc6fc11ebf043a',
                'index': 54,
                'guid': '52b1be89-8186-4685-81b7-203c17ed9f89',
                'isActive': true,
                'balance': 2815.76,
                'age': 25,
                'name': 'Earnestine Oneil',
                'gender': 'female',
                'company': 'CYTREK',
                'email': 'earnestineoneil@cytrek.com',
                'phone': '+1 (879) 541-3490',
                'address': '442 Emerald Street, Graniteville, Hawaii, 1302',
                'bd': '2017-07-07T10:34:33 -06:00'
            },
            {
                '_id': '5a7b73f78b816185ccd2b4b3',
                'index': 55,
                'guid': 'e66850ea-546b-4eb5-ae76-d66b0e727f44',
                'isActive': true,
                'balance': 3645.09,
                'age': 21,
                'name': 'Nicholson Mason',
                'gender': 'male',
                'company': 'TELEQUIET',
                'email': 'nicholsonmason@telequiet.com',
                'phone': '+1 (861) 528-3215',
                'address': '261 Aitken Place, Cecilia, Ohio, 1381',
                'bd': '2016-03-20T08:31:34 -06:00'
            },
            {
                '_id': '5a7b73f780f8bf8fbe24d75c',
                'index': 56,
                'guid': '40b999cd-00bf-46e0-9107-b44906d832e0',
                'isActive': false,
                'balance': 2477.66,
                'age': 36,
                'name': 'Linda Shaffer',
                'gender': 'female',
                'company': 'ZORK',
                'email': 'lindashaffer@zork.com',
                'phone': '+1 (828) 524-3011',
                'address': '350 Plymouth Street, Waterford, Washington, 6715',
                'bd': '2017-07-09T05:51:11 -06:00'
            },
            {
                '_id': '5a7b73f741e22fc19ffa6952',
                'index': 57,
                'guid': 'cc2ac19d-7d67-4f60-973a-369160a9c377',
                'isActive': false,
                'balance': 2651.39,
                'age': 20,
                'name': 'Montoya Riggs',
                'gender': 'male',
                'company': 'MARKETOID',
                'email': 'montoyariggs@marketoid.com',
                'phone': '+1 (809) 562-3786',
                'address': '633 Monitor Street, Chicopee, District Of Columbia, 550',
                'bd': '2016-02-05T12:36:05 -06:00'
            },
            {
                '_id': '5a7b73f7de56ead40c26e69a',
                'index': 58,
                'guid': '6e0b06b8-1199-498c-8002-41f4972aa2d2',
                'isActive': false,
                'balance': 3463.92,
                'age': 28,
                'name': 'Walker Duran',
                'gender': 'male',
                'company': 'GEOFORM',
                'email': 'walkerduran@geoform.com',
                'phone': '+1 (868) 502-2553',
                'address': '550 Kensington Walk, Wyano, Virginia, 7703',
                'bd': '2017-08-18T12:39:37 -06:00'
            },
            {
                '_id': '5a7b73f70a04fe142269ea8d',
                'index': 59,
                'guid': 'c6733cd5-1e73-4317-b4bc-1a9e597581a4',
                'isActive': true,
                'balance': 3846.35,
                'age': 26,
                'name': 'Suzanne House',
                'gender': 'female',
                'company': 'SYBIXTEX',
                'email': 'suzannehouse@sybixtex.com',
                'phone': '+1 (892) 533-2739',
                'address': '367 Harwood Place, Twilight, Oregon, 9799',
                'bd': '2016-11-26T11:57:18 -06:00'
            },
            {
                '_id': '5a7b73f7339943d94af3b39d',
                'index': 60,
                'guid': '4ff2c2aa-0573-4be1-a1c8-f684af8a5fbf',
                'isActive': false,
                'balance': 2717.94,
                'age': 26,
                'name': 'Lewis Oconnor',
                'gender': 'male',
                'company': 'EXOZENT',
                'email': 'lewisoconnor@exozent.com',
                'phone': '+1 (954) 582-2660',
                'address': '717 Sutter Avenue, Bartley, Michigan, 1142',
                'bd': '2017-08-21T08:25:00 -06:00'
            },
            {
                '_id': '5a7b73f7d8e266ad1bc5daa8',
                'index': 61,
                'guid': '94667aad-86fc-4a2c-94fb-11b572307c75',
                'isActive': false,
                'balance': 2725.58,
                'age': 39,
                'name': 'Shelley Bonner',
                'gender': 'female',
                'company': 'INDEXIA',
                'email': 'shelleybonner@indexia.com',
                'phone': '+1 (965) 490-3768',
                'address': '896 Clinton Avenue, Canoochee, Idaho, 1154',
                'bd': '2016-04-11T06:08:29 -06:00'
            },
            {
                '_id': '5a7b73f7e74a5af674e4cbdd',
                'index': 62,
                'guid': 'ec68c47e-7cbd-485e-8d54-fab1bb6ea008',
                'isActive': true,
                'balance': 1343.87,
                'age': 29,
                'name': 'Mccall Morales',
                'gender': 'male',
                'company': 'QUILITY',
                'email': 'mccallmorales@quility.com',
                'phone': '+1 (939) 455-2610',
                'address': '325 Crystal Street, Harleigh, Wyoming, 5658',
                'bd': '2014-11-20T07:30:04 -06:00'
            },
            {
                '_id': '5a7b73f7efb231e53a0c94cd',
                'index': 63,
                'guid': '6a8b3f55-406c-4ae8-be59-94a0f8fbd180',
                'isActive': false,
                'balance': 1092.69,
                'age': 37,
                'name': 'Vera Mcpherson',
                'gender': 'female',
                'company': 'CIPROMOX',
                'email': 'veramcpherson@cipromox.com',
                'phone': '+1 (890) 500-3729',
                'address': '771 Beard Street, Rivera, Minnesota, 4726',
                'bd': '2017-07-13T02:47:50 -06:00'
            },
            {
                '_id': '5a7b73f7e345c5dfc5d636e4',
                'index': 64,
                'guid': '46879caf-76e6-46e0-9b8b-bc17667a81ea',
                'isActive': true,
                'balance': 2077.12,
                'age': 36,
                'name': 'Gregory Roth',
                'gender': 'male',
                'company': 'EARWAX',
                'email': 'gregoryroth@earwax.com',
                'phone': '+1 (806) 595-2477',
                'address': '349 Dunham Place, Sardis, Alabama, 3320',
                'bd': '2017-11-08T02:26:23 -06:00'
            },
            {
                '_id': '5a7b73f77f5f9d730fab11e0',
                'index': 65,
                'guid': '9cfb8f58-7acf-4a39-bf2b-c90269c33db0',
                'isActive': true,
                'balance': 3503.58,
                'age': 31,
                'name': 'Russell Carver',
                'gender': 'male',
                'company': 'PREMIANT',
                'email': 'russellcarver@premiant.com',
                'phone': '+1 (849) 521-2335',
                'address': '851 Noble Street, Holcombe, Oklahoma, 311',
                'bd': '2016-07-10T10:08:35 -06:00'
            },
            {
                '_id': '5a7b73f7cab10f461153989c',
                'index': 66,
                'guid': '2562a818-4451-4193-94cd-650d131ff097',
                'isActive': false,
                'balance': 1652.9,
                'age': 21,
                'name': 'Darlene Hurley',
                'gender': 'female',
                'company': 'STELAECOR',
                'email': 'darlenehurley@stelaecor.com',
                'phone': '+1 (868) 492-2270',
                'address': '627 Wilson Street, Loveland, Louisiana, 765',
                'bd': '2017-05-20T12:39:31 -06:00'
            },
            {
                '_id': '5a7b73f7ecccc997e4160a59',
                'index': 67,
                'guid': '0050170f-0283-481d-9633-dc9d134be121',
                'isActive': true,
                'balance': 3692.88,
                'age': 21,
                'name': 'Lela Bailey',
                'gender': 'female',
                'company': 'AQUOAVO',
                'email': 'lelabailey@aquoavo.com',
                'phone': '+1 (917) 449-2329',
                'address': '121 Adams Street, Malo, Arkansas, 7435',
                'bd': '2016-11-06T04:55:46 -06:00'
            }
        ];
    }
    return UserDB;
}());



/***/ }),

/***/ "./src/app/views/survey/answer-template-popup/answer-template-popup.component.html":
/*!*****************************************************************************************!*\
  !*** ./src/app/views/survey/answer-template-popup/answer-template-popup.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"ansTemplateForm\" (ngSubmit)=\"submit()\">\r\n  <mat-toolbar matDialogTitle class=\"mat-primary m-0\">\r\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <span class=\"title dialog-title\">{{data.title}}</span>\r\n      <!-- <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n        <mat-icon>close</mat-icon>\r\n      </button> -->\r\n    </div>\r\n  </mat-toolbar>\r\n  <mat-dialog-content class=\"mat-typography\">\r\n\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\" class=\"pt-1\">\r\n\r\n      <div fxFlex=\"100\" class=\"\">\r\n        <div class=\"text-muted\">\r\n          Create your answer template by adding template name, type and answers. answers need to have a lable, value\r\n          and\r\n          option value\r\n        </div>\r\n      </div>\r\n\r\n      <div fxFlex.sm=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input matInput [formControl]=\"ansTemplateForm.controls['name']\" required name=\"name\" letterOnly placeholder=\"Answer template name\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex.sm=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <mat-select [(ngModel)]=\"selectedAnsType\" [formControl]=\"ansTemplateForm.controls['answerTemplateType']\"\r\n            required placeholder=\"Answer template type\">\r\n            <mat-option>none</mat-option>\r\n            <mat-option *ngFor=\"let type of answerTypes\" [value]=\"type.value\">{{type.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\" formArrayName='answers' *ngFor=\"let answer of ansTemplateArray.controls; let i=index\">\r\n\r\n        <mat-card-title class=\"mt-1\">\r\n          <small class=\"text-muted\"> Answer {{i + 1}}</small>\r\n        </mat-card-title>\r\n\r\n        <div [formGroupName]=\"i\" fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"mb-1\">\r\n          <div fxFlex=\"25\" class=\"pr-1\" [ngSwitch]=\"selectedAnsType\">\r\n            <mat-form-field class=\"full-width\">\r\n              <input matInput formControlName='lable' required name=\"lable\" placeholder=\"Answer lable\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"25\" class=\"pr-1\">\r\n            <mat-form-field class=\"full-width\">\r\n              <input matInput type=\"number\" formControlName='value' required name=\"value\" positiveNumberOnly\r\n                placeholder=\"Answer value\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"25\" class=\"pr-1\">\r\n            <mat-form-field class=\"full-width\">\r\n              <input matInput type=\"number\" formControlName='optionNumber' required name=\"optionNumber\"\r\n                positiveNumberOnly placeholder=\"Answer option\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"25\" class=\"pr-1\">\r\n            <!-- <mat-button-toggle (click)='addAnsTemplate()' value=\"add\">\r\n              <mat-icon>add</mat-icon>\r\n            </mat-button-toggle>\r\n            <mat-button-toggle *ngIf=\"ansTemplateForm.controls['answers'].controls.length > 1\" (click)=removeAnsTemplate(i)\r\n              value=\"remove\">\r\n              <mat-icon>remove</mat-icon>\r\n            </mat-button-toggle> -->\r\n            <button mat-mini-fab color=\"default\" class=\"ml-1\" (click)='addAnsTemplate()' value=\"add\" type=\"button\">\r\n              <mat-icon>add</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab color=\"default\" class=\"ml-1\" *ngIf=\"ansTemplateForm.controls['answers'].controls.length > 1\"\r\n              (click)=removeAnsTemplate(i) value=\"remove\" type=\"button\">\r\n              <mat-icon>remove</mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </mat-dialog-content>\r\n\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"ansTemplateForm.invalid\">Save</button>\r\n    <span fxFlex></span>\r\n    <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n  </mat-dialog-actions>\r\n\r\n\r\n</form>"

/***/ }),

/***/ "./src/app/views/survey/answer-template-popup/answer-template-popup.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/views/survey/answer-template-popup/answer-template-popup.component.ts ***!
  \***************************************************************************************/
/*! exports provided: AnswerTemplatePopupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnswerTemplatePopupComponent", function() { return AnswerTemplatePopupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};




var AnswerTemplatePopupComponent = /** @class */ (function () {
    function AnswerTemplatePopupComponent(data, dialogRef, fb) {
        this.data = data;
        this.dialogRef = dialogRef;
        this.fb = fb;
        this.answerTypes = [
            // {
            //   name: "Free Text",
            //   value: "F"
            // },
            {
                name: "Multiple Options",
                value: "M"
            },
            {
                name: "Single Option",
                value: "S"
            }
        ];
    }
    AnswerTemplatePopupComponent.prototype.ngOnInit = function () {
        this.buildAnsTemplateform(this.data.payload);
        this.selectedAnsType = this.data.payload.answerTemplateType;
        this.hideRemoveButton();
    };
    AnswerTemplatePopupComponent.prototype.buildAnsTemplateform = function (fieldItem) {
        this.ansTemplateForm = this.fb.group({
            name: [fieldItem.name || ""],
            answerTemplateType: [fieldItem.answerTemplateType || ""],
            answers: this.fb.array([])
        });
        this.patch(fieldItem.answers);
    };
    AnswerTemplatePopupComponent.prototype.patch = function (fields) {
        var _this = this;
        var control = this.ansTemplateForm.controls["answers"];
        this.ansTemplateArray = control;
        if (!fields) {
            control.push(this.initAnswerTemplate());
            return;
        }
        fields.forEach(function (x) {
            control.push(_this.initAnswerTemplate(x.lable, x.value, x.optionNumber));
        });
    };
    AnswerTemplatePopupComponent.prototype.initAnswerTemplate = function (lable, value, optionNumber) {
        console.log(" SET " + lable + " : " + value + " : " + optionNumber);
        return this.fb.group({
            lable: [lable || ""],
            value: [value + "" || ""],
            optionNumber: [optionNumber + "" || ""]
        });
    };
    AnswerTemplatePopupComponent.prototype.addAnsTemplate = function () {
        var answer = this.ansTemplateForm.controls["answers"];
        answer.push(this.initAnswerTemplate());
    };
    AnswerTemplatePopupComponent.prototype.removeAnsTemplate = function (index) {
        var answer = this.ansTemplateForm.controls["answers"];
        answer.removeAt(index);
    };
    AnswerTemplatePopupComponent.prototype.hideRemoveButton = function () {
        return this.ansTemplateForm.controls["answers"].value.length > 1;
    };
    AnswerTemplatePopupComponent.prototype.submit = function () {
        console.log(JSON.stringify(this.ansTemplateForm.value));
        this.dialogRef.close(this.ansTemplateForm.value);
    };
    AnswerTemplatePopupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "app-answer-template-popup",
            template: __webpack_require__(/*! ./answer-template-popup.component.html */ "./src/app/views/survey/answer-template-popup/answer-template-popup.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"]
        }),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
    ], AnswerTemplatePopupComponent);
    return AnswerTemplatePopupComponent;
}());



/***/ }),

/***/ "./src/app/views/survey/survey-builder/survey-builder.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/views/survey/survey-builder/survey-builder.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n  <mat-card-title>\r\n    <div class=\"card-title-text\">Survey Builder - {{surveyName}}</div>\r\n    <mat-divider></mat-divider>\r\n  </mat-card-title>\r\n  <mat-card-content class=\"p-0\">\r\n\r\n\r\n    <mat-horizontal-stepper linear #stepper>\r\n\r\n\r\n      <mat-step [stepControl]=\"surveyDetailForm\">\r\n        <form [formGroup]=\"surveyDetailForm\" (ngSubmit)=\"submit()\">\r\n          <ng-template matStepLabel>Fill Survey Details</ng-template>\r\n\r\n          <mat-card class=\"p-1\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n\r\n\r\n            <mat-card-title class=\"p-0\">\r\n              <small class=\"text-muted\"> Survey Details </small>\r\n            </mat-card-title>\r\n\r\n            <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n\r\n              <div fxFlex=\"50\" class=\"pr-1\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput [formControl]=\"surveyDetailForm.controls['topic']\" required name=\"name\" \r\n                  positiveNumberAndLetterOnly placeholder=\"Survey topic\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div fxFlex=\"50\" class=\"pr-1\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <mat-select [(value)]=\"selectedType\" [(ngModel)]=\"selectedType\" [formControl]=\"surveyDetailForm.controls['type']\" required\r\n                    placeholder=\"Survey Type\">\r\n                    <mat-option>none</mat-option>\r\n                    <mat-option *ngFor=\"let type of surveyTypes\" (click)=\"popuplateDropdown(type.value)\" [value]=\"type.value\">{{type.name}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n              <div fxFlex=\"50\" class=\"pr-1\">\r\n\r\n                <mat-form-field *ngIf='selectedType === \"P\"' class=\"full-width\">\r\n                  <mat-select [formControl]=\"surveyDetailForm.controls['productId']\" required placeholder=\"Select A Product\">\r\n                    <mat-option>none</mat-option>\r\n                    <mat-option *ngFor=\"let product of products\" [value]=\"product.id\">{{product.name}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field *ngIf='selectedType === \"V\"' class=\"full-width\">\r\n                  <mat-select [formControl]=\"surveyDetailForm.controls['voteId']\" required placeholder=\"Select An E-Vote\">\r\n                    <mat-option>none</mat-option>\r\n                    <mat-option *ngFor=\"let evote of evotes\" [value]=\"evote.id\">{{evote.topic}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n\r\n              <div fxFlex=\"50\" class=\"pr-1\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput name=\"startDate\" [matDatepicker]=\"picker1\" [formControl]=\"surveyDetailForm.controls['startDate']\" required\r\n                    placeholder=\"Start Date\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\">\r\n                    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div fxFlex=\"50\" class=\"pr-1\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput name=\"endDate\" [matDatepicker]=\"picker2\" [formControl]=\"surveyDetailForm.controls['endDate']\" required placeholder=\"End Date\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\">\r\n                    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #picker2></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n            </div>\r\n          </mat-card>\r\n\r\n          <div>\r\n            <button type='button' color=\"primary\" [disabled]=\"surveyDetailForm.invalid\" mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n\r\n\r\n\r\n      <mat-step [stepControl]=\"questionForm\" [optional]=\"isOptional\">\r\n        <form [formGroup]=\"questionForm\" (ngSubmit)=\"submit()\">\r\n          <ng-template matStepLabel>Setup your questions</ng-template>\r\n\r\n          <div class=\"text-right mb-1\">\r\n            <div class=\"m-333 text-right\">\r\n              <button type='button' mat-raised-button class=\"mb-05\" (click)=\"addQuestion()\" color=\"accent\">Add Question</button>\r\n            </div>\r\n          </div>\r\n\r\n          <mat-card formArrayName='questions' *ngFor=\"let question of questionFormArray.controls; let i=index\" class=\"p-1\"\r\n            [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n\r\n            <mat-card-title class=\"p-0\">\r\n              <small class=\"text-muted\"> Question {{i+1}} </small>\r\n            </mat-card-title>\r\n\r\n            <div [formGroupName]=\"i\">\r\n              <div fxFlex=\"100\" class=\"pr-1\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <input matInput formControlName=\"name\" required name=\"lable\" placeholder=\"Type your Question\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div fxFlex=\"50\" class=\"pr-1\">\r\n                <mat-form-field class=\"full-width\">\r\n                  <mat-select formControlName=\"answerTemplate\" required placeholder=\"Choose Answer Template\">\r\n                    <mat-option>None</mat-option>\r\n                    <mat-option *ngFor='let template of ansTemplates' [value]=\"template.id\">{{template.name}}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div fxFlex=\"20\" class=\"pr-0\">\r\n                <button type='button' mat-raised-button *ngIf=\"questionForm.controls['questions'].controls.length > 1\" (click)='removeQuestion(i)'\r\n                  color=\"warn\">Remove</button>\r\n              </div>\r\n\r\n            </div>\r\n          </mat-card>\r\n\r\n          <div>\r\n            <button type='button' mat-button color=\"primary\" matStepperPrevious>Back</button>\r\n            <button color=\"primary\" [disabled]=\"questionForm.invalid\" mat-button matStepperNext>Submit Question</button>\r\n          </div>\r\n\r\n        </form>\r\n      </mat-step>\r\n\r\n\r\n      <mat-step>\r\n\r\n        <ng-template matStepLabel>Review</ng-template>\r\n\r\n        <mat-card class=\"p-2\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n\r\n\r\n\r\n          <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n            <mat-card-title class=\"p-0\">\r\n              Please Review your survey details\r\n            </mat-card-title>\r\n            <div fxFlex=\"100\" class=\"pr-1\">\r\n              <b>Survey Topic : </b> <span class=\"text-muted\">{{ surveyDetailForm.controls['topic'].value }} </span>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"pr-1\" *ngIf='selectedType === \"P\"'>\r\n              <b>Survey Source : </b> <span class=\"text-muted\" *ngFor='let product of products | arrayFilter : surveyDetailForm.controls[\"productId\"].value : \"products\" '>\r\n                {{product.name }} </span>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"pr-1\" *ngIf='selectedType === \"V\"'>\r\n              <b>Survey Source : </b><span class=\"text-muted\" *ngFor='let evote of evotes | arrayFilter : surveyDetailForm.controls[\"voteId\"].value : \"evotes\" '>\r\n                {{evote.topic }} </span>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"pr-1\">\r\n              <b>Survey Start Date : </b> <span class=\"text-muted\">{{ surveyDetailForm.controls['startDate'].value }} </span>\r\n            </div>\r\n            <div fxFlex=\"100\" class=\"pr-1\">\r\n              <b>Survey End Date : </b> <span class=\"text-muted\">{{ surveyDetailForm.controls['endDate'].value }} </span>\r\n            </div>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-2\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n          <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n            <mat-card-title class=\"p-0\">\r\n              Review Survey Questions\r\n            </mat-card-title>\r\n\r\n            <div *ngFor=\"let question of questionFormArray.controls; let i=index \" fxFlex=\"100\" class=\"timeline-body-top\">\r\n              <span href=\"#\" class=\"timeline-body-title mr-1\"><b>Question {{i+1}}</b></span>\r\n              <span class=\"text-muted\">{{question.value.name}}</span><br>\r\n\r\n              <div *ngIf=\"question.value.answerTemplate\">\r\n                <div class=\"p-1\" *ngFor='let temp of ansTemplates | arrayFilter:question.value.answerTemplate:\"answer_types\" ;' class=\"timeline-body-top\">\r\n                  <span class=\"text-muted\" *ngFor='let ans of temp.answers; let a=index '>{{a+1}}. {{ans.lable}}<br></span>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </mat-card>\r\n\r\n        <div>\r\n          <button type='button' mat-button color=\"primary\" matStepperPrevious>Back</button>\r\n          <button type='button' mat-button color=\"primary\" [disabled]=\"questionForm.invalid\" matStepperNext>Next</button>\r\n        </div>\r\n\r\n      </mat-step>\r\n\r\n\r\n      <mat-step>\r\n        <ng-template matStepLabel>Done</ng-template>\r\n\r\n        <mat-card class=\"profile-sidebar mb-1 pb-0\">\r\n\r\n          <div class=\"profile-title text-center mb-1\">\r\n            <div class=\"main-title\">Survey Question Setup is Successfully !</div>\r\n            <div class=\"subtitle mb-05\">Move back to survey summery to see your surveys</div>\r\n          </div>\r\n          <div class=\"text-center\">\r\n            <img src=\"assets/images/survey-icon.jpg\" alt=\"\">\r\n          </div>\r\n\r\n        </mat-card>\r\n\r\n\r\n        <div>\r\n          <button type='button' mat-button color=\"primary\" matStepperPrevious>Back</button>\r\n          <button type='button' [routerLink]=\"['/surveys/summery']\" routerLinkActive=\"router-link-active\" mat-button color=\"primary\">Done</button>\r\n        </div>\r\n      </mat-step>\r\n\r\n    </mat-horizontal-stepper>\r\n\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./src/app/views/survey/survey-builder/survey-builder.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/views/survey/survey-builder/survey-builder.component.ts ***!
  \*************************************************************************/
/*! exports provided: MY_FORMATS, SurveyBuilderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyBuilderComponent", function() { return SurveyBuilderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/services/app-loader/app-loader.service */ "./src/app/shared/services/app-loader/app-loader.service.ts");
/* harmony import */ var _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../product-crud/product-crud.service */ "./src/app/views/product-crud/product-crud.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _survey_common_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../survey-common.component */ "./src/app/views/survey/survey-common.component.ts");
/* harmony import */ var _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../evote/evote-service.service */ "./src/app/views/evote/evote-service.service.ts");
/* harmony import */ var _survey_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../survey.service */ "./src/app/views/survey/survey.service.ts");
/* harmony import */ var _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../shared/services/app-error/app-error.service */ "./src/app/shared/services/app-error/app-error.service.ts");
/* harmony import */ var _model_SurveyRequest_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../model/SurveyRequest.model */ "./src/app/model/SurveyRequest.model.ts");
/* harmony import */ var app_utility_dateValidator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/utility/dateValidator */ "./src/app/utility/dateValidator.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var MY_FORMATS = {
    parse: {
        dateInput: "YYYY-MM-DD"
    },
    display: {
        dateInput: "YYYY-MM-DD",
        monthYearLabel: "MMM YYYY",
        dateA11yLabel: "YYYY-MM-DD",
        monthYearA11yLabel: "MMMM YYYY"
    }
};
var SurveyBuilderComponent = /** @class */ (function (_super) {
    __extends(SurveyBuilderComponent, _super);
    function SurveyBuilderComponent(fb, route, productService, evoteService, surveyService, errDialog, loader) {
        var _this = _super.call(this, productService, evoteService) || this;
        _this.fb = fb;
        _this.route = route;
        _this.productService = productService;
        _this.evoteService = evoteService;
        _this.surveyService = surveyService;
        _this.errDialog = errDialog;
        _this.loader = loader;
        _this.isOptional = false;
        _this.surveyQuestions = [];
        // checkQuestions(){
        //   console.log('question : ');
        //   console.log(this.questionForm.controls['questions']);
        // }
        _this.surveyTypes = [
            {
                name: "Product Survey",
                value: "P"
            },
            {
                name: "Evote Survey",
                value: "V"
            }
        ];
        return _this;
    }
    SurveyBuilderComponent.prototype.getAllAnsTemplates = function () {
        var _this = this;
        this.getAnswersTemplatesSub = this.surveyService
            .getAnswerTemplates()
            .subscribe(function (successResp) {
            _this.ansTemplates = successResp.content;
        }, function (error) {
            _this.errDialog.showError({
                title: "Error",
                status: error.status,
                type: "http_error"
            });
        });
    };
    SurveyBuilderComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.queryParams.subscribe(function (params) {
            var id = params["id"];
            var name = params["name"];
            var type = params["type"];
            var productId = params["productId"];
            var voteId = params["voteId"];
            var startDate = params["startDate"];
            var endDate = params["endDate"];
            var questions = params["questions"];
            _this.surveyName = name;
            _this.surveyId = id;
            console.log("id :" + id);
            console.log("name :" + name);
            console.log("type :" + type);
            console.log("productId :" + productId);
            console.log("voteId :" + voteId);
            console.log("startDate :" + startDate);
            console.log("endDate :" + endDate);
            console.log("questions :");
            if (questions) {
                console.log(JSON.parse(questions));
            }
            _this.selectedType = type;
            _this.buildSurveyForm(name, type, productId, voteId, startDate, endDate);
            _this.buildQuestionForm(questions);
            _this.getAllAnsTemplates();
            _this.popuplateDropdown(_this.selectedType);
            _this.today = app_utility_dateValidator__WEBPACK_IMPORTED_MODULE_13__["DateValidator"].getToday();
        });
    };
    SurveyBuilderComponent.prototype.buildSurveyForm = function (name, type, productId, voteId, startDate, endDate) {
        this.surveyDetailForm = this.fb.group({
            topic: [name || ""],
            type: [type || ""],
            productId: [productId || ""],
            voteId: [voteId || ""],
            startDate: [startDate, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            endDate: [endDate, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    };
    SurveyBuilderComponent.prototype.buildQuestionForm = function (questions) {
        this.questionForm = this.fb.group({
            questions: this.fb.array([])
        });
        this.patch(questions);
    };
    SurveyBuilderComponent.prototype.patch = function (fields) {
        var _this = this;
        console.log("patch called");
        var control = this.questionForm.controls["questions"];
        console.log("length  and obj  : " + control.length);
        console.log(control);
        this.questionFormArray = control;
        if (fields == null) {
            control.push(this.initQuestionTemplate());
            return;
        }
        var questionArray = JSON.parse(fields);
        console.log(questionArray.length);
        if (questionArray.length == 0) {
            console.log("without question loading situation");
            control.push(this.initQuestionTemplate());
            return;
        }
        questionArray.forEach(function (x) {
            if (x.id) {
                _this.surveyService.getQuestionById(x.id).subscribe(function (response) {
                    console.log("QUESTION BY ID : ");
                    console.log(response);
                    console.log("this.surveyQuestions");
                    console.log(_this.surveyQuestions);
                    _this.surveyQuestions.unshift(response);
                    control.push(_this.initQuestionTemplate(response.name, response.answerTemplate));
                });
            }
        });
        console.log(this.surveyQuestions);
    };
    SurveyBuilderComponent.prototype.initQuestionTemplate = function (name, answerTemplate) {
        var anstempVal = answerTemplate ? answerTemplate.id : null;
        console.log("anstempVAL : " + anstempVal);
        return this.fb.group({
            name: [name || ""],
            answerTemplate: [anstempVal || ""]
        });
    };
    SurveyBuilderComponent.prototype.addQuestion = function () {
        var question = this.questionForm.controls["questions"];
        question.push(this.initQuestionTemplate());
    };
    SurveyBuilderComponent.prototype.removeQuestion = function (index) {
        var question = this.questionForm.controls["questions"];
        question.removeAt(index);
    };
    SurveyBuilderComponent.prototype.hideRemoveButton = function () {
        return this.questionForm.controls["answers"].value.length > 1;
    };
    SurveyBuilderComponent.prototype.submit = function () {
        this.loader.open('Questions are upadating');
        var surveyReq = new _model_SurveyRequest_model__WEBPACK_IMPORTED_MODULE_12__["SurveyModel"]({
            topic: this.surveyDetailForm.value.topic,
            type: this.surveyDetailForm.value.type,
            startDate: this.surveyDetailForm.value.startDate,
            endDate: this.surveyDetailForm.value.endDate,
            productId: this.surveyDetailForm.value.productId,
            voteId: this.surveyDetailForm.value.voteId,
            questions: this.questionForm.value.questions
        });
        console.log('final request : ');
        console.log(surveyReq);
        var jOb = JSON.stringify(surveyReq);
        console.log(jOb);
        console.log(JSON.parse(jOb));
        this.updateSurveyWithQuestions(this.surveyId, surveyReq);
    };
    SurveyBuilderComponent.prototype.updateSurveyWithQuestions = function (id, surveyObj) {
        var _this = this;
        console.log("sueveyobject");
        console.log(surveyObj);
        this.surveyService.updateSurveyWithQuestions(id, surveyObj).subscribe(function (response) {
            console.log("response after update questions");
            console.log(response.content);
            _this.loader.close();
        }, function (error) {
            _this.loader.close();
            _this.errDialog.showError({
                title: "Error",
                status: error.status,
                type: "http_error"
            });
        });
    };
    SurveyBuilderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "app-survey-builder",
            template: __webpack_require__(/*! ./survey-builder.component.html */ "./src/app/views/survey/survey-builder/survey-builder.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"],
            providers: [
                {
                    provide: _angular_material__WEBPACK_IMPORTED_MODULE_6__["DateAdapter"],
                    useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__["MomentDateAdapter"],
                    deps: [_angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DATE_LOCALE"]]
                },
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DATE_FORMATS"], useValue: MY_FORMATS }
            ]
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_5__["ProductCrudService"],
            _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_9__["EvoteService"],
            _survey_service__WEBPACK_IMPORTED_MODULE_10__["SurveyService"],
            _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_11__["AppErrorService"],
            _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_4__["AppLoaderService"]])
    ], SurveyBuilderComponent);
    return SurveyBuilderComponent;
}(_survey_common_component__WEBPACK_IMPORTED_MODULE_8__["SurveyCommonComponent"]));



/***/ }),

/***/ "./src/app/views/survey/survey-common.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/views/survey/survey-common.component.ts ***!
  \*********************************************************/
/*! exports provided: SurveyCommonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyCommonComponent", function() { return SurveyCommonComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../product-crud/product-crud.service */ "./src/app/views/product-crud/product-crud.service.ts");
/* harmony import */ var _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../evote/evote-service.service */ "./src/app/views/evote/evote-service.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SurveyCommonComponent = /** @class */ (function () {
    function SurveyCommonComponent(productService, evoteService) {
        this.productService = productService;
        this.evoteService = evoteService;
        this.products = [];
        this.evotes = [];
    }
    SurveyCommonComponent.prototype.popuplateDropdown = function (value) {
        console.log("PASSED TYPE  " + value);
        switch (this.selectedType) {
            case "P":
                this.getProducts();
                break;
            case "V":
                this.getEvotes();
                break;
            default:
                this.getProducts();
                break;
        }
    };
    SurveyCommonComponent.prototype.getProducts = function () {
        var _this = this;
        console.log("called PRODUCTS " + this.products.length);
        if (this.products.length === 0) {
            this.getProductsSub = this.productService
                .getAllProductSuggestions()
                .subscribe(function (data) {
                _this.response = data;
                _this.products = _this.response.content;
            });
        }
    };
    SurveyCommonComponent.prototype.getEvotes = function () {
        var _this = this;
        console.log("called EVOTES " + this.evotes.length);
        if (this.evotes.length === 0) {
            this.getEvotesSub = this.evoteService.getAllEvotesSuggestions().subscribe(function (data) {
                _this.response = data;
                _this.evotes = _this.response.content;
                console.log(_this.evotes);
            });
        }
    };
    SurveyCommonComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "survey-common",
            template: ""
        }),
        __metadata("design:paramtypes", [_product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_1__["ProductCrudService"],
            _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_2__["EvoteService"]])
    ], SurveyCommonComponent);
    return SurveyCommonComponent;
}());



/***/ }),

/***/ "./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.html":
/*!*****************************************************************************************!*\
  !*** ./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"surveyForm\" (ngSubmit)=\"submit()\">\r\n  <mat-toolbar matDialogTitle class=\"mat-primary m-0\">\r\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <span class=\"title dialog-title\">{{data.title}}</span>\r\n    </div>\r\n  </mat-toolbar>\r\n  <mat-dialog-content class=\"mat-typography mt-1\">\r\n\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\" class=\"mt-1\">\r\n      <div fxFlex=\"100\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input matInput [formControl]=\"surveyForm.controls['topic']\" required name=\"topic\"\r\n          placeholder=\"Feedback topic\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <mat-select [(value)]=\"selectedType\" [(ngModel)]=\"selectedType\" [formControl]=\"surveyForm.controls['type']\"\r\n            placeholder=\"Feedback Type\">\r\n            <mat-option>none</mat-option>\r\n            <mat-option *ngFor=\"let type of surveyTypes\" (click)=\"popuplateDropdown(type.value)\" [value]=\"type.value\">{{type.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n\r\n      <div fxFlex=\"100\" class=\"pr-1\">\r\n\r\n        <mat-form-field *ngIf='selectedType === \"P\"' class=\"full-width\">\r\n          <mat-select [formControl]=\"surveyForm.controls['productId']\" placeholder=\"Select A Product\">\r\n            <mat-option>none</mat-option>\r\n            <mat-option *ngFor=\"let product of products\" [value]=\"product.id\">{{product.name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf='selectedType === \"V\"' class=\"full-width\">\r\n          <mat-select [formControl]=\"surveyForm.controls['voteId']\" placeholder=\"Select An E-Vote\">\r\n            <mat-option>none</mat-option>\r\n            <mat-option *ngFor=\"let evote of evotes\" [value]=\"evote.id\">{{evote.topic}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input matInput name=\"startDate\" [min]=\"startDateMin\" [max]=\"startDateMax\" (dateChange)=\"validateDatePickerMinMax()\" [matDatepicker]=\"picker1\" [formControl]=\"surveyForm.controls['startDate']\" required placeholder=\"Start Date\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\">\r\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n          </mat-datepicker-toggle>\r\n          <mat-datepicker #picker1></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input matInput name=\"endDate\" [min]=\"endDateMin\" [max]=\"endDateMax\" (dateChange)=\"validateDatePickerMinMax()\"  [matDatepicker]=\"picker2\" [formControl]=\"surveyForm.controls['endDate']\" required placeholder=\"End Date\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker2\">\r\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n          </mat-datepicker-toggle>\r\n          <mat-datepicker #picker2></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n  </mat-dialog-content>\r\n\r\n  <!-- routerLink=\"/surveys/builder_v1\" -->\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"surveyForm.invalid\">Save</button>\r\n    <span fxFlex></span>\r\n    <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n  </mat-dialog-actions>\r\n\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.ts ***!
  \***************************************************************************************/
/*! exports provided: MY_FORMATS, SurveyCreationPopupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_FORMATS", function() { return MY_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyCreationPopupComponent", function() { return SurveyCreationPopupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../product-crud/product-crud.service */ "./src/app/views/product-crud/product-crud.service.ts");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");
/* harmony import */ var _survey_common_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../survey-common.component */ "./src/app/views/survey/survey-common.component.ts");
/* harmony import */ var _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../evote/evote-service.service */ "./src/app/views/evote/evote-service.service.ts");
/* harmony import */ var app_utility_dateValidator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/utility/dateValidator */ "./src/app/utility/dateValidator.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};









var MY_FORMATS = {
    parse: {
        dateInput: "YYYY-MM-DD"
    },
    display: {
        dateInput: "YYYY-MM-DD",
        monthYearLabel: "MMM YYYY",
        dateA11yLabel: "YYYY-MM-DD",
        monthYearA11yLabel: "MMMM YYYY"
    }
};
var SurveyCreationPopupComponent = /** @class */ (function (_super) {
    __extends(SurveyCreationPopupComponent, _super);
    function SurveyCreationPopupComponent(data, fb, dialogRef, productService, evoteService) {
        var _this = _super.call(this, productService, evoteService) || this;
        _this.data = data;
        _this.fb = fb;
        _this.dialogRef = dialogRef;
        _this.productService = productService;
        _this.evoteService = evoteService;
        _this.surveyTypes = [
            {
                name: "Product Survey",
                value: "P"
            },
            {
                name: "Evote Survey",
                value: "V"
            }
        ];
        return _this;
    }
    SurveyCreationPopupComponent.prototype.ngOnInit = function () {
        this.buildSurveyForm(this.data.payload);
        console.log("this.data.payload.type : " + this.data.payload.type);
        this.selectedType = this.data.payload.type;
        console.log("this.selectedType : " + this.selectedType);
        this.popuplateDropdown(this.selectedType);
        // this.startDateMax = DateValidator.;
        this.validateDatePickerMinMax();
    };
    SurveyCreationPopupComponent.prototype.ngOnDestroy = function () {
        if (this.getProductsSub) {
            this.getProductsSub.unsubscribe();
        }
        if (this.getEvotesSub) {
            this.getEvotesSub.unsubscribe();
        }
    };
    SurveyCreationPopupComponent.prototype.buildSurveyForm = function (fieldItem) {
        this.surveyForm = this.fb.group({
            topic: [fieldItem.topic || ""],
            type: [fieldItem.type || ""],
            productId: [fieldItem.productId || ""],
            voteId: [fieldItem.voteId || ""],
            startDate: [fieldItem.startDate, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            endDate: [fieldItem.endDate, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
    };
    SurveyCreationPopupComponent.prototype.validateDatePickerMinMax = function () {
        var sdv = this.surveyForm.get('startDate').value;
        var edv = this.surveyForm.get('endDate').value;
        if (sdv == null && edv == null) {
            this.startDateMin = app_utility_dateValidator__WEBPACK_IMPORTED_MODULE_8__["DateValidator"].getToday();
            this.endDateMin = app_utility_dateValidator__WEBPACK_IMPORTED_MODULE_8__["DateValidator"].getToday();
        }
        else {
            if (sdv != null) {
                var sd = sdv._d;
                this.endDateMin = sd;
            }
            if (edv != null) {
                var ed = edv._d;
                this.startDateMax = ed;
            }
        }
    };
    SurveyCreationPopupComponent.prototype.submit = function () {
        console.log(JSON.stringify(this.surveyForm.value));
        this.dialogRef.close(this.surveyForm.value);
    };
    SurveyCreationPopupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "app-survey-creation-popup",
            template: __webpack_require__(/*! ./survey-creation-popup.component.html */ "./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"],
            providers: [
                {
                    provide: _angular_material__WEBPACK_IMPORTED_MODULE_2__["DateAdapter"],
                    useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_5__["MomentDateAdapter"],
                    deps: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DATE_LOCALE"]]
                },
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DATE_FORMATS"], useValue: MY_FORMATS }
            ]
        }),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [Object, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_4__["ProductCrudService"],
            _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_7__["EvoteService"]])
    ], SurveyCreationPopupComponent);
    return SurveyCreationPopupComponent;
}(_survey_common_component__WEBPACK_IMPORTED_MODULE_6__["SurveyCommonComponent"]));



/***/ }),

/***/ "./src/app/views/survey/survey-interaction/survey-interaction.component.html":
/*!***********************************************************************************!*\
  !*** ./src/app/views/survey/survey-interaction/survey-interaction.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"interactionForm\" (ngSubmit)=\"doBulkUpload()\">\r\n  <mat-card\r\n    class=\"p-1\"\r\n    [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n  >\r\n    <mat-card-title class=\"p-0\">\r\n      <div class=\"card-title-text\">Authenticate Demo</div>\r\n      <mat-divider></mat-divider>\r\n    </mat-card-title>\r\n    <mat-card-content class=\"p-0\">\r\n      <div class=\"text-muted mb-1 m-1 text-left\">\r\n        You can make mock product authenticate request from front-end with\r\n        adjusting configurations.\r\n      </div>\r\n    </mat-card-content>\r\n\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <mat-select\r\n            [formControl]=\"interactionForm.controls['productId']\"\r\n            placeholder=\"Select A Product\"\r\n          >\r\n            <mat-option>none</mat-option>\r\n            <mat-option\r\n              (click)=\"setProductDetails(product)\"\r\n              *ngFor=\"let product of products\"\r\n              [value]=\"product.id\"\r\n              >{{ product.name }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            [readOnly]\r\n            matInput\r\n            [formControl]=\"interactionForm.controls['currentQty']\"\r\n            required\r\n            name=\"currentQty\"\r\n            placeholder=\"Proudct Quantity\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            type=\"number\"\r\n            matInput\r\n            [formControl]=\"interactionForm.controls['qty']\"\r\n            required\r\n            name=\"qty\"\r\n            placeholder=\"Request Quantity\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      [disabled]=\"interactionForm.invalid\"\r\n    >\r\n      Launch\r\n    </button>\r\n  </mat-card>\r\n</form>\r\n\r\n<form\r\n\r\n  [formGroup]=\"feedbackForm\"\r\n  (ngSubmit)=\"doFeedBackRequest()\"\r\n>\r\n\r\n  <mat-card\r\n  *ngIf=\"productDetails\"\r\n    class=\"p-1\"\r\n    [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n  >\r\n    <mat-card-title class=\"p-0\">\r\n      <div class=\"card-title-text\">Feedback Demo  {{detailLength}}</div>\r\n      <mat-divider></mat-divider>\r\n    </mat-card-title>\r\n    <mat-card-content class=\"p-0\">\r\n      <div class=\"text-muted mb-1 m-1 text-left\">\r\n        You can make mock product feedback request adjusting configurations.\r\n      </div>\r\n    </mat-card-content>\r\n\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <mat-select\r\n            [formControl]=\"feedbackForm.controls['surveyId']\"\r\n            placeholder=\"Select A Feedback\"\r\n          >\r\n            <mat-option>none</mat-option>\r\n            <mat-option\r\n              (click)=\"showSurveyInfo(survey)\"\r\n              *ngFor=\"let survey of surveyRows\"\r\n              [value]=\"survey.id\"\r\n              >{{ survey.topic }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"50\" class=\"pr-1\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            type=\"number\"\r\n            matInput\r\n            [formControl]=\"feedbackForm.controls['qty']\"\r\n            required\r\n            name=\"qty\"\r\n            placeholder=\"Request Quantity\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!--\r\n        <div  *ngIf=\"surveyRecord\" fxFlex=\"50\" class=\"pr-1\">{{ surveyRecord.topic }}</div>\r\n      -->\r\n      <mat-card\r\n        *ngIf=\"surveyRecord\"\r\n        class=\"p-1\"\r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        {{ surveyRecord.topic }}\r\n\r\n        <div\r\n          *ngFor=\"let question of surveyRecord.questions; let i = index\"\r\n          fxLayout=\"row\"\r\n          fxLayout.lt-sm=\"column\"\r\n          fxLayoutWrap=\"wrap\"\r\n        >\r\n          <span href=\"#\" class=\"timeline-body-title mr-1\"\r\n            ><b>Question {{ i + 1 }}</b></span\r\n          >\r\n          <span class=\"text-muted\">{{ question.name }}</span\r\n          ><br />\r\n\r\n          <div *ngIf=\"question.answerTemplate\">\r\n            <div class=\"p-1\" class=\"timeline-body-top\">\r\n              <span class=\"text-muted\"\r\n                >{{ question.answerTemplate.name }}<br\r\n              /></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" [disabled]=\"feedbackForm.invalid\">\r\n      Launch\r\n    </button>\r\n  </mat-card>\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/views/survey/survey-interaction/survey-interaction.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/views/survey/survey-interaction/survey-interaction.component.ts ***!
  \*********************************************************************************/
/*! exports provided: SurveyInteractionComponent, AuthRequest, QuestionPart, AnswerRequest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyInteractionComponent", function() { return SurveyInteractionComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthRequest", function() { return AuthRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuestionPart", function() { return QuestionPart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnswerRequest", function() { return AnswerRequest; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
/* harmony import */ var _shared_fake_db_location_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/fake-db/location-db */ "./src/app/shared/fake-db/location-db.ts");
/* harmony import */ var _shared_fake_db_users__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared/fake-db/users */ "./src/app/shared/fake-db/users.ts");
/* harmony import */ var app_views_product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/views/product-crud/product-crud.service */ "./src/app/views/product-crud/product-crud.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/services/app-loader/app-loader.service */ "./src/app/shared/services/app-loader/app-loader.service.ts");
/* harmony import */ var _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/services/app-error/app-error.service */ "./src/app/shared/services/app-error/app-error.service.ts");
/* harmony import */ var _survey_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../survey.service */ "./src/app/views/survey/survey.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var SurveyInteractionComponent = /** @class */ (function () {
    function SurveyInteractionComponent(prodService, surveyService, fb, loader, errDialog) {
        this.prodService = prodService;
        this.surveyService = surveyService;
        this.fb = fb;
        this.loader = loader;
        this.errDialog = errDialog;
        this.canada = new _shared_fake_db_location_db__WEBPACK_IMPORTED_MODULE_2__["CanadaLocation"]();
        this.user = new _shared_fake_db_users__WEBPACK_IMPORTED_MODULE_3__["UserDB"]();
    }
    SurveyInteractionComponent.prototype.ngOnDestroy = function () {
        if (this.getProductsSub) {
            this.getProductsSub.unsubscribe();
        }
    };
    SurveyInteractionComponent.prototype.ngOnInit = function () {
        // load all products
        this.getProducts();
        this.getAllSurvey();
        // get array of cities and their provinces
        var cities = this.canada.cities;
        var provinces = this.canada.provinces;
        this.cityArrays = cities.map(function (cityData) {
            return {
                city: cityData[0],
                province: provinces[cityData[1]]
            };
        });
        this.interactionForm = this.fb.group({
            productId: [],
            qty: [],
            currentQty: [""]
        });
        this.buildFeedBackForm();
    };
    SurveyInteractionComponent.prototype.buildFeedBackForm = function (surveyId, qty) {
        this.feedbackForm = this.fb.group({
            surveyId: [surveyId || ""],
            qty: [qty || ""]
        });
    };
    SurveyInteractionComponent.prototype.getProducts = function () {
        var _this = this;
        this.getProductsSub = this.prodService.getAllProducts().subscribe(function (data) {
            _this.response = data;
            _this.products = _this.response.content;
        });
    };
    SurveyInteractionComponent.prototype.getAllSurvey = function () {
        var _this = this;
        this.getAllSurveySub = this.surveyService
            .getAllSurveys()
            .subscribe(function (successResp) {
            _this.surveyRows = successResp.content;
        });
    };
    SurveyInteractionComponent.prototype.setProductDetails = function (product) {
        console.log(product);
        this.productId = product.id;
        this.surveyId = product.surveyId;
        this.interactionForm.patchValue({
            currentQty: product.quantity
        });
    };
    SurveyInteractionComponent.prototype.doBulkUpload = function () {
        var _this = this;
        this.loader.open();
        this.attempts = this.interactionForm.value.qty;
        console.log("attempts : " + this.attempts);
        this.prodService.getProductDetails(this.productId).subscribe(function (successResp) {
            var auths = (_this.productDetails = successResp.content);
            var num = 0;
            for (num = 0; num < _this.attempts; num++) {
                var request = _this.generateRequest(auths[num].authenticationCode);
                console.log(request);
                _this.prodService.authenticate(request).subscribe(function (data) {
                    console.log(".............RESPONSE...........");
                    console.log(data);
                });
            }
            _this.buildFeedBackForm(_this.surveyId, _this.attempts);
            _this.showSurveyInfo(_this.surveyId);
            _this.loader.close();
        }, function (error) {
            _this.loader.close();
            _this.errDialog.showError({
                title: "Error",
                status: error.status,
                type: "http_error"
            });
        });
    };
    SurveyInteractionComponent.prototype.showSurveyInfo = function (id) {
        var _this = this;
        this.surveyService.getSurveyById(id).subscribe(function (data) {
            _this.surveyRecord = data;
        });
    };
    SurveyInteractionComponent.prototype.doFeedBackRequest = function () {
        var _this = this;
        console.log(this.productDetails);
        this.loader.open();
        var surveyID = this.feedbackForm.value.surveyId;
        var attempts = this.feedbackForm.value.qty;
        console.log("SURVEY ID : " + surveyID);
        console.log("ATTEMPTS : " + attempts);
        var num = 0;
        var _loop_1 = function () {
            var rootQuestion = [];
            var questions = this_1.surveyRecord.questions;
            questions.forEach(function (question) {
                _this.surveyService
                    .getAnsTemplateById(question.answerTemplate.id)
                    .subscribe(function (response) {
                    var answerArr = response.answers;
                    var randomAns = answerArr[Math.floor(Math.random() * answerArr.length)];
                    var actAnswer = [];
                    actAnswer.push(randomAns);
                    var questionPart = new QuestionPart(question.id, actAnswer);
                    rootQuestion.push(questionPart);
                    if (questions.length === rootQuestion.length) {
                        console.log("LAUNCHING TIME " + num);
                        var finalReq = new AnswerRequest(_this.productDetails[num].authenticationCode, surveyID, rootQuestion);
                        // console.log(finalReq);
                        console.log(JSON.stringify(finalReq));
                        //let re = JSON.stringify(finalReq);
                        //console.log(JSON.parse(re));
                        _this.surveyService
                            .submitFeedbackAnswers(finalReq)
                            .subscribe(function (data) {
                            console.log("componenet : success");
                        });
                    }
                });
            });
        };
        var this_1 = this;
        for (num = 0; num < attempts; num++) {
            _loop_1();
        }
        this.loader.close();
    };
    SurveyInteractionComponent.prototype.generateRequest = function (authCode) {
        var item = this.cityArrays[Math.floor(Math.random() * this.cityArrays.length)];
        var userItem = this.user.users[Math.floor(Math.random() * this.user.users.length)];
        var ip = Math.floor(Math.random() * 255) +
            1 +
            "." +
            (Math.floor(Math.random() * 255) + 0) +
            "." +
            (Math.floor(Math.random() * 255) + 0) +
            "." +
            (Math.floor(Math.random() * 255) + 0);
        console.log(ip);
        var request = new AuthRequest(authCode, userItem.email, userItem.phone, item.city, item.province, ip);
        return request;
    };
    SurveyInteractionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "app-survey-interaction",
            template: __webpack_require__(/*! ./survey-interaction.component.html */ "./src/app/views/survey/survey-interaction/survey-interaction.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"]
        }),
        __metadata("design:paramtypes", [app_views_product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_4__["ProductCrudService"],
            _survey_service__WEBPACK_IMPORTED_MODULE_8__["SurveyService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"],
            _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_6__["AppLoaderService"],
            _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_7__["AppErrorService"]])
    ], SurveyInteractionComponent);
    return SurveyInteractionComponent;
}());

var AuthRequest = /** @class */ (function () {
    function AuthRequest(authCode, email, mobileNumber, city, province, ip) {
        this.authCode = authCode;
        this.email = email;
        this.mobileNumber = mobileNumber;
        this.city = city;
        this.province = province;
        this.ip = ip;
    }
    return AuthRequest;
}());

var QuestionPart = /** @class */ (function () {
    function QuestionPart(id, answers) {
        this.id = id;
        this.answers = answers;
    }
    return QuestionPart;
}());

var AnswerRequest = /** @class */ (function () {
    function AnswerRequest(authCode, surveyId, questions) {
        this.authCode = authCode;
        this.surveyId = surveyId;
        this.questions = questions;
    }
    return AnswerRequest;
}());



/***/ }),

/***/ "./src/app/views/survey/survey-setting/survey-setting.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/views/survey/survey-setting/survey-setting.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n  <mat-card-title>\r\n    <div class=\"card-title-text\">Feedback Settings</div>\r\n    <mat-divider></mat-divider>\r\n  </mat-card-title>\r\n  <mat-card-content class=\"p-0\">\r\n    <div class=\"text-muted mb-1 m-1 text-left\">\r\n      you can configure your Feedback question answer with adding different options per answer. To setup your predefined answer template,\r\n      navigate to \"Answser template section \" by clicking \"Create Answer template\" button.\r\n    </div>\r\n    <div class=\"profile-actions text-right mb-1\">\r\n      <div class=\"m-333 text-right\">\r\n        <button mat-raised-button (click)=\"openAnswerTemplatePopup({},true)\" class=\"mb-05\" color=\"accent\">Create Answer template</button>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <mat-accordion>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Answer templates\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            View or Edit Predefined Answer template\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <ngx-datatable class=\"material bg-white\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'auto'\"\r\n          [limit]=\"5\" [rows]=\"rows\">\r\n\r\n          <ngx-datatable-column name=\"Template Name\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              {{row?.name}}\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Answer type\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <mat-chip mat-sm-chip *ngIf='row?.answerTemplateType ==\"M\"'   color=\"accent\" [selected]=\"true\" >Multiple Option</mat-chip>\r\n              <mat-chip mat-sm-chip *ngIf='row?.answerTemplateType ==\"S\"'   color=\"primary\" [selected]=\"true\" >Single Option</mat-chip>\r\n              <mat-chip mat-sm-chip *ngIf='row?.answerTemplateType ==\"F\"'   color=\"default\" [selected]=\"true\" >Free Text</mat-chip>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Action\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n              <button mat-icon-button mat-sm-button  [disabled]='row?.answerTemplateType ==\"F\"'  (click)=\"getAnsTemplateById(row.id)\" color=\"primary\" class=\"mr-1\"><mat-icon>edit</mat-icon></button>\r\n              <button mat-icon-button mat-sm-button  [disabled]='row?.answerTemplateType ==\"F\"' (click)=\"deleteAnsTemplate(row)\" color=\"warn\"  class=\"mr-1\" ><mat-icon>delete</mat-icon></button>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n\r\n\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./src/app/views/survey/survey-setting/survey-setting.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/views/survey/survey-setting/survey-setting.component.ts ***!
  \*************************************************************************/
/*! exports provided: SurveySettingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveySettingComponent", function() { return SurveySettingComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _answer_template_popup_answer_template_popup_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../answer-template-popup/answer-template-popup.component */ "./src/app/views/survey/answer-template-popup/answer-template-popup.component.ts");
/* harmony import */ var _survey_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../survey.service */ "./src/app/views/survey/survey.service.ts");
/* harmony import */ var _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/services/app-error/app-error.service */ "./src/app/shared/services/app-error/app-error.service.ts");
/* harmony import */ var _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/services/app-loader/app-loader.service */ "./src/app/shared/services/app-loader/app-loader.service.ts");
/* harmony import */ var _shared_services_app_confirm_app_confirm_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/services/app-confirm/app-confirm.service */ "./src/app/shared/services/app-confirm/app-confirm.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var SurveySettingComponent = /** @class */ (function () {
    function SurveySettingComponent(dialog, surveyService, errDialog, loader, confirmService) {
        this.dialog = dialog;
        this.surveyService = surveyService;
        this.errDialog = errDialog;
        this.loader = loader;
        this.confirmService = confirmService;
        this.defaultAnswerTemplate = {
            name: "Free Text Answer",
            answerTemplateType: "F",
            answers: [{ lable: "", value: 1, optionNumber: 1 }]
        };
    }
    SurveySettingComponent.prototype.ngOnInit = function () {
        this.getAllAnsTemplates();
    };
    SurveySettingComponent.prototype.defaultTemplateCreate = function (templates) {
        var _this = this;
        console.log("passed rows :");
        console.log(templates);
        var result = templates.filter(function (item) { return item.answerTemplateType.indexOf("F") !== -1; });
        if (result.length === 0) {
            console.log("need to create Free text ");
            this.loader.open("Installing Default Settings");
            console.log(this.defaultAnswerTemplate);
            this.surveyService
                .addNewAnsTemplate(this.defaultAnswerTemplate, this.rows)
                .subscribe(function (data) {
                _this.rows = data;
                _this.loader.close();
            }, function (error) {
                _this.loader.close();
                _this.errDialog.showError({
                    title: "Error",
                    status: error.status,
                    type: "http_error"
                });
            });
        }
    };
    SurveySettingComponent.prototype.ngOnDestroy = function () {
        if (this.getAnswersTemplatesSub) {
            this.getAnswersTemplatesSub.unsubscribe();
        }
    };
    SurveySettingComponent.prototype.getAllAnsTemplates = function () {
        var _this = this;
        this.getAnswersTemplatesSub = this.surveyService
            .getAnswerTemplates()
            .subscribe(function (successResp) {
            _this.rows = successResp.content;
            console.log(_this.rows);
            _this.defaultTemplateCreate(_this.rows);
        }, function (error) {
            console.log(error);
            console.log(error.status);
            _this.errDialog.showError({
                title: "Error",
                status: error.status,
                type: "http_error"
            });
        });
    };
    SurveySettingComponent.prototype.openAnswerTemplatePopup = function (data, isNew) {
        var _this = this;
        if (data === void 0) { data = {}; }
        var title = isNew ? "Add New Answer Template " : "Update Answer Template ";
        var dialogRef = this.dialog.open(_answer_template_popup_answer_template_popup_component__WEBPACK_IMPORTED_MODULE_3__["AnswerTemplatePopupComponent"], {
            width: "720px",
            disableClose: true,
            data: { title: title, payload: data }
        });
        dialogRef.afterClosed().subscribe(function (res) {
            if (!res) {
                return;
            }
            _this.loader.open();
            if (isNew) {
                _this.surveyService.addNewAnsTemplate(res, _this.rows).subscribe(function (data) {
                    console.log("response of creation ");
                    console.log(data);
                    _this.rows = data;
                    _this.loader.close();
                }, function (error) {
                    _this.loader.close();
                    _this.errDialog.showError({
                        title: "Error",
                        status: error.status,
                        type: "http_error"
                    });
                });
            }
            else {
                _this.surveyService.updateAnsTemplate(data.id, res).subscribe(function (response) {
                    console.log(response.content);
                    _this.rows = _this.rows.map(function (i) {
                        if (i.id === data.id) {
                            return Object.assign({}, i, response.content);
                        }
                        return i;
                    });
                    _this.loader.close();
                    return _this.rows.slice();
                }, function (error) {
                    _this.loader.close();
                    _this.errDialog.showError({
                        title: "Error",
                        status: error.status,
                        type: "http_error"
                    });
                });
            }
            console.log("input : ");
            console.log(JSON.stringify(res));
        });
    };
    SurveySettingComponent.prototype.deleteAnsTemplate = function (row) {
        var _this = this;
        this.confirmService
            .confirm({ message: "Delete " + row.name + "?" })
            .subscribe(function (res) {
            if (res) {
                _this.loader.open();
                _this.surveyService.removeAnsTemplate(row, _this.rows).subscribe(function (data) {
                    console.log(data);
                    _this.rows = data;
                    _this.loader.close();
                }, function (error) {
                    _this.loader.close();
                    _this.errDialog.showError({
                        title: "Error",
                        status: error.status,
                        type: "http_error"
                    });
                });
            }
        });
    };
    //for the movement unused
    SurveySettingComponent.prototype.getAnsTemplateById = function (id) {
        var _this = this;
        this.surveyService.getAnsTemplateById(id, this.rows).subscribe(function (successResp) {
            console.log("by id response");
            console.log(successResp);
            _this.openAnswerTemplatePopup(successResp);
        }, function (error) {
            _this.errDialog.showError({
                title: "Error",
                status: error.status,
                type: "http_error"
            });
        });
    };
    SurveySettingComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "app-survey-setting",
            template: __webpack_require__(/*! ./survey-setting.component.html */ "./src/app/views/survey/survey-setting/survey-setting.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"]
        }),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
            _survey_service__WEBPACK_IMPORTED_MODULE_4__["SurveyService"],
            _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_5__["AppErrorService"],
            _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_6__["AppLoaderService"],
            _shared_services_app_confirm_app_confirm_service__WEBPACK_IMPORTED_MODULE_7__["AppConfirmService"]])
    ], SurveySettingComponent);
    return SurveySettingComponent;
}());



/***/ }),

/***/ "./src/app/views/survey/survey-table/survey-table.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/views/survey/survey-table/survey-table.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- -------- JA Sprint 1 - MVP -------- -->\r\n<!-- --------- Buddhi Hasanka ---------- -->\r\n\r\n\r\n<mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\">\r\n  <mat-card-title>\r\n    <div class=\"card-title-text\">Feedback Summary</div>\r\n    <mat-divider></mat-divider>\r\n\r\n    <!-- <div class=\"profile-actions text-right mb-1\"> -->\r\n      <div class=\"m-333\">\r\n        <p class=\"mat-select-lable\"> Page Size: </p>\r\n        <mat-select class=\"mat-raised-select\" [(value)]=\"pageSize\" (selectionChange)=\"changeValue()\" placeholder=\"Favorite food\">\r\n          <mat-option [value]=\"10\">10</mat-option>\r\n          <mat-option [value]=\"20\">20</mat-option>\r\n        </mat-select>\r\n        <span fxFlex></span>\r\n        <button mat-raised-button class=\"mb-05\" (click)='openSurveyPopup({},true)' color=\"primary\">Add Feedback</button>\r\n      </div>\r\n    <!-- </div> -->\r\n\r\n\r\n  </mat-card-title>\r\n  <mat-card-content class=\"p-0\">\r\n\r\n    <!-- <ngx-datatable class=\"material fullscreen bg-white\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\r\n      [rowHeight]=\"'auto'\" [limit]=\"5\" [rows]=\"rows\">\r\n      <ngx-datatable-column name=\"Survey Topic\" [minWidth]=\"250\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{row?.topic}}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Survey Type\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <mat-chip mat-sm-chip color=\"primary\" [selected]=\"true\">{{row?.type =='P' ? 'Product' : 'E Vote'}}</mat-chip>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Start Date\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{row?.startDate}}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"End Date\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{row?.endDate}}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Action\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n\r\n          <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutWrap=\"wrap\">\r\n            <div fxFlex.sm=\"33\">\r\n              <button mat-icon-button mat-sm-button (click)='navigateSurveyBuilder(row)' color=\"primary\" class=\"\">\r\n                <mat-icon>view_headline</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div fxFlex.sm=\"33\">\r\n              <button mat-icon-button mat-sm-button (click)='openSurveyPopup(row,false)' color=\"primary\" class=\"\">\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div flex=\"33\">\r\n              <button mat-icon-button mat-sm-button (click)=\"deleteSurvey(row)\" color=\"warn\" class=\"\">\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n    </ngx-datatable> -->\r\n\r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"pl-1\">Feedback Topic</th>\r\n          <th>Feedback Type</th>\r\n          <th>Start Date</th>\r\n          <th>End Date</th>\r\n          <th width=\"150px\" class=\"\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let row of rows;\">\r\n          <td class=\"pt-1 pb-1 pl-1\">{{row?.topic}}</td>\r\n          <td class=\"pt-1 pb-1\">{{row?.type =='P' ? 'Product' : 'E Vote'}}</td>\r\n          <td class=\"pt-1 pb-1\">{{row?.startDate}}</td>\r\n          <td class=\"pt-1 pb-1\">{{row?.endDate}}</td>\r\n          <td class=\"pt-1 pb-1 pr-1\">\r\n            <div class=\"pb-1\">\r\n              <div class=\"col-lg-4 col-sm-4 col-xs-4\">\r\n                <button mat-icon-button mat-sm-button (click)='navigateSurveyBuilder(row)' color=\"primary\" class=\"\">\r\n                  <mat-icon>view_headline</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"col-lg-4 col-sm-4 col-xs-4\">\r\n                <button mat-icon-button mat-sm-button (click)='openSurveyPopup(row,false)' color=\"primary\" class=\"\">\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div class=\"col-lg-4 col-sm-4 col-xs-4\">\r\n                <button mat-icon-button mat-sm-button (click)=\"deleteSurvey(row)\" color=\"warn\" class=\"\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td class=\"pt-1 pb-1 pl-1\">\r\n            <div class=\"pagination\">{{totalRecords}} Total</div>\r\n          </td>\r\n          <td colspan=\"4\">\r\n\r\n            <nav aria-label=\"Page navigation example\">\r\n              <ul class=\"pagination\" *ngIf=\"totalPages.length > 1\">\r\n                <li class=\"page-item\" [ngClass]=\"{'disabled':pageNumber <= 1}\">\r\n                  <a class=\"page-link\" (click)=\"this.getPageSurvey(pageNumber-1);\" aria-label=\"Previous\">\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span class=\"sr-only\">Previous</span>\r\n                  </a>\r\n                </li>\r\n                <li class=\"page-item\" *ngFor=\"let page of totalPages\" [ngClass]=\"{'active':pageNumber === page}\">\r\n                  <a class=\"page-link\" (click)=\"this.getPageSurvey(page);\">\r\n                    {{page}}\r\n                  </a>\r\n                </li>\r\n                <li class=\"page-item\" [ngClass]=\"{'disabled':pageNumber >= totalPages.length}\">\r\n                  <a class=\"page-link\" (click)=\"this.getPageSurvey(pageNumber+1);\" aria-label=\"Next\">\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span class=\"sr-only\">Next</span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n\r\n\r\n          </td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./src/app/views/survey/survey-table/survey-table.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/views/survey/survey-table/survey-table.component.ts ***!
  \*********************************************************************/
/*! exports provided: SurveyTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyTableComponent", function() { return SurveyTableComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
/* harmony import */ var _survey_creation_popup_survey_creation_popup_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../survey-creation-popup/survey-creation-popup.component */ "./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/services/app-loader/app-loader.service */ "./src/app/shared/services/app-loader/app-loader.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _survey_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../survey.service */ "./src/app/views/survey/survey.service.ts");
/* harmony import */ var _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/services/app-error/app-error.service */ "./src/app/shared/services/app-error/app-error.service.ts");
/* harmony import */ var _shared_services_app_confirm_app_confirm_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/services/app-confirm/app-confirm.service */ "./src/app/shared/services/app-confirm/app-confirm.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var SurveyTableComponent = /** @class */ (function () {
    function SurveyTableComponent(dialog, router, surveyService, loader, errDialog, confirmService) {
        this.dialog = dialog;
        this.router = router;
        this.surveyService = surveyService;
        this.loader = loader;
        this.errDialog = errDialog;
        this.confirmService = confirmService;
        // pagination
        this.pageNumber = 1;
        this.pageSize = 10;
        this.totalPages = [];
        this.totalRecords = 0;
    }
    SurveyTableComponent.prototype.ngOnInit = function () {
        this.getAllSurvey();
    };
    SurveyTableComponent.prototype.ngOnDestroy = function () {
        if (this.getSurveysSub) {
            this.getSurveysSub.unsubscribe();
        }
    };
    SurveyTableComponent.prototype.onDetailToggle = function (value) {
        console.log("cliecked : " + value);
    };
    SurveyTableComponent.prototype.openSurveyPopup = function (data, isNew) {
        var _this = this;
        if (data === void 0) { data = {}; }
        var title = isNew ? "Add New Feedback " : "Update Feedback ";
        var dialogRef = this.dialog.open(_survey_creation_popup_survey_creation_popup_component__WEBPACK_IMPORTED_MODULE_2__["SurveyCreationPopupComponent"], {
            width: "720px",
            disableClose: true,
            data: { title: title, payload: data }
        });
        dialogRef.afterClosed().subscribe(function (res) {
            if (!res) {
                return;
            }
            _this.loader.open();
            res.startDate = moment__WEBPACK_IMPORTED_MODULE_6__(res.startDate).format("YYYY-MM-DD");
            res.endDate = moment__WEBPACK_IMPORTED_MODULE_6__(res.endDate).format("YYYY-MM-DD");
            console.log("INPUT : ");
            console.log(JSON.stringify(res));
            if (isNew) {
                _this.surveyService.addNewSurvey(res, _this.rows).subscribe(function (data) {
                    _this.rows = data;
                    console.log("survey response : ");
                    console.log(_this.rows);
                    _this.navigateSurveyBuilder(_this.rows[0]);
                    _this.loader.close();
                }, function (error) {
                    _this.loader.close();
                    _this.errDialog.showError({
                        title: "Error",
                        status: error.status,
                        type: "http_error"
                    });
                });
            }
            else {
                _this.surveyService.updateSurveyPopup(data.id, res).subscribe(function (response) {
                    _this.loader.close();
                    _this.getSurveysSub = _this.surveyService
                        .getAllSurveys()
                        .subscribe(function (successResp) {
                        _this.rows = successResp.content;
                    });
                }, function (error) {
                    _this.loader.close();
                    _this.errDialog.showError({
                        title: "Error",
                        status: error.status,
                        type: "http_error"
                    });
                });
            }
        });
    };
    // --------- BH ----------
    SurveyTableComponent.prototype.getPageSurvey = function (pageNumber) {
        var _this = this;
        if (pageNumber === 1 || (0 < pageNumber && pageNumber <= this.totalPages.length)) {
            this.pageNumber = pageNumber;
            this.getSurveysSub = this.surveyService.getPageSurveys(pageNumber, this.pageSize).subscribe(function (successResp) {
                _this.rows = successResp.content;
                var totalPages = successResp.pagination.totalPages;
                var totalPagesArray = [];
                if (totalPages > 1) {
                    for (var i = 1; i <= totalPages; i++) {
                        totalPagesArray.push(i);
                    }
                }
                _this.totalPages = totalPagesArray;
                _this.totalRecords = successResp.pagination.totalRecords;
            }, function (error) {
                _this.loader.close();
                console.log(error);
                console.log(error.status);
                _this.errDialog.showError({
                    title: "Error",
                    status: error.status,
                    type: "http_error"
                });
            });
        }
    };
    SurveyTableComponent.prototype.changeValue = function () {
        this.pageNumber = 1;
        this.getPageSurvey(this.pageNumber);
    };
    // --------- BH ----------
    SurveyTableComponent.prototype.deleteSurvey = function (row) {
        var _this = this;
        this.confirmService
            .confirm({ message: "Delete " + row.topic + "?" })
            .subscribe(function (res) {
            if (res) {
                _this.loader.open();
                _this.surveyService.removeSurvey(row, _this.rows).subscribe(function (data) {
                    _this.rows = data;
                    _this.loader.close();
                }, function (error) {
                    _this.loader.close();
                    _this.errDialog.showError({
                        title: "Error",
                        status: error.status,
                        type: "http_error"
                    });
                });
            }
        });
    };
    SurveyTableComponent.prototype.getAllSurvey = function () {
        var _this = this;
        this.getSurveysSub = this.surveyService.getAllSurveys().subscribe(function (successResp) {
            _this.rows = successResp.content;
        }, function (error) {
            _this.loader.close();
            _this.errDialog.showError({
                title: "Error",
                status: error.status,
                type: "http_error"
            });
        });
    };
    SurveyTableComponent.prototype.navigateSurveyBuilder = function (res) {
        console.log("navigation method : ");
        console.log(res.questions);
        var extraParam = {
            queryParams: {
                id: res.id,
                name: res.topic,
                type: res.type,
                productId: res.productId,
                voteId: res.voteId,
                startDate: res.startDate,
                endDate: res.endDate,
                questions: JSON.stringify(res.questions)
            }
        };
        this.router.navigate(["surveys/builder_v1"], extraParam);
    };
    SurveyTableComponent.prototype.getTypeValue = function (key) {
        if (!this.typeMap) {
            this.typeMap = new Map();
            this.typeMap.set("P", "Product Survey");
            this.typeMap.set("V", "Evote Survey");
        }
        return this.typeMap.get(key);
    };
    SurveyTableComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: "app-survey-table",
            template: __webpack_require__(/*! ./survey-table.component.html */ "./src/app/views/survey/survey-table/survey-table.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"]
        }),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialog"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _survey_service__WEBPACK_IMPORTED_MODULE_7__["SurveyService"],
            _shared_services_app_loader_app_loader_service__WEBPACK_IMPORTED_MODULE_5__["AppLoaderService"],
            _shared_services_app_error_app_error_service__WEBPACK_IMPORTED_MODULE_8__["AppErrorService"],
            _shared_services_app_confirm_app_confirm_service__WEBPACK_IMPORTED_MODULE_9__["AppConfirmService"]])
    ], SurveyTableComponent);
    return SurveyTableComponent;
}());



/***/ }),

/***/ "./src/app/views/survey/survey.component.html":
/*!****************************************************!*\
  !*** ./src/app/views/survey/survey.component.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n  <div fxFlex=\"100\" fxFlex.gt-md=\"300px\" fxFlex.gt-sm=\"50\">\r\n    <mat-card class=\"profile-sidebar mb-1 pb-0\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/ui_icons/instant-feedback-logo.png\" alt=\"\">\r\n      </div>\r\n      <div class=\"profile-title text-center mb-1\">\r\n        <div class=\"main-title\">Instant Feedback</div>\r\n        <div class=\"subtitle mb-05\">Judi Authentica</div>\r\n        <div class=\"text-muted\"> Provides the tools you need to easily create feedback questions.</div>\r\n      </div>\r\n\r\n      <div class=\"profile-nav\">\r\n        <mat-nav-list>\r\n          <mat-list-item routerLink=\"/surveys/summery\" routerLinkActive=\"list-item-active\">\r\n            <mat-icon>home</mat-icon>\r\n            Feedback Summary\r\n          </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item routerLink=\"/surveys/setting\" routerLinkActive=\"list-item-active\">\r\n            <mat-icon>settings</mat-icon>\r\n            Feedback Settings\r\n          </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item routerLink=\"/surveys/demo\" routerLinkActive=\"list-item-active\">\r\n            <mat-icon>settings</mat-icon>\r\n            Authenticate Demo\r\n          </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n        </mat-nav-list>\r\n      </div>\r\n    </mat-card>\r\n\r\n\r\n\r\n  </div>\r\n\r\n  <!-- Profile Views -->\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.gt-md=\"calc(100% - 300px)\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/views/survey/survey.component.ts":
/*!**************************************************!*\
  !*** ./src/app/views/survey/survey.component.ts ***!
  \**************************************************/
/*! exports provided: SurveyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyComponent", function() { return SurveyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/animations/egret-animations */ "./src/app/shared/animations/egret-animations.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var SurveyComponent = /** @class */ (function () {
    function SurveyComponent() {
    }
    SurveyComponent.prototype.ngOnInit = function () {
    };
    SurveyComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-survey',
            template: __webpack_require__(/*! ./survey.component.html */ "./src/app/views/survey/survey.component.html"),
            animations: _shared_animations_egret_animations__WEBPACK_IMPORTED_MODULE_1__["egretAnimations"]
        }),
        __metadata("design:paramtypes", [])
    ], SurveyComponent);
    return SurveyComponent;
}());



/***/ }),

/***/ "./src/app/views/survey/survey.module.ts":
/*!***********************************************!*\
  !*** ./src/app/views/survey/survey.module.ts ***!
  \***********************************************/
/*! exports provided: SurveyModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyModule", function() { return SurveyModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _survey_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./survey.component */ "./src/app/views/survey/survey.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _survey_routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./survey.routing */ "./src/app/views/survey/survey.routing.ts");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/flex-layout */ "./node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "./node_modules/@swimlane/ngx-datatable/release/index.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _survey_table_survey_table_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./survey-table/survey-table.component */ "./src/app/views/survey/survey-table/survey-table.component.ts");
/* harmony import */ var _survey_setting_survey_setting_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./survey-setting/survey-setting.component */ "./src/app/views/survey/survey-setting/survey-setting.component.ts");
/* harmony import */ var _answer_template_popup_answer_template_popup_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./answer-template-popup/answer-template-popup.component */ "./src/app/views/survey/answer-template-popup/answer-template-popup.component.ts");
/* harmony import */ var _survey_creation_popup_survey_creation_popup_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./survey-creation-popup/survey-creation-popup.component */ "./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.ts");
/* harmony import */ var _survey_builder_survey_builder_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./survey-builder/survey-builder.component */ "./src/app/views/survey/survey-builder/survey-builder.component.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _survey_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./survey.service */ "./src/app/views/survey/survey.service.ts");
/* harmony import */ var _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../product-crud/product-crud.service */ "./src/app/views/product-crud/product-crud.service.ts");
/* harmony import */ var _survey_common_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./survey-common.component */ "./src/app/views/survey/survey-common.component.ts");
/* harmony import */ var _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../evote/evote-service.service */ "./src/app/views/evote/evote-service.service.ts");
/* harmony import */ var _survey_interaction_survey_interaction_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./survey-interaction/survey-interaction.component */ "./src/app/views/survey/survey-interaction/survey-interaction.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




















var SurveyModule = /** @class */ (function () {
    function SurveyModule() {
    }
    SurveyModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_flex_layout__WEBPACK_IMPORTED_MODULE_5__["FlexLayoutModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ReactiveFormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatInputModule"],
                _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["NgxDatatableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialogModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDatepickerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatNativeDateModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatChipsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDividerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatExpansionModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatButtonToggleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatSidenavModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterModule"].forChild(_survey_routing__WEBPACK_IMPORTED_MODULE_4__["SurveyRoute"]),
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_14__["SharedModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatStepperModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatToolbarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDatepickerModule"]
            ],
            declarations: [
                _survey_component__WEBPACK_IMPORTED_MODULE_2__["SurveyComponent"],
                _survey_table_survey_table_component__WEBPACK_IMPORTED_MODULE_9__["SurveyTableComponent"],
                _survey_setting_survey_setting_component__WEBPACK_IMPORTED_MODULE_10__["SurveySettingComponent"],
                _answer_template_popup_answer_template_popup_component__WEBPACK_IMPORTED_MODULE_11__["AnswerTemplatePopupComponent"],
                _survey_creation_popup_survey_creation_popup_component__WEBPACK_IMPORTED_MODULE_12__["SurveyCreationPopupComponent"],
                _survey_builder_survey_builder_component__WEBPACK_IMPORTED_MODULE_13__["SurveyBuilderComponent"],
                _survey_common_component__WEBPACK_IMPORTED_MODULE_17__["SurveyCommonComponent"],
                _survey_interaction_survey_interaction_component__WEBPACK_IMPORTED_MODULE_19__["SurveyInteractionComponent"]
            ],
            entryComponents: [_answer_template_popup_answer_template_popup_component__WEBPACK_IMPORTED_MODULE_11__["AnswerTemplatePopupComponent"], _survey_creation_popup_survey_creation_popup_component__WEBPACK_IMPORTED_MODULE_12__["SurveyCreationPopupComponent"]],
            providers: [_survey_service__WEBPACK_IMPORTED_MODULE_15__["SurveyService"], _product_crud_product_crud_service__WEBPACK_IMPORTED_MODULE_16__["ProductCrudService"], _evote_evote_service_service__WEBPACK_IMPORTED_MODULE_18__["EvoteService"]]
        })
    ], SurveyModule);
    return SurveyModule;
}());



/***/ }),

/***/ "./src/app/views/survey/survey.routing.ts":
/*!************************************************!*\
  !*** ./src/app/views/survey/survey.routing.ts ***!
  \************************************************/
/*! exports provided: SurveyRoute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SurveyRoute", function() { return SurveyRoute; });
/* harmony import */ var _survey_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./survey.component */ "./src/app/views/survey/survey.component.ts");
/* harmony import */ var _survey_table_survey_table_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./survey-table/survey-table.component */ "./src/app/views/survey/survey-table/survey-table.component.ts");
/* harmony import */ var _survey_setting_survey_setting_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./survey-setting/survey-setting.component */ "./src/app/views/survey/survey-setting/survey-setting.component.ts");
/* harmony import */ var _survey_builder_survey_builder_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./survey-builder/survey-builder.component */ "./src/app/views/survey/survey-builder/survey-builder.component.ts");
/* harmony import */ var _survey_interaction_survey_interaction_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./survey-interaction/survey-interaction.component */ "./src/app/views/survey/survey-interaction/survey-interaction.component.ts");





var SurveyRoute = [
    {
        path: "",
        component: _survey_component__WEBPACK_IMPORTED_MODULE_0__["SurveyComponent"],
        children: [
            {
                path: "summery",
                component: _survey_table_survey_table_component__WEBPACK_IMPORTED_MODULE_1__["SurveyTableComponent"],
                data: { title: "Survey Summary", breadcrumb: "Summary" }
            },
            {
                path: "setting",
                component: _survey_setting_survey_setting_component__WEBPACK_IMPORTED_MODULE_2__["SurveySettingComponent"],
                data: { title: "Survey Setting", breadcrumb: "Setting" }
            },
            {
                path: "builder_v1",
                component: _survey_builder_survey_builder_component__WEBPACK_IMPORTED_MODULE_3__["SurveyBuilderComponent"],
                data: { title: "Survey Builder", breadcrumb: "Builder" }
            },
            {
                path: "demo",
                component: _survey_interaction_survey_interaction_component__WEBPACK_IMPORTED_MODULE_4__["SurveyInteractionComponent"],
                data: { title: "Authenticate Demo", breadcrumb: "Demo" }
            }
        ]
    }
];


/***/ })

}]);
//# sourceMappingURL=views-survey-survey-module.js.map