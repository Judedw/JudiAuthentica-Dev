{"version":3,"sources":["webpack:///./src/app/views/interaction-view/interaction-view.component.html","webpack:///./src/app/views/interaction-view/interaction-view.component.ts","webpack:///./src/app/views/interaction-view/interaction-view.module.ts","webpack:///./src/app/views/interaction-view/interaction-view.routing.ts","webpack:///./src/app/views/interaction-view/interaction-view.service.ts"],"names":[],"mappings":"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","file":"views-interaction-view-interaction-view-module.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"interactForm\\\">\\r\\n  <div class=\\\"page-wrap height-100 background-survey-signin\\\" *ngIf=\\\"showLogin\\\">\\r\\n    <div class=\\\"session-form-hold\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"text-center pb-1\\\">\\r\\n            <img src=\\\"assets/images/signin/logo.jpg\\\" alt=\\\"\\\">\\r\\n            <p class=\\\"text-muted m-0\\\">Sign in to your account</p>\\r\\n            <h6 *ngIf=\\\"loginError\\\" class=\\\"m-1 form-error-msg\\\"> Invalid Credentials ! </h6>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"username\\\" matInput placeholder=\\\"Username\\\" value=\\\"\\\" [formControl]=\\\"interactForm.controls['username']\\\"\\r\\n              required name=\\\"username\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" matInput placeholder=\\\"Password\\\" value=\\\"\\\" [formControl]=\\\"interactForm.controls['password']\\\"\\r\\n              required name=\\\"password\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" (click)=\\\"doLog()\\\" [disabled]=\\\"interactForm.invalid\\\">Login\\r\\n            to Survey</button>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\" id=\\\"survey-view-survey\\\" class=\\\"background-survey-form\\\">\\r\\n  <header>\\r\\n    <mat-toolbar fxLayoutAlign=\\\"center center\\\" matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n      <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      </div>\\r\\n      <!-- <mat-card-title class=\\\"example-card-title\\\">Nova Scotia Engineers</mat-card-title> -->\\r\\n      <span class=\\\"example-card-title hidden-xs\\\">Clear Picture</span>\\r\\n      <span class=\\\"example-spacer\\\"></span>\\r\\n      <span *ngIf=\\\"loggedInvitee\\\" class=\\\"example-invite\\\">Hi, {{loggedInvitee}}</span>\\r\\n    </mat-toolbar>\\r\\n  </header>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"survey-page-wrap\\\" *ngIf=\\\"!showLogin\\\">\\r\\n    <div class=\\\"survey-form-hold\\\">\\r\\n      <mat-card id=\\\"finishedSurveyMsg\\\" class=\\\"survey-mat-card\\\">\\r\\n        <mat-card-content>\\r\\n          <h5>The Survey is Previously Submitted </h5>\\r\\n          <h6>Summary is provided bellow</h6>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"survey-mat-card\\\">\\r\\n        <mat-card-content>\\r\\n          <div id=\\\"surveyElement\\\"></div>\\r\\n          <div id=\\\"surveyResult\\\"></div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <mat-card-content>\\r\\n\\r\\n    <div class=\\\"pb-1\\\" style=\\\"text-align: center\\\">\\r\\n      <a id=\\\"btnViewSummary\\\" mat-raised-button class=\\\"mr-1\\\" (click)=\\\"viewSummary()\\\">View Summary</a>\\r\\n      <a id=\\\"btnViewSurvey\\\" mat-raised-button class=\\\"mr-1\\\" (click)=\\\"viewSurvey()\\\">Edit Survey</a>\\r\\n      <a id=\\\"btnSubmitSurvey\\\" mat-raised-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"submitSurvey()\\\">Submit Survey</a>\\r\\n      <a id=\\\"btnAnswerLater\\\" mat-raised-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"answerLater()\\\">Answer Later</a>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </mat-card-content>\\r\\n\\r\\n\\r\\n  <div id=\\\"survey-view-footer\\\">\\r\\n    <div class=\\\"container custom-center\\\">\\r\\n      <span>Powered by</span>\\r\\n      <!-- <img src=\\\"assets/images/cp_logo_text.png\\\" alt=\\\"\\\"> -->\\r\\n      <img src=\\\"assets/images/truverus/TruVerus_Logo_small.png\\\" alt=\\\"\\\">\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<script>\\r\\n  $.material.init();\\r\\n</script>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { egretAnimations } from \"../../shared/animations/egret-animations\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { InteractionViewService } from \"./interaction-view.service\";\r\nimport * as Survey from \"survey-angular\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { AppErrorService } from '../../shared/services/app-error/app-error.service';\r\n\r\n@Component({\r\n  selector: \"app-interaction-view\",\r\n  templateUrl: \"./interaction-view.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class InteractionViewComponent implements OnInit {\r\n  public sub: any;\r\n\r\n  public futureSurveyObj: any;\r\n  public surveyTitle: any;\r\n  public loggedInvitee;\r\n\r\n  public interactionId;\r\n  public surveyId;\r\n\r\n  jsonContent: any;\r\n  pageJson;\r\n\r\n  public showLogin: boolean = false;\r\n  public loginError = false;\r\n  public surveyResultId;\r\n  public isEditable = false;\r\n\r\n  public surveyModel;\r\n  public interactForm: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private interactionViewService: InteractionViewService,\r\n    private fb: FormBuilder,\r\n    private errDialog: AppErrorService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildInteractForm();\r\n    this.interactForm = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", Validators.required]\r\n    });\r\n\r\n    this.sub = this.route.queryParams.subscribe(params => {\r\n      this.interactionId = params[\"interactionId\"];\r\n      this.surveyId = params[\"surveyId\"];\r\n    });\r\n\r\n    localStorage.setItem(\"surveyResultId\", null);\r\n    localStorage.setItem(\"originalResultArray\", null);\r\n\r\n    if (this.interactionId) {\r\n      this.getSurveyData(this.interactionId);\r\n      this.viewInteraction(this.interactionId);\r\n    }\r\n    if (this.surveyId) {\r\n      console.log(\"SURVEY ID : \" + this.surveyId);\r\n      this.retrieveSurvey(this.surveyId);\r\n    }\r\n    console.log(\"NG ON INIT CALLED\");\r\n  }\r\n\r\n  buildInteractForm() {\r\n    this.interactForm = this.fb.group({\r\n      password: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  getSurveyData(interactionId) {\r\n    this.interactionViewService\r\n      .getFutureSurveyResultById(interactionId)\r\n      .subscribe(response => {\r\n        if (response.content.id) {\r\n          localStorage.setItem(\"surveyResultId\", response.content.id);\r\n          localStorage.setItem(\"originalResultArray\", response.content.originalResultArray);\r\n          this.surveyResultId = response.content.id;\r\n        } else {\r\n          console.log(\"------------------------------------------------------\");\r\n          console.log(\"First Time\");\r\n          console.log(\"------------------------------------------------------\");\r\n        }\r\n      },\r\n        error => {\r\n          this.errDialog.showError(error);\r\n        });\r\n  }\r\n\r\n  viewInteraction(interactionId) {\r\n    this.interactionViewService\r\n      .getInteractionById(interactionId)\r\n      .subscribe(response => {\r\n        this.futureSurveyObj = response.content.futureSurvey;\r\n        this.surveyTitle = this.futureSurveyObj.title;\r\n        this.loggedInvitee = response.content.invitee.name;\r\n        console.log(\"LOGGED INSTANCE - \" + this.loggedInvitee);\r\n        this.showLogin = true;\r\n\r\n        console.log(\"ID : \" + this.futureSurveyObj.id);\r\n        console.log(\"title : \" + this.surveyTitle);\r\n        console.log(\"FUTURE SURVEY OBJ\");\r\n      });\r\n  }\r\n\r\n  doLog() {\r\n    console.log(\"CALLED METHOD\");\r\n\r\n    let password = this.interactForm.get(\"password\").value;\r\n    let username = this.interactForm.get(\"username\").value;\r\n\r\n    let fsPart: FSurveyPart = new FSurveyPart(this.futureSurveyObj.id);\r\n    let inviteePart: InviteePart = new InviteePart(username, password);\r\n\r\n    let loginReq: LoginRequest = new LoginRequest(\r\n      this.interactionId,\r\n      inviteePart,\r\n      fsPart\r\n    );\r\n\r\n    console.log(\"Login REQUEST \");\r\n    console.log(loginReq);\r\n\r\n    this.interactionViewService\r\n      .interactLoginPost(loginReq)\r\n      .subscribe(response => {\r\n\r\n        this.showLogin = false;\r\n        this.loginError = false;\r\n\r\n        const loggedInteraction = response;\r\n        console.log(\"LOGGED INTERACTION RESPONSE\");\r\n        console.log(loggedInteraction);\r\n        console.log(loggedInteraction.responStatus);\r\n\r\n        if (loggedInteraction.id !== null) {\r\n          this.showLogin = false;\r\n          localStorage.setItem(\"interactionResponStatus\", loggedInteraction.responStatus);\r\n          this.retrieveSurvey(loggedInteraction.futureSurvey.id);\r\n        } else {\r\n          // could not find a record for password and interaction id\r\n          this.showLogin = true;\r\n          this.loginError = true;\r\n        }\r\n      }, error => {\r\n        // this.errors = error;\r\n        this.loginError = true;\r\n      });\r\n  }\r\n\r\n  retrieveSurvey(surveyId) {\r\n    console.log(\" retrieveSurvey SURVEY ID : \" + surveyId);\r\n\r\n\r\n    this.interactionViewService\r\n      .getFutureSurveyById(surveyId)\r\n      .subscribe(response => {\r\n        this.showLogin = false;\r\n        this.futureSurveyObj = response.content;\r\n        this.jsonContent = JSON.parse(this.futureSurveyObj.jsonContent);\r\n        this.surveyTitle = this.futureSurveyObj.title;\r\n        this.pageJson = JSON.parse(this.jsonContent).pages;\r\n\r\n        if (localStorage.getItem(\"interactionResponStatus\") === '1') {\r\n          document.getElementById('btnViewSummary').style.display = 'none';\r\n          document.getElementById('btnViewSurvey').style.display = 'none';\r\n          document.getElementById('btnSubmitSurvey').style.display = 'none';\r\n          document.getElementById('btnAnswerLater').style.display = 'none';\r\n          this.viewSummary();\r\n        } else {\r\n          this.viewSurvey();\r\n        }\r\n        this.setuptheme();\r\n      },\r\n        error => {\r\n          this.errDialog.showError(error);\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  // ........... Survey Respond view should be re architecturing with following certin Angular techniquees .............\r\n  viewSurvey() {\r\n\r\n    let pageArray: any[] = this.pageJson;\r\n    let resultArray = [];\r\n\r\n    let interactionId = this.interactionId;\r\n    let surveyResultId;\r\n\r\n    let jsonc = JSON.parse(this.jsonContent);\r\n    this.surveyModel = new Survey.Model(jsonc);\r\n\r\n    let lastPage = String(this.surveyModel.pages.length - 1);\r\n    localStorage.setItem(\"onCompleteStatus\", \"onComplete\");\r\n\r\n    Survey.StylesManager.applyTheme(\"bootstrap\");\r\n\r\n    this.surveyModel.onUpdateQuestionCssClasses.add(function (survey, options) {\r\n      var classes = options.cssClasses;\r\n\r\n      if (options.question.getType() === \"rating\") {\r\n        classes.root = \"btn-group\";\r\n        classes.item = \"btn btn-default btn-secondary\";\r\n      }\r\n\r\n      if (options.question.getType() === \"radiogroup\") {\r\n        classes.item = \"sv-q-col-1\";\r\n      }\r\n\r\n      if (options.question.getType() === \"checkbox\") {\r\n        classes.item = \"sv-q-col-1\";\r\n      }\r\n\r\n      if (options.question.getType() === \"matrix\") {\r\n        classes.root = \"table sv_q_matrix\";\r\n      }\r\n\r\n      if (options.question.getType() === \"comment\") {\r\n        classes.root = \"form-control\";\r\n      }\r\n\r\n      if (options.question.getType() === \"dropdown\") {\r\n        classes.control = \"form-control\";\r\n      }\r\n\r\n      if (options.question.getType() === \"text\") {\r\n        classes.root = \"form-control\";\r\n      }\r\n    });\r\n\r\n    document.getElementById('btnViewSummary').style.display = 'none';\r\n    document.getElementById('btnViewSurvey').style.display = 'none';\r\n    document.getElementById('btnSubmitSurvey').style.display = 'none';\r\n    if (interactionId !== undefined) {\r\n      document.getElementById('btnAnswerLater').style.display = 'inline-block';\r\n      this.surveyModel.currentPage = this.surveyModel.pages[localStorage.getItem(\"survey_currentPage_\" + interactionId)];\r\n    } else {\r\n      document.getElementById('btnAnswerLater').style.display = 'none';\r\n    }\r\n\r\n    // .............. ON COMPLET START HERE ..........................\r\n    this.surveyModel.onComplete.add(function (result) {\r\n\r\n      if (interactionId !== undefined && localStorage.getItem(\"onCompleteStatus\") === \"onComplete\") {\r\n        localStorage.setItem(\"survey_currentPage_\" + interactionId, lastPage);\r\n      }\r\n\r\n      localStorage.setItem(\"originalResultArray\", JSON.stringify(result.data));\r\n\r\n      document.getElementById('btnViewSummary').style.display = 'inline-block';\r\n      if (interactionId !== undefined) {\r\n        document.getElementById('btnSubmitSurvey').style.display = 'inline-block';\r\n      } else {\r\n        document.getElementById('btnSubmitSurvey').style.display = 'none';\r\n      }\r\n      document.getElementById('btnViewSurvey').style.display = 'none';\r\n      document.getElementById('btnAnswerLater').style.display = 'none';\r\n\r\n      console.log(\"..............SURVEY ANSWER RESULR/.............\");\r\n      console.log(result);\r\n\r\n      pageArray.forEach(element => {\r\n        // console.log(element.elements);\r\n        element.elements.forEach(element => {\r\n          const elementArray = {};\r\n\r\n          const eleType: string = element.type;\r\n          console.log(\"..........ELEMENT TYPE...........\");\r\n\r\n          console.log(eleType);\r\n          if (eleType != \"html\") {\r\n            const valueArray: any[] = [];\r\n            const qCode = element.qcode;\r\n            if (qCode != null) {\r\n              elementArray[\"type\"] = eleType;\r\n              elementArray[\"qcode\"] = qCode;\r\n\r\n              const answerObj = result.data[element.name];\r\n              if (answerObj != null) {\r\n                // ..... Matrix question answer wrapping section.............\r\n                if (eleType === \"matrix\") {\r\n                  console.log(\"MATRIX ANSWR OB \");\r\n                  for (let answer in answerObj) {\r\n                    valueArray.push(\r\n                      new MatrixBaseTemplate(answer, answerObj[answer])\r\n                    );\r\n                  }\r\n                  elementArray[\"matrixValues\"] = valueArray;\r\n                } else {\r\n                  // ..... Non Matrix question answer wrapping section.............\r\n                  if (answerObj instanceof Array) {\r\n                    answerObj.forEach(ans => {\r\n                      valueArray.push(new ValueTemplate(ans));\r\n                    });\r\n                  } else {\r\n                    valueArray.push(new ValueTemplate(answerObj));\r\n                  }\r\n                  elementArray[\"values\"] = valueArray;\r\n                }\r\n              } else {\r\n                // YS : manage non required answering situations\r\n                if (eleType === \"matrix\") {\r\n                  valueArray.push(new MatrixBaseTemplate(null, null));\r\n                  elementArray[\"matrixValues\"] = valueArray;\r\n                } else {\r\n                  valueArray.push(new ValueTemplate(null));\r\n                  elementArray[\"values\"] = valueArray;\r\n                }\r\n              }\r\n\r\n              resultArray.push(elementArray);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n\r\n      // wrapping up the interaction id and survey answers together\r\n      let submitRequest: FSAnswer = new FSAnswer(interactionId, resultArray, JSON.stringify(result.data));\r\n\r\n      console.log(\"...............ANSWER ARRAY.................\");\r\n      console.log(resultArray);\r\n      console.log(JSON.stringify(resultArray));\r\n\r\n      const interactService: InteractionViewService = new InteractionViewService();\r\n\r\n      if (localStorage.getItem(\"surveyResultId\") !== \"null\") {\r\n\r\n        interactService.updateAnswers(submitRequest, localStorage.getItem('surveyResultId')).subscribe(\r\n          response => {\r\n            console.log(\"SUCCESS\");\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(\"ERROR\");\r\n            console.log(error);\r\n          }\r\n        );\r\n\r\n      } else {\r\n\r\n        interactService.submitAnswers(submitRequest).subscribe(\r\n          response => {\r\n            console.log(\"SUCCESS\");\r\n            localStorage.setItem(\"surveyResultId\", response.id);\r\n            localStorage.setItem(\"originalResultArray\", response.originalResultArray);\r\n          },\r\n          error => {\r\n            console.log(\"ERROR\");\r\n            console.log(error);\r\n          }\r\n        );\r\n\r\n      }\r\n\r\n\r\n      let thankYouMsg =\r\n        '<div class=\"sv_main sv_bootstrap_css\">' +\r\n        \"<form>\" +\r\n        '<div class=\"sv_container\">' +\r\n        '<div class=\"sv_body sv_completed_page\">' +\r\n        '<h3>The Survey is Completed, Click Submit Survey to Finish!</h3>' +\r\n        '</div>' +\r\n        '</div>' +\r\n        '</form>' +\r\n        '</div>';\r\n\r\n      document.getElementById(\"surveyElement\").innerHTML = thankYouMsg;\r\n\r\n    });\r\n\r\n    // ................. ON COMPLETE END HERE .........\r\n\r\n    if (localStorage.getItem(\"surveyResultId\") !== \"null\") {\r\n      this.surveyModel.data = JSON.parse(localStorage.getItem(\"originalResultArray\"));\r\n    }\r\n\r\n    Survey.SurveyNG.render(\"surveyElement\", { model: this.surveyModel });\r\n\r\n  }\r\n\r\n  viewSummary() {\r\n\r\n    document.getElementById('btnViewSummary').style.display = 'none';\r\n    if (localStorage.getItem(\"interactionResponStatus\") === '0' && this.interactionId !== undefined) {\r\n      document.getElementById('btnViewSurvey').style.display = 'inline-block';\r\n    } else if (localStorage.getItem(\"interactionResponStatus\") === '1') {\r\n      document.getElementById('finishedSurveyMsg').style.display = 'block';\r\n      document.getElementById('btnViewSurvey').style.display = 'none';\r\n      // document.getElementById('btnAnswerLater').style.display = 'none';\r\n      // document.getElementById('btnSubmitSurvey').style.display = 'none';\r\n    }\r\n\r\n    let jsonc = JSON.parse(this.jsonContent);\r\n\r\n    jsonc.title = \"Summary of \" + jsonc.title;\r\n\r\n    this.surveyModel = new Survey.Model(jsonc);\r\n\r\n    Survey.StylesManager.applyTheme(\"bootstrap\");\r\n\r\n    this.surveyModel.onUpdateQuestionCssClasses.add(function (survey, options) {\r\n      var classes = options.cssClasses;\r\n\r\n      if (options.question.getType() === \"rating\") {\r\n        classes.root = \"btn-group\";\r\n        classes.item = \"btn btn-default btn-secondary\";\r\n      }\r\n\r\n      if (options.question.getType() === \"radiogroup\") {\r\n        classes.item = \"sv-q-col-1\";\r\n      }\r\n\r\n      if (options.question.getType() === \"checkbox\") {\r\n        classes.item = \"sv-q-col-1\";\r\n      }\r\n\r\n      if (options.question.getType() === \"matrix\") {\r\n        classes.root = \"table sv_q_matrix\";\r\n      }\r\n\r\n      if (options.question.getType() === \"comment\") {\r\n        classes.root = \"form-control\";\r\n      }\r\n\r\n      if (options.question.getType() === \"dropdown\") {\r\n        classes.control = \"form-control\";\r\n      }\r\n\r\n      if (options.question.getType() === \"text\") {\r\n        classes.root = \"form-control\";\r\n      }\r\n    });\r\n\r\n    this.surveyModel.data = JSON.parse(localStorage.getItem(\"originalResultArray\"));\r\n    this.surveyModel.mode = 'display';\r\n\r\n    Survey.SurveyNG.render(\"surveyElement\", { model: this.surveyModel });\r\n\r\n  }\r\n\r\n  // Save current answers to DB. Also current page number save to \"localStorage\" with current \"interactionId\".\r\n  answerLater() {\r\n    localStorage.setItem(\"onCompleteStatus\", \"answerLater\");\r\n    localStorage.setItem(\"survey_currentPage_\" + this.interactionId, this.surveyModel.currentPageNo);\r\n    this.surveyModel.doComplete();\r\n\r\n    let answerLaterMsg =\r\n      '<div class=\"sv_main sv_bootstrap_css\">' +\r\n      '<form>' +\r\n      '<div class=\"sv_container\">' +\r\n      '<div class=\"sv_body sv_completed_page\">' +\r\n      '<h3>You are Attempting to Answer Later to the Survey!</h3>' +\r\n      '</div>' +\r\n      '</div>' +\r\n      '</form>' +\r\n      '</div>';\r\n\r\n    document.getElementById(\"surveyElement\").innerHTML = answerLaterMsg;\r\n\r\n  }\r\n\r\n  submitSurvey() {\r\n    const interactService: InteractionViewService = new InteractionViewService();\r\n    interactService.submitSurvey(this.interactionId).subscribe(\r\n      response => {\r\n        console.log(\"SUCCESS\");\r\n        console.log(response);\r\n\r\n        localStorage.setItem(\"interactionResponStatus\", response.content.responStatus);\r\n\r\n        let submitMsg =\r\n          '<div class=\"sv_main sv_bootstrap_css\">' +\r\n          '<form>' +\r\n          '<div class=\"sv_container\">' +\r\n          '<div class=\"sv_body sv_completed_page\">' +\r\n          '<h3>Thank You </br> You have finished the Survey</h3>' +\r\n          '</div>' +\r\n          '</div>' +\r\n          '</form>' +\r\n          '</div>';\r\n\r\n        document.getElementById(\"surveyElement\").innerHTML = submitMsg;\r\n\r\n        document.getElementById('btnSubmitSurvey').style.display = 'none';\r\n        document.getElementById('btnViewSummary').style.display = 'inline-block';\r\n        document.getElementById('btnViewSurvey').style.display = 'none';\r\n      },\r\n      error => {\r\n        console.log(\"ERROR\");\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  setuptheme() {\r\n    const mainColor = \"#0684C0\";\r\n    const mainHoverColor = \"#5DAAD2\";\r\n    const textColor = \"#4a4a4a\";\r\n    const headerColor = \"#b7b7b7\";\r\n    const headerBackgroundColor = \"#000000\";\r\n    const bodyContainerBackgroundColor = \"#f8f8f8\";\r\n\r\n    const defaultThemeColorsSurvey =\r\n      Survey.StylesManager.ThemeColors[\"default\"];\r\n    defaultThemeColorsSurvey[\"$main-color\"] = mainColor;\r\n    defaultThemeColorsSurvey[\"$main-hover-color\"] = mainHoverColor;\r\n    defaultThemeColorsSurvey[\"$text-color\"] = textColor;\r\n    defaultThemeColorsSurvey[\"$header-color\"] = headerColor;\r\n    defaultThemeColorsSurvey[\r\n      \"$header-background-color\"\r\n    ] = headerBackgroundColor;\r\n    defaultThemeColorsSurvey[\r\n      \"$body-container-background-color\"\r\n    ] = bodyContainerBackgroundColor;\r\n\r\n    Survey.StylesManager.applyTheme();\r\n  }\r\n}\r\n\r\nexport class LoginRequest {\r\n  constructor(public id, public invitee, public futureSurvey: any) { }\r\n}\r\n\r\nexport class FSurveyPart {\r\n  constructor(public id) { }\r\n}\r\n\r\nexport class InviteePart {\r\n  constructor(public username, public password: string) { }\r\n}\r\n\r\nexport class ValueTemplate {\r\n  constructor(public value: any) { }\r\n}\r\n\r\nexport class MatrixBaseTemplate {\r\n  constructor(public rowValue, public columnValue: any) { }\r\n}\r\n\r\nexport class FSAnswer {\r\n  constructor(public interactionId: any, public futureSurveyAnswers: any, public originalResultArray: any) { }\r\n}\r\n","import { NgModule, Injector } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { InteractionViewComponent } from \"./interaction-view.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { InteractionViewRoute } from \"./interaction-view.routing\";\r\nimport { MatCardModule, MatToolbarModule, MatFormFieldModule, MatInputModule, MatButtonModule } from \"@angular/material\";\r\nimport { InteractionViewService } from \"./interaction-view.service\";\r\nimport { FutureSurveyService } from '../future-survey/future-survey.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nexport let InjectorInstance2: Injector;\r\n\r\n@NgModule({\r\n  declarations: [InteractionViewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    RouterModule.forChild(InteractionViewRoute)\r\n  ],\r\n  providers: [InteractionViewService, FutureSurveyService]\r\n})\r\nexport class InteractionViewModule {\r\n  constructor(private injector: Injector) {\r\n    InjectorInstance2 = this.injector;\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { InteractionViewComponent } from './interaction-view.component';\r\n;\r\n\r\n\r\nexport const InteractionViewRoute: Routes = [\r\n  {\r\n    path: 'viewInteraction',\r\n    component: InteractionViewComponent,\r\n    data: { title: 'Interaction View', breadcrumb: 'Interaction View' }\r\n  }\r\n];\r\n","import {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"../../../environments/environment.prod\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { InjectorInstance2 } from \"./interaction-view.module\";\r\n\r\n@Injectable()\r\nexport class InteractionViewService {\r\n  surveyApiUrl: string = environment.surveyApiURL;\r\n  private http: HttpClient;\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n\r\n  constructor() {\r\n    this.http = InjectorInstance2.get<HttpClient>(HttpClient);\r\n  }\r\n\r\n  getInteractionById(interactionId): Observable<any> {\r\n    return this.http\r\n      .get<any>(\r\n        this.surveyApiUrl + \"surveys/futureSurveyInteraction/\" + interactionId\r\n      )\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getFutureSurveyById(surveyId): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurvey/\" + surveyId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getFutureSurveyResultById(interactionId): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyAnswer/\" + interactionId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    return throwError(error);\r\n  }\r\n\r\n\r\n  submitAnswers(requestBody): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyAnswer\", requestBody)\r\n      .pipe(\r\n        map(data => {\r\n          console.log(data);\r\n          return data.content;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  updateAnswers(requestBody, id): Observable<any> {\r\n\r\n    console.log(\"-----------------------------------------------------\");\r\n    console.log(id);\r\n    console.log(\"-----------------------------------------------------\");\r\n    \r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyAnswer/\" + id, requestBody)\r\n      .pipe(\r\n        map(data => {\r\n          console.log(data);\r\n          return data.content;\r\n        }),\r\n        catchError(this.handleError));\r\n  }\r\n\r\n  submitSurvey(id): Observable<any> {\r\n\r\n    console.log(\"-----------------------------------------------------\");\r\n    console.log(id);\r\n    console.log(\"-----------------------------------------------------\");\r\n    \r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyInteractionStatusChange/\" + id,\"Completed\")\r\n      .pipe(\r\n        map(data => {\r\n          console.log(data);\r\n          return data;\r\n        }),\r\n        catchError(this.handleError));\r\n\r\n  }\r\n\r\n  interactLogin(loginReq) {\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyInteraction/login/\" + loginReq.password)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  interactLoginPost(loginReq) {\r\n    return this.http\r\n      .post<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyInteraction/login/\", loginReq)\r\n      .pipe(\r\n        map(data => {\r\n          console.log(data);\r\n          return data.content;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}