{"version":3,"sources":["webpack:///./src/app/model/ClientModel.model.ts","webpack:///./src/app/shared/animations/egret-animations.ts","webpack:///./src/app/views/user/user.module.ts","webpack:///./src/app/views/user/user.routing.ts","webpack:///./src/app/views/user/user.service.ts","webpack:///./src/app/views/user/users/user-table-popup/user-table-popup.component.html","webpack:///./src/app/views/user/users/user-table-popup/user-table-popup.component.ts","webpack:///./src/app/views/user/users/user-table.component.html","webpack:///./src/app/views/user/users/user-table.component.ts"],"names":[],"mappings":"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","file":"views-user-user-module.js","sourcesContent":["export class Content{\r\n    constructor(public id:string, public name:string){}\r\n}\r\n\r\nexport interface Clients{\r\n    status: string;\r\n    statusCode: string;\r\n    content: Content[];\r\n}\r\n\r\nexport class ClientCreateReq {\r\n    constructor(\r\n      public name: string,\r\n      public description: string,\r\n      public users: any[]\r\n    ) { }\r\n  }\r\n  \r\n  export class ClientUpdateReq {\r\n    constructor(\r\n      public name: string,\r\n      public description: string\r\n    ) { }\r\n  }\r\n  \r\n  export class UserData {\r\n    constructor(\r\n      public userName: string,\r\n      public email: string\r\n    ) { }\r\n  }\r\n\r\nexport class UserCreateReq {\r\n    constructor(\r\n      public userName: string,\r\n      public password: string,\r\n      public email: string,\r\n      public roles: any[],\r\n      public client: ClientData,\r\n    ) { }\r\n  }\r\n  \r\n  export class ClientData {\r\n    constructor(\r\n      public id: string\r\n    ) { }\r\n  }\r\n  \r\n  export class UserRole {\r\n    constructor(\r\n      public id: string\r\n    ) { }\r\n  }\r\n  \r\n  export class profileUpdateReq {\r\n    constructor(\r\n      public userName: string,\r\n      public password: string,\r\n      public email: string\r\n    ) { }\r\n  }","import {\r\n\tsequence,\r\n\ttrigger,\r\n\tanimate,\r\n\tstyle,\r\n\tgroup,\r\n\tquery,\r\n\ttransition,\r\n\tanimateChild,\r\n\tstate,\r\n\tanimation,\r\n\tuseAnimation,\r\n\tstagger\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation([\r\n\tstyle({\r\n\t\topacity: '{{opacity}}',\r\n\t\ttransform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\r\n\t}),\r\n\tanimate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\r\n], {\r\n\t\tparams: {\r\n\t\t\tduration: '200ms',\r\n\t\t\tdelay: '0ms',\r\n\t\t\topacity: '0',\r\n\t\t\tscale: '1',\r\n\t\t\tx: '0',\r\n\t\t\ty: '0',\r\n\t\t\tz: '0'\r\n\t\t}\r\n\t});\r\n\r\nexport const egretAnimations = [\r\n\ttrigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\ntrigger('fadeInOut', [\r\n\tstate('0', style({\r\n\t\t\topacity: 0,\r\n\t\t\tdisplay  : 'none'\r\n\t})),\r\n\tstate('1', style({\r\n\t\t\topacity: 1,\r\n\t\t\tdisplay  : 'block'\r\n\t})),\r\n\ttransition('0 => 1', animate('300ms')),\r\n\ttransition('1 => 0', animate('300ms'))\r\n]),\r\n]","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { \r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatButtonModule,\r\n  MatChipsModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatSlideToggleModule,\r\n  MatToolbarModule,\r\n  MatSelectModule\r\n } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { UserTableComponent } from './users/user-table.component';\r\n\r\nimport { UserRoutes } from './user.routing';\r\nimport { UserService } from './user.service';\r\nimport { UserTablePopupComponent } from './users/user-table-popup/user-table-popup.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatSlideToggleModule,\r\n    SharedModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    RouterModule.forChild(UserRoutes)\r\n  ],\r\n  declarations: [UserTableComponent, UserTablePopupComponent],\r\n  providers: [UserService],\r\n  entryComponents: [UserTablePopupComponent]\r\n})\r\nexport class UserModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { UserTableComponent } from './users/user-table.component';\r\n\r\nexport const UserRoutes: Routes = [\r\n  { \r\n    path: 'user-table', \r\n    component: UserTableComponent, \r\n    data: { title: 'User Section', breadcrumb: 'User' } \r\n  }\r\n];","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map, tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment.prod\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  clientUrl: string = environment.userApiUrl + \"clients\";\r\n  userUrl: string = environment.userApiUrl + \"platform-users\";\r\n  roleUrl: string = environment.userApiUrl + \"platform-user-roles\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getUsers(id): Observable<any> {\r\n    return this.http.get(this.clientUrl+\"/\"+id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getRoles(): Observable<any> {\r\n    return this.http.get(this.roleUrl + \"/suggestions\").pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addUser(item): Observable<any> {\r\n    return this.http.post<any>(this.userUrl, item).pipe(\r\n      map(data => {\r\n        console.log(data);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateUser(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userUrl +\"/\"+ id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    console.log(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"username\\\" [formControl]=\\\"itemForm.controls['username']\\\" placeholder=\\\"User Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\" *ngIf=\\\"formStatus\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"password\\\" type=\\\"password\\\" [formControl]=\\\"itemForm.controls['password']\\\"\\r\\n            positiveNumberAndLetterOnly placeholder=\\\"Password\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"email\\\" [formControl]=\\\"itemForm.controls['email']\\\" placeholder=\\\"Email\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [formControl]=\\\"itemForm.controls['role']\\\" placeholder=\\\"Select A User Role\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let roles of roles\\\" [value]=\\\"roles.id\\\">{{roles.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-table-popup',\r\n  templateUrl: './user-table-popup.component.html'\r\n})\r\nexport class UserTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  public roles: any[];\r\n  public formStatus = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<UserTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload);\r\n    console.log(this.data.payload);\r\n    console.log(this.data.roles);\r\n\r\n    this.roles = this.data.roles;\r\n\r\n  }\r\n\r\n  buildItemForm(item) {\r\n\r\n    let role = null;\r\n    if (item.id === undefined) {\r\n      this.formStatus = true;\r\n    } else {\r\n      role = item.roles[0].id;\r\n    }\r\n    \r\n    this.itemForm = this.fb.group({\r\n      username: new FormControl(item.userName || '', Validators.required),\r\n      email: new FormControl(item.email || '', [Validators.required, Validators.email]),\r\n      password: new FormControl(item.password || '', Validators.required),\r\n      role: new FormControl(role, Validators.required)\r\n    })\r\n\r\n    if (item.id !== undefined) {\r\n      this.itemForm.get('password').clearValidators();\r\n      this.itemForm.get('password').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n    <mat-card-title>\\r\\n      <div class=\\\"card-title-text\\\">Users</div>\\r\\n      <mat-divider></mat-divider>\\r\\n      <div class=\\\"sub_table_header\\\">{{this.name}}</div>\\r\\n      <mat-divider></mat-divider>\\r\\n  \\r\\n      <div class=\\\"m-333\\\">\\r\\n        <button mat-raised-button class=\\\"mb-05 ml-05\\\" color=\\\"primary\\\" (click)=\\\"openPopUp({}, true)\\\">Add User</button>\\r\\n        <span fxFlex></span>\\r\\n        <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n        <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\">\\r\\n          <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n          <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n        </mat-select>\\r\\n      </div>\\r\\n  \\r\\n  \\r\\n    </mat-card-title>\\r\\n    <mat-card-content class=\\\"p-0\\\">\\r\\n  \\r\\n      <ngx-datatable class=\\\"material ml-0 mr-0\\\" [rows]=\\\"users\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\r\\n        [footerHeight]=\\\"50\\\" [limit]=\\\"10\\\" [rowHeight]=\\\"'auto'\\\">\\r\\n        <ngx-datatable-column name=\\\"Name\\\" [flexGrow]=\\\"1\\\">\\r\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n            {{ row?.userName }}\\r\\n          </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n  \\r\\n        <ngx-datatable-column name=\\\"Email\\\" [flexGrow]=\\\"1\\\">\\r\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n            {{ row?.email }}\\r\\n          </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n  \\r\\n        <ngx-datatable-column name=\\\"Role\\\" [flexGrow]=\\\"1\\\">\\r\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n            <mat-chip mat-sm-chip color=\\\"warn\\\" [selected]=\\\"true\\\">{{row?.roles[0].name}}</mat-chip>\\r\\n          </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n  \\r\\n        <ngx-datatable-column name=\\\"Status\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"150\\\">\\r\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n            <mat-chip mat-sm-chip color=\\\"{{statusArray[row?.status]}}\\\" [selected]=\\\"true\\\">{{row?.status}}</mat-chip>\\r\\n          </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n  \\r\\n  \\r\\n        <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\" [maxWidth]=\\\"200\\\">\\r\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n            <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openPopUp(row)\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            <!-- <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteItem(row)\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button> -->\\r\\n          </ng-template>\\r\\n        </ngx-datatable-column>\\r\\n      </ngx-datatable>\\r\\n  \\r\\n    </mat-card-content>\\r\\n  </mat-card>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { UserService } from \"../user.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { UserTablePopupComponent } from \"./user-table-popup/user-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { UserCreateReq, ClientData, UserRole } from \"app/model/ClientModel.model\";\r\n\r\n@Component({\r\n  selector: \"app-user-table\",\r\n  templateUrl: \"./user-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class UserTableComponent implements OnInit, OnDestroy {\r\n  \r\n  public clientId;\r\n  public users: any[];\r\n  public roles: any[];\r\n  public statusArray = {\r\n    'Active': \"primary\",\r\n    'Deactive': \"accent\"\r\n  };\r\n  public pageSize = 10;\r\n  public name;\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private userService: UserService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.clientId = \"faa6643aca8c5318a9583178795542cf\";\r\n    this.name = 'Adida';\r\n\r\n    this.getUsers();\r\n    this.getUserRoles();\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getUsers() {\r\n    this.getItemSub = this.userService.getUsers(this.clientId).subscribe(successResp => {\r\n\r\n      successResp.content.users.forEach((user, index) => {\r\n        user.roles.forEach((role) => {\r\n          if (role.name === \"Admin\") successResp.content.users.splice(index, 1);\r\n        });\r\n      });\r\n      this.users = successResp.content.users;\r\n\r\n    },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserRoles() {\r\n    this.getItemSub = this.userService.getRoles().subscribe(successResp => {\r\n\r\n      successResp.content.forEach((item, index) => {\r\n        if (item.name === \"Super Administrator\" || item.name === \"Admin\") successResp.content.splice(index, 1);\r\n      });\r\n      this.roles = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n\r\n    let title = isNew ? \"Add new User\" : \"Update User\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      UserTablePopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, roles: this.roles }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n\r\n      let roles: UserRole[] = [];\r\n      roles.push(new UserRole(res.role));\r\n      const client: ClientData = new ClientData(this.clientId);\r\n      const req: UserCreateReq = new UserCreateReq(res.username, res.password, res.email, roles, client);\r\n\r\n      this.loader.open();\r\n      if (isNew) {\r\n\r\n        this.userService.addUser(req).subscribe(\r\n          response => {\r\n            this.getUsers();\r\n            this.loader.close();\r\n            this.snack.open(\"New client added !\", \"OK\", { duration: 4000 });\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.userService.updateUser(data.id, req).subscribe(\r\n          response => {\r\n            this.getUsers();\r\n            this.loader.close();\r\n            this.snack.open(\"Client Updated!\", \"OK\", { duration: 4000 });\r\n            // return this.users.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}