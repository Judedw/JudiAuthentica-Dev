{"version":3,"sources":["webpack:///./src/app/model/ClientModel.model.ts","webpack:///./src/app/views/cruds/crud.service.ts"],"names":[],"mappings":"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","file":"default~views-evote-evote-module~views-future-survey-future-survey-module~views-interaction-view-int~e28357a9.js","sourcesContent":["export class Content {\r\n  constructor(public id: string, public name: string) { }\r\n}\r\n\r\nexport interface Clients {\r\n  status: string;\r\n  statusCode: string;\r\n  content: Content[];\r\n}\r\n\r\nexport class ClientCreateReq {\r\n  constructor(\r\n    public name: string,\r\n    public description: string,\r\n    public clientLogo: string,\r\n    public users: UserData[],\r\n    public categories: CategoryData[],\r\n    public license: ClientLicenseData\r\n  ) { }\r\n}\r\n\r\nexport class ClientLicenseData {\r\n  constructor(\r\n    public tagCount: number,\r\n    public userCount: number,\r\n    public communityCount: number,\r\n    public feedbackCount: number,\r\n    public eventCount: number,\r\n    public promoCount: number\r\n  ) { }\r\n}\r\n\r\nexport class ClientUpdateReq {\r\n  constructor(\r\n    public name: string,\r\n    public description: string,\r\n    public clientLogo: string,\r\n    public primaryContactNo: string,\r\n    public addressLine1: string,\r\n    public addressLine2: string,\r\n    public city: string,\r\n    public state: string,\r\n    public zipCode: string,\r\n    public country: CountryData\r\n  ) { }\r\n}\r\n\r\nexport class CountryData {\r\n  constructor(\r\n    public id: string,\r\n    // public name: string,\r\n    // public code: string\r\n  ) { }\r\n}\r\n\r\nexport class UserData {\r\n  constructor(\r\n    public accountName: string,\r\n    public email: string,\r\n    public role: AdminRoleData,\r\n  ) { }\r\n}\r\n\r\nexport class AdminRoleData {\r\n  constructor(\r\n    public name: string,\r\n    public description: string,\r\n    public authorities: AuthorityData[],\r\n  ) { }\r\n}\r\n\r\nexport class AuthorityData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class UserCreateReq {\r\n  constructor(\r\n    public accountName: string,\r\n    public password: string,\r\n    public email: string,\r\n    public role: RoleData,\r\n    public client: ClientData,\r\n    public communities: CommunityData[],\r\n    public categories: CategoryData[],\r\n  ) { }\r\n}\r\n\r\nexport class UserUpdateReq {\r\n  constructor(\r\n    public accountName: string,\r\n    public email: string,\r\n    public role: RoleData,\r\n    public status : string\r\n  ) { }\r\n}\r\n\r\nexport class UserCategoryUpdateReq {\r\n  constructor(\r\n    public categories: CategoryData[]\r\n  ) { }\r\n}\r\n\r\nexport class UserCommunityUpdateRequest {\r\n  constructor(\r\n    public communities: CommunityData[]\r\n  ) { }\r\n}\r\n\r\n// export class UserCategoryUpdateReq {\r\n//   constructor(\r\n//     public accountName: string,\r\n//     public email: string,\r\n//     public role: RoleData,\r\n//     public categories: CategoryData[]\r\n//   ) { }\r\n// }\r\n\r\nexport class ClientCategoryUpdateReq {\r\n  constructor(\r\n    public categories: CategoryData[]\r\n  ) { }\r\n}\r\n\r\nexport class ClientData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class LicenseUpdateReq {\r\n  constructor(\r\n    public tagCount: number,\r\n    public userCount: number,\r\n    public communityCount: number,\r\n    public feedbackCount: number,\r\n    public eventCount: number,\r\n    public promoCount: number,\r\n    public client: ClientData,\r\n  ) { }\r\n}\r\n\r\nexport class RoleData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class CommunityData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class CategoryData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class LicenseUpdateRequest {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class profileUpdateReq {\r\n  constructor(\r\n    public id: string,\r\n    public accountName: string,\r\n    public email: string,\r\n  ) { }\r\n}\r\n\r\nexport class passwordUpdateReq {\r\n  constructor(\r\n    public id: string,\r\n    public password: string,\r\n    public newPassword: string,\r\n  ) { }\r\n}\r\n\r\nexport class userImageReq {\r\n  constructor(\r\n    public id: string,\r\n    public imageContent: string,\r\n    public profileImage: string,\r\n  ) { }\r\n}\r\n\r\nexport interface autoCompletableCategory {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface roleAuthority {\r\n  id: string;\r\n  name: string;\r\n  code: string;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { UserDB } from \"../../shared/fake-db/users\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map, tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment.prod\";\r\n\r\nimport { Clients, Content } from \"../../model/ClientModel.model\";\r\n\r\n@Injectable()\r\nexport class CrudService {\r\n  clientApiUrl: string = environment.userApiUrl + \"clients/\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(this.clientApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getClientSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get<string>(this.clientApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addItem(item, items: any[]): Observable<any> {\r\n    return this.http.post<any>(this.clientApiUrl, item, this.httpOptions).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateItem(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientApiUrl + id, item, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeItem(id): Observable<any> {\r\n    return this.http\r\n      .delete(this.clientApiUrl + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  search(\r\n    filter: { name: string } = { name: \"\" },\r\n    page = 1\r\n  ): Observable<Clients> {\r\n    return this.http.get<Clients>(this.clientApiUrl + \"suggestions\").pipe(\r\n      tap((response: Clients) => {\r\n        response.content = response.content\r\n          .map(content => new Content(content.id, content.name))\r\n\r\n          .filter(content =>\r\n            content.name.toLocaleLowerCase().includes(filter.name)\r\n          );\r\n\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getClientById(clientId): Observable<any> {\r\n    console.log(\"called get client by id\");\r\n    return this.http\r\n      .get<any>(this.clientApiUrl + clientId, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getImageById(url) : Observable<Blob>{\r\n    return this.http.get(url,{responseType : 'blob'});\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    console.log(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n"],"sourceRoot":""}