{"version":3,"sources":["webpack:///./src/app/directives/DateValidator.directive.ts","webpack:///./src/app/model/ClientModel.model.ts","webpack:///./src/app/views/cruds/crud.service.ts","webpack:///./src/app/views/product-crud/product-crud-common.component.ts","webpack:///./src/app/views/product-crud/product-crud.module.ts","webpack:///./src/app/views/product-crud/product-crud.routing.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.ts"],"names":[],"mappings":"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","file":"views-product-crud-product-crud-module.js","sourcesContent":["import { Directive, ElementRef, Renderer, OnInit } from '@angular/core';\r\nimport { min } from \"date-fns\";\r\n\r\n@Directive({\r\n  selector: \"[dateValidator]\"\r\n})\r\nexport class DateValidator implements OnInit {\r\n  constructor(private el: ElementRef, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.renderer.setElementProperty(\r\n      this.el.nativeElement,\r\n      \"[min]\",\r\n      this.dateValidate()\r\n    );\r\n  }\r\n\r\n  dateValidate() {\r\n    console.log(\"date validator\");\r\n    const today =  new Date();\r\n    const tomorrow =  new Date(today.setDate(today.getDate() + 1));\r\n    console.log(today)\r\n    console.log(tomorrow)\r\n    return tomorrow;\r\n  }\r\n\r\n\r\n}\r\n","export class Content{\r\n    constructor(public id:string, public name:string){}\r\n}\r\n\r\nexport interface Clients{\r\n    status: string;\r\n    statusCode: string;\r\n    content: Content[];\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { UserDB } from \"../../shared/fake-db/users\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map, tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment.prod\";\r\n\r\nimport { Clients, Content } from \"../../model/ClientModel.model\";\r\n\r\n@Injectable()\r\nexport class CrudService {\r\n  clientApiUrl: string = environment.productApiURL + \"clients/\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(this.clientApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getClientSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get<string>(this.clientApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addItem(item, items: any[]): Observable<any> {\r\n    return this.http.post<any>(this.clientApiUrl, item, this.httpOptions).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateItem(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientApiUrl + id, item, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeItem(id): Observable<any> {\r\n    return this.http\r\n      .delete(this.clientApiUrl + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  search(\r\n    filter: { name: string } = { name: \"\" },\r\n    page = 1\r\n  ): Observable<Clients> {\r\n    return this.http.get<Clients>(this.clientApiUrl + \"suggestions\").pipe(\r\n      tap((response: Clients) => {\r\n        response.content = response.content\r\n          .map(content => new Content(content.id, content.name))\r\n\r\n          .filter(content =>\r\n            content.name.toLocaleLowerCase().includes(filter.name)\r\n          );\r\n\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getClientById(clientId): Observable<any> {\r\n    console.log(\"called get client by id\");\r\n    return this.http\r\n      .get<any>(this.clientApiUrl + clientId, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getImageById(url) : Observable<Blob>{\r\n    return this.http.get(url,{responseType : 'blob'});\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    console.log(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ResponseModel } from \"../../model/ResponseModel.model\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SurveyService } from \"../survey/survey.service\";\r\nimport { CrudService } from \"../cruds/crud.service\";\r\n\r\n\r\n// -----------------------------------------\r\n// Product Crud Common Function and Operator\r\n// -----------------------------------------\r\n\r\n\r\n@Component({\r\n    selector: \"product-common\",\r\n    template: \"\"\r\n})\r\nexport class ProductCommonComponent {\r\n    public clients: any[];\r\n    public getClientSub: Subscription;\r\n    public response: ResponseModel;\r\n\r\n    getAllSurveySub: Subscription;\r\n    surveyRows: any[];\r\n\r\n    constructor(\r\n        public surveyService: SurveyService,\r\n        public clientService: CrudService,\r\n    ) { }\r\n\r\n\r\n    //   getAllSurvey() {\r\n    //     this.getAllSurveySub = this.surveyService\r\n    //       .getAllSurveys()\r\n    //       .subscribe(successResp => {\r\n    //         this.surveyRows = successResp.content;\r\n    //       });\r\n    //   }\r\n\r\n\r\n    getClientSuggestions() {\r\n        this.getClientSub = this.clientService\r\n            .getClientSuggestions()\r\n            .subscribe(data => {\r\n                this.response = data;\r\n                this.clients = this.response.content;\r\n            });\r\n    }\r\n\r\n    getAllClients() {\r\n        this.getClientSub = this.clientService.getItems().subscribe(data => {\r\n            this.response = data;\r\n            this.clients = this.response.content;\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ProductFilterTableComponent } from \"./product-filter-table/product-filter-table.component\";\r\nimport { RouterModule } from \"../../../../node_modules/@angular/router\";\r\nimport { ProductCrudRouts } from \"./product-crud.routing\";\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatAutocompleteModule,\r\n  MatProgressBarModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n\r\n} from \"../../../../node_modules/@angular/material\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { ProductCrudService } from \"./product-crud.service\";\r\nimport { ProductCrudPopupComponent } from \"./product-filter-table/product-crud-popup/product-crud-popup.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { CrudService } from \"../cruds/crud.service\";\r\nimport { DateValidator } from \"../../directives/DateValidator.directive\";\r\nimport { FileUploadModule } from \"ng2-file-upload\";\r\nimport { SurveyService } from '../survey/survey.service';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ProductCommonComponent } from './product-crud-common.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatAutocompleteModule,\r\n    FileUploadModule,\r\n    MatProgressBarModule,\r\n    SharedModule,\r\n    MatToolbarModule,\r\n    RouterModule.forChild(ProductCrudRouts)\r\n  ],\r\n  declarations: [\r\n    ProductFilterTableComponent,\r\n    ProductCrudPopupComponent,\r\n    DateValidator,\r\n    ProductCommonComponent\r\n  ],\r\n  providers: [ProductCrudService, CrudService, SurveyService],\r\n  entryComponents: [ProductCrudPopupComponent]\r\n})\r\nexport class ProductCrudModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ProductFilterTableComponent } from './product-filter-table/product-filter-table.component';\r\n\r\nexport const ProductCrudRouts: Routes = [\r\n    {\r\n        path: 'show',\r\n        component: ProductFilterTableComponent,\r\n        data: { title: 'Product Section', breadcrumb: 'Product' }\r\n    }\r\n];","module.exports = \"<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [disabled]='!data.isNew' [formControl]=\\\"productForm.controls['client']\\\" required placeholder=\\\"Select A Client\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput [formControl]=\\\"productForm.controls['code']\\\" required name=\\\"proCode\\\"\\r\\n            positiveNumberAndLetterOnly placeholder=\\\"Product Code\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput [formControl]=\\\"productForm.controls['name']\\\" required name=\\\"name\\\" letterOnly placeholder=\\\"Product Name\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"desc\\\" [formControl]=\\\"productForm.controls['description']\\\" required name=\\\"description\\\"\\r\\n            placeholder=\\\"Description\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"batchNumber\\\" [formControl]=\\\"productForm.controls['batchNumber']\\\"\\r\\n            positiveNumberAndLetterOnly required placeholder=\\\"Batch Number\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input type=\\\"number\\\" matInput name=\\\"quantity\\\" [formControl]=\\\"productForm.controls['quantity']\\\"\\r\\n            positiveNumberOnly required placeholder=\\\"Quantity\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"expireDate\\\" [min]=\\\"tomorrow\\\" [matDatepicker]=\\\"picker\\\" [formControl]=\\\"productForm.controls['expireDate']\\\"\\r\\n            required placeholder=\\\"Expire Date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Select A Feedback\\\" matInput [formControl]=\\\"productForm.controls['surveyId']\\\" [matAutocomplete]=\\\"auto\\\" (focusout)=\\\"surveyOnFocusOut($event)\\\">\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onSelectionChanged($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let option of surveyFilteredOptions | async; let i = index\\\" [value]=\\\"surveyIDs[i]\\\">\\r\\n              {{option}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <!-- --------- New Code ----------------- -->\\r\\n\\r\\n      <!-- --------- hidden file input --------- -->\\r\\n      <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" [formControl]=\\\"productForm.controls['file']\\\"\\r\\n        multiple style=\\\"display: none\\\" />\\r\\n\\r\\n\\r\\n      <!-- --------- file input click button --------- -->\\r\\n      <!-- *ngIf=\\\"data.isNew\\\"  -->\\r\\n      <div layout-margin layout-padding>\\r\\n        <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"productImgs.click()\\\"\\r\\n        [disabled]=\\\"this.maxUploadableFileCount === null || this.maxUploadableFileCount < 1 ?\\r\\n        (false) :\\r\\n        (this.currentTotalImageCount === this.maxUploadableFileCount)\\\"\\r\\n          type=\\\"button\\\">\\r\\n          Browse Images\\r\\n          <span *ngIf=\\\"this.maxUploadableFileCount === null || this.maxUploadableFileCount < 1 ?\\r\\n          (false) :\\r\\n          (this.currentTotalImageCount > 0)\\\"> ({{this.currentTotalImageCount}} / 4)</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <!-- --------- start images preview container --------- -->\\r\\n      <div id=\\\"cp_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n        <!-- --------- start card --------- -->\\r\\n        <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngFor='let url of urls; let i = index' fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex.sm=\\\"50\\\" style=\\\"display: flex;\\\">\\r\\n          <mat-card class=\\\"p-0\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"removeSelectedImg(i)\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n            <img [src]=\\\"url\\\">\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <!-- --------- end card --------- -->\\r\\n\\r\\n      </div>\\r\\n      <!-- --------- end images preview container --------- -->\\r\\n\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"videoUrl\\\" [formControl]=\\\"productForm.controls['videoUrl']\\\"  placeholder=\\\"Video URL\\\" type=\\\"text\\\"  >\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </mat-dialog-content>\\r\\n\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"productForm.invalid\\\">Save</button>\\r\\n    <span fxFlex></span>\\r\\n    <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n  </mat-dialog-actions>\\r\\n\\r\\n\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MAT_DATE_FORMATS,\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE,\r\n  MatSnackBar\r\n} from \"@angular/material\";\r\nimport { CrudService } from \"../../../cruds/crud.service\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { ResponseModel } from \"../../../../model/ResponseModel.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport {\r\n  debounceTime,\r\n  switchMap,\r\n  distinctUntilChanged,\r\n  startWith,\r\n  map\r\n} from \"rxjs/operators\";\r\nimport { Clients, Content } from \"./../../../../model/ClientModel.model\";\r\n\r\nimport { DateValidator } from \"../../../../utility/dateValidator\";\r\n\r\nimport { FileUploader } from \"ng2-file-upload\";\r\nimport * as moment from \"moment\";\r\nimport { SurveyService } from \"../../../survey/survey.service\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { egretAnimations } from \"../../../../shared/animations/egret-animations\";\r\nimport { ProductCommonComponent } from \"../../product-crud-common.component\";\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\"\r\n  },\r\n  display: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"YYYY-MM-DD\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"app-product-crud-popup\",\r\n  templateUrl: \"./product-crud-popup.component.html\",\r\n  animations: egretAnimations,\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ]\r\n})\r\nexport class ProductCrudPopupComponent extends ProductCommonComponent\r\n  implements OnInit {\r\n  public productForm: FormGroup;\r\n  public clients: any[];\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n  public filteredClient: Observable<Clients>;\r\n  tomorrow: Date;\r\n  imageUrl: any = \"assets/images/placeholder.jpg\";\r\n\r\n  // image uploader related properties\r\n  public uploader: FileUploader = new FileUploader({ url: \"upload_url\" });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  imageObject: any;\r\n  //------- new --------\r\n  maxUploadableFileCount: number = 4; // IF THIS IS NULL, THERE IS NO IMAGE LIMIT FOR FILE UPLOADER\r\n  urls = [];\r\n  newlySelectedFileList = [];\r\n  remainImagesID = [];\r\n  currentTotalImageCount: number = 0;\r\n\r\n  getAllSurveySub: Subscription;\r\n  surveyRows: any[];\r\n\r\n  surveyFilteredOptions: Observable<string[]>;\r\n  surveys: string[] = [];\r\n  surveyIDs: string[] = [];\r\n  selectedSurveyID: string;\r\n\r\n  // .............REGEX for Youtube link validation...............\r\n  public youtubeRegex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\r\n  public youTubeIdRegex = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\/)|(\\?v=|\\&v=))([^#\\&\\?]*).*/;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ProductCrudPopupComponent>,\r\n    public clientService: CrudService,\r\n    public surveyService: SurveyService,\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar\r\n  ) {\r\n    super(surveyService, clientService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // validate back dates\r\n    this.tomorrow = DateValidator.getTomorrow();\r\n\r\n    if (!this.data.isNew) {\r\n      let images: any[] = this.data.payload.imageObjects;\r\n      images.forEach(image => {\r\n        let img = environment.productimageUrl + \"downloadFile/\" + image.id;\r\n        this.remainImagesID.push(image.id);\r\n        this.urls.push(img);\r\n      });\r\n\r\n      this.currentTotalImageCount = this.remainImagesID.length;\r\n    }\r\n\r\n    this.getAllSurvey();\r\n    this.getClientSuggestions();\r\n    this.buildProductForm(this.data.payload);\r\n    this.filteredClient = this.productForm.get(\"client\").valueChanges.pipe(\r\n      debounceTime(200),\r\n      switchMap(value => this.clientService.search({ name: value }, 1))\r\n    );\r\n  }\r\n\r\n  surveyOnChange() {\r\n    this.surveyFilteredOptions = this.productForm.controls[\r\n      \"surveyId\"\r\n    ].valueChanges.pipe(\r\n      startWith(\"\"),\r\n      map(value => this._surveyFilter(value))\r\n    );\r\n    this.onSelectionChanged();\r\n  }\r\n\r\n  private _surveyFilter(value: string): string[] {\r\n    if (value === \"\" || isNaN(Number(value))) {\r\n      const filterValue = value.toLowerCase();\r\n      return this.surveys.filter(option =>\r\n        option.toLowerCase().includes(filterValue)\r\n      );\r\n    }\r\n  }\r\n\r\n  onSelectionChanged() {\r\n    const input_value = this.productForm.controls[\"surveyId\"].value;\r\n    const id = this.surveyIDs.indexOf(input_value);\r\n    if (id > -1) {\r\n      this.productForm.controls[\"surveyId\"].setValue(this.surveys[id]);\r\n      this.selectedSurveyID = input_value;\r\n    } else {\r\n      console.log(\"============ else ==================\");\r\n    }\r\n  }\r\n\r\n  surveyOnFocusOut(event) {\r\n    if (!(this.surveys.indexOf(event.currentTarget.value) > -1)) {\r\n      this.productForm.controls[\"surveyId\"].setValue(\"\");\r\n    }\r\n  }\r\n\r\n  getAllSurvey() {\r\n    this.getAllSurveySub = this.surveyService\r\n      .getAllSurveys()\r\n      .subscribe(successResp => {\r\n        successResp.content.forEach(element => {\r\n          this.surveys.push(element.topic);\r\n          this.surveyIDs.push(element.id);\r\n          this.surveyOnChange();\r\n        });\r\n      });\r\n  }\r\n\r\n  getClientSuggestions() {\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n      });\r\n  }\r\n\r\n  getAllClients() {\r\n    this.getClientSub = this.clientService.getItems().subscribe(data => {\r\n      this.response = data;\r\n      this.clients = this.response.content;\r\n    });\r\n  }\r\n\r\n  buildProductForm(fieldItem) {\r\n    const client = fieldItem.client;\r\n    const clientId = client ? client.id : null;\r\n\r\n    this.productForm = this.fb.group({\r\n      client: [clientId || \"\"],\r\n      code: [fieldItem.code || \"\", Validators.required],\r\n      name: [fieldItem.name || \"\", Validators.required],\r\n      description: [fieldItem.description || \"\", Validators.required],\r\n      batchNumber: [fieldItem.batchNumber || \"\", Validators.required],\r\n      quantity: [fieldItem.quantity || \"\", Validators.required],\r\n      expireDate: [fieldItem.expireDate || \"\", Validators.required],\r\n      surveyId: [fieldItem.surveyId || null],\r\n      videoUrl: [fieldItem.videoUrl, Validators.pattern(this.youTubeIdRegex)],\r\n      file: [fieldItem.file || \"\"]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    let productRequest: ProductCreationRequest = new ProductCreationRequest(\r\n      this.productForm.value\r\n    );\r\n    let formData;\r\n    formData = this.prepareToSave(productRequest);\r\n    this.dialogRef.close(formData);\r\n  }\r\n\r\n  // image uploader related functions from here\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  // --------- New Code -----------------\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      if (\r\n        this.maxUploadableFileCount == null || this.maxUploadableFileCount < 1\r\n          ? true\r\n          : this.currentTotalImageCount + filesAmount <=\r\n            this.maxUploadableFileCount\r\n      ) {\r\n        for (let i = 0; i < filesAmount; i++) {\r\n          var reader = new FileReader();\r\n\r\n          reader.onload = (event: any) => {\r\n            this.urls.push(event.target.result);\r\n          };\r\n\r\n          reader.readAsDataURL(event.target.files[i]);\r\n          this.newlySelectedFileList.push(event.target.files[i]);\r\n        }\r\n        this.currentTotalImageCount += filesAmount;\r\n      } else {\r\n        // alert for file upload limit\r\n        this.snackBar.open(\r\n          \"Can't upload more than \" + this.maxUploadableFileCount + \" photos\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  removeSelectedImg(index: number) {\r\n    this.urls.splice(index, 1);\r\n    this.currentTotalImageCount -= 1;\r\n\r\n    if (this.remainImagesID.length < index + 1) {\r\n      this.newlySelectedFileList.splice(index - this.remainImagesID.length, 1);\r\n    } else {\r\n      this.remainImagesID.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  prepareToSave(formvalue): FormData {\r\n    let input: FormData = new FormData();\r\n    if (formvalue.surveyId) {\r\n      input.append(\"surveyId\", this.selectedSurveyID);\r\n    }\r\n\r\n    let videoUrl = formvalue.videoUrl;\r\n    if (videoUrl) {\r\n      let match = videoUrl.match(this.youTubeIdRegex);\r\n      if (match && match[8].length == 11) {\r\n        console.log(\"---------------- youtubeVideoId: - \" + match[8]);\r\n      }\r\n      input.append(\"videoUrl\", match[8]);\r\n    }\r\n\r\n    input.append(\"code\", formvalue.code);\r\n    input.append(\"quantity\", formvalue.quantity);\r\n    input.append(\"client\", formvalue.client.id);\r\n    input.append(\r\n      \"expireDate\",\r\n      moment(formvalue.expireDate).format(\"YYYY-MM-DD\")\r\n    );\r\n    input.append(\"name\", formvalue.name);\r\n    input.append(\"description\", formvalue.description);\r\n    input.append(\"batchNumber\", formvalue.batchNumber);\r\n\r\n    if (this.remainImagesID != null && this.remainImagesID.length > 0) {\r\n      input.append(\"remainImagesID\", this.remainImagesID.toString());\r\n    }\r\n\r\n    for (let i = 0; i < this.newlySelectedFileList.length; i++) {\r\n      let selectedFile: File = this.newlySelectedFileList[i];\r\n      let type = selectedFile.type.split(\"/\");\r\n      let imageName = \"image_\" + i + \".\" + type[1];\r\n      input.append(\"file\", selectedFile, imageName);\r\n    }\r\n\r\n    return input;\r\n  }\r\n}\r\n\r\nexport class ProductCreationRequest {\r\n  client: ClientSub;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  batchNumber: string;\r\n  quantity: string;\r\n  expireDate: string;\r\n  surveyId: string;\r\n  videoUrl: string;\r\n  file: any;\r\n\r\n  constructor(public formValue: any) {\r\n    this.client = new ClientSub(formValue.client);\r\n    this.code = formValue.code;\r\n    this.name = formValue.name;\r\n    this.description = formValue.description;\r\n    this.batchNumber = formValue.batchNumber;\r\n    this.quantity = formValue.quantity;\r\n    this.expireDate = formValue.expireDate;\r\n    this.surveyId = formValue.surveyId;\r\n    this.file = formValue.file;\r\n    this.videoUrl = formValue.videoUrl;\r\n  }\r\n}\r\n\r\nclass ClientSub {\r\n  constructor(public id: string) {}\r\n}\r\n","module.exports = \"<!-- -------- JA Sprint 1 - MVP -------- -->\\r\\n<!-- --------- Buddhi Hasanka ---------- -->\\r\\n\\r\\n\\r\\n<mat-form-field class=\\\"margin-333\\\" style=\\\"width: 99%\\\">\\r\\n  <input matInput placeholder=\\\"Type to filter all columns\\\" value=\\\"\\\" (keyup)='updateFilter($event)'>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"m-333\\\">\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" color=\\\"primary\\\" (click)=\\\"openProductPopup({}, true)\\\">Add Product</button>\\r\\n  <span fxFlex></span>\\r\\n  <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n  <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\" placeholder=\\\"Favorite food\\\">\\r\\n    <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n    <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n  </mat-select>\\r\\n</div>\\r\\n\\r\\n\\r\\n<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <!-- <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\" [rows]=\\\"rows\\\" [columns]=\\\"\\\">\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Product Code\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.code }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Product Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Batch Number\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.batchNumber }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Quantity\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.quantity }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Expire Date\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.expireDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openProductPopup(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"mr-1\\\" (click)=\\\"deleteProduct(row)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button mat-sm-button (click)=\\\"downloadCsv(row)\\\">\\r\\n            <mat-icon>file_download</mat-icon>\\r\\n          </button>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable> -->\\r\\n\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"pl-1\\\">Product Code</th>\\r\\n          <th>Product Name</th>\\r\\n          <th width=\\\"250px\\\">Description</th>\\r\\n          <th>Batch Number</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Expire Date</th>\\r\\n          <th width=\\\"150px\\\" class=\\\"\\\">Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let row of rows;\\\">\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">{{row?.code}}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.name }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.description }}</td>\\r\\n          <td class=\\\"pt-1 pb-1 text-cente\\\">{{ row?.batchNumber }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.quantity }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.expireDate }}</td>\\r\\n          <td class=\\\"pt-1 pb-1 pr-1\\\">\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"\\\" (click)=\\\"openProductPopup(row)\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"\\\" (click)=\\\"deleteProduct(row)\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)=\\\"downloadCsv(row)\\\">\\r\\n                  <mat-icon>file_download</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">\\r\\n            <div class=\\\"pagination\\\">{{totalRecords}} Total</div>\\r\\n          </td>\\r\\n          <td colspan=\\\"7\\\">\\r\\n            <nav aria-label=\\\"Page navigation example\\\">\\r\\n              <ul class=\\\"pagination\\\" *ngIf=\\\"totalPages.length > 1\\\">\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber <= 1}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageProduct(pageNumber-1);\\\" aria-label=\\\"Previous\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Previous</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let page of totalPages\\\" [ngClass]=\\\"{'active':pageNumber === page}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageProduct(page);\\\">\\r\\n                    {{page}}\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\"  [ngClass]=\\\"{'disabled':pageNumber >= totalPages.length}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageProduct(pageNumber+1);\\\" aria-label=\\\"Next\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Next</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table>\\r\\n\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ProductCrudService } from \"../product-crud.service\";\r\nimport { MatDialogRef, MatDialog, DateAdapter } from \"@angular/material\";\r\nimport { ProductCrudPopupComponent } from \"./product-crud-popup/product-crud-popup.component\";\r\n\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { AppFileDownloadService } from \"../../../shared/services/file-download.service\";\r\nimport { AppDataConversionService } from \"../../../shared/services/data-conversion.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-product-filter-table\",\r\n  templateUrl: \"./product-filter-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class ProductFilterTableComponent implements OnInit, OnDestroy {\r\n  rows: any[];\r\n  columns = [];\r\n  temp = [];\r\n\r\n\r\n   // pagination\r\n   pageNumber = 1;\r\n   pageSize = 10;\r\n   totalPages = [];\r\n   totalRecords = 0;\r\n\r\n\r\n  public getProductsSub: Subscription;\r\n  updatable: boolean;\r\n\r\n  constructor(\r\n    private prodService: ProductCrudService,\r\n    private dialog: MatDialog,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private confirmService: AppConfirmService,\r\n    private downloadService: AppFileDownloadService,\r\n    private conversionService: AppDataConversionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllProduct();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getProductsSub) {\r\n      this.getProductsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  downloadCsv(selectedRow) {\r\n    console.log(\"SELECTED RAW : \" + selectedRow.id);\r\n    this.prodService\r\n      .getProductDetails(selectedRow.id)\r\n      .subscribe(successResp => {\r\n        let auths = successResp.content;\r\n        const fileName =\r\n          selectedRow.name +\r\n          \"_\" +\r\n          selectedRow.code +\r\n          \"_\" +\r\n          selectedRow.batchNumber;\r\n        const csvData = this.conversionService.convertToCsv(auths);\r\n\r\n        this.downloadService.downloadFile({\r\n          name: fileName,\r\n          type: \"csv\",\r\n          data: csvData\r\n        });\r\n      });\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    let columns = Object.keys(this.temp[0]);\r\n    columns.splice(columns.length - 1);\r\n\r\n    if (!columns.length) return;\r\n\r\n    const rows = this.temp.filter(function(data) {\r\n      for (let i = 0; i <= columns.length; i++) {\r\n        let column = columns[i];\r\n        if (\r\n          data[column] &&\r\n          data[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(val) > -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    this.rows = rows;\r\n  }\r\n\r\n  getAllProduct() {\r\n    this.getProductsSub = this.prodService.getAllProducts().subscribe(\r\n      successResp => {\r\n        this.rows = this.temp = successResp.content;\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  // --------- BH ----------\r\n  getPageProduct(pageNumber) {\r\n    if (pageNumber === 1 || (0 < pageNumber && pageNumber <= this.totalPages.length)) {\r\n      this.pageNumber = pageNumber;\r\n\r\n      this.getProductsSub = this.prodService.getPageProducts(pageNumber, this.pageSize).subscribe(\r\n        successResp => {\r\n          this.rows = this.temp = successResp.content;\r\n          let totalPages = successResp.pagination.totalPages;\r\n          let totalPagesArray = [];\r\n\r\n          if (totalPages > 1) {\r\n            for (let i = 1; i <= totalPages; i++) {\r\n              totalPagesArray.push(i);\r\n            }\r\n          }\r\n          this.totalPages = totalPagesArray;\r\n          this.totalRecords = successResp.pagination.totalRecords;\r\n\r\n        },\r\n        error => {\r\n          this.loader.close();\r\n          console.log(error);\r\n          console.log(error.status);\r\n          this.errDialog.showError({\r\n            title: \"Error\",\r\n            status: error.status,\r\n            type: \"http_error\"\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  changeValue() {\r\n    this.pageNumber = 1;\r\n    this.getPageProduct(this.pageNumber);\r\n  }\r\n  // --------- BH ----------\r\n\r\n  deleteProduct(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.name}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.prodService.removeProduct(row, this.rows).subscribe(\r\n            data => {\r\n              this.getAllProduct();\r\n              this.loader.close();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError({\r\n                title: \"Error\",\r\n                status: error.status,\r\n                type: \"http_error\"\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openProductPopup(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add new Product\" : \"Update Product\";\r\n\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      ProductCrudPopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, isNew: isNew }\r\n      }\r\n    );\r\n\r\n    console.log(\"RES data :\");\r\n    console.log(data);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n\r\n      console.log(\"RES obj :\");\r\n      console.log(res);\r\n\r\n      //res.expireDate = moment(res.expireDate).format(\"YYYY-MM-DD\");\r\n\r\n      if (isNew) {\r\n        this.prodService.addProduct(res, this.rows).subscribe(\r\n          data => {\r\n            let id = data;\r\n            this.prodService.getProductById(id).subscribe(data => {\r\n              this.rows = this.rows.concat(data.content);\r\n              console.log(this.rows);\r\n            });\r\n\r\n            this.loader.close();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.prodService.updateProduct(data.id, res).subscribe(\r\n          response => {\r\n            console.log(response.content);\r\n            this.prodService\r\n              .getProductById(response.content.id)\r\n              .subscribe(data => {\r\n                this.rows = this.rows.map(i => {\r\n                  if (i.id === data.content.id) {\r\n                    console.log(\"recent obj \" + JSON.stringify(data.content));\r\n                    return Object.assign({}, i, data.content);\r\n                  }\r\n                  return i;\r\n                });\r\n              });\r\n\r\n            this.loader.close();\r\n            return this.rows.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  // getProductById(productId) {\r\n  //   this.prodService.getProductById(productId).subscribe(\r\n  //     response => {\r\n  //       this.recentProduct = response.content;\r\n  //       console.log(\r\n  //         \"recent product obj : \" + JSON.stringify(this.recentProduct)\r\n  //       );\r\n  //     },\r\n  //     error => {\r\n  //       this.loader.close();\r\n  //       this.errDialog.showError({\r\n  //         title: \"Error\",\r\n  //         status: error.status,\r\n  //         type: \"http_error\"\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n}\r\n\r\nexport class CSVDTO {\r\n  productDetails: any;\r\n  authenticationCode: any;\r\n\r\n  constructor(public proDetails: any, public authCodes: any) {}\r\n}\r\n"],"sourceRoot":""}