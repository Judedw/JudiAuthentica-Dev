{"version":3,"sources":["webpack:///./node_modules/ng2-charts/ng2-charts.js","webpack:///./node_modules/ng2-file-upload/ng2-file-upload.js","webpack:///./src/app/model/ClientModel.model.ts","webpack:///./src/app/shared/helpers/global-variable.ts","webpack:///./src/app/views/profile/account-settings/account-settings.component.html","webpack:///./src/app/views/profile/account-settings/account-settings.component.ts","webpack:///./src/app/views/profile/profile-blank/profile-blank.component.css","webpack:///./src/app/views/profile/profile-blank/profile-blank.component.html","webpack:///./src/app/views/profile/profile-blank/profile-blank.component.ts","webpack:///./src/app/views/profile/profile-license/profile-license.component.html","webpack:///./src/app/views/profile/profile-license/profile-license.component.ts","webpack:///./src/app/views/profile/profile-overview/profile-overview.component.css","webpack:///./src/app/views/profile/profile-overview/profile-overview.component.html","webpack:///./src/app/views/profile/profile-overview/profile-overview.component.ts","webpack:///./src/app/views/profile/profile-settings/profile-settings.component.html","webpack:///./src/app/views/profile/profile-settings/profile-settings.component.ts","webpack:///./src/app/views/profile/profile.component.html","webpack:///./src/app/views/profile/profile.component.ts","webpack:///./src/app/views/profile/profile.module.ts","webpack:///./src/app/views/profile/profile.routing.ts","webpack:///./src/app/views/profile/profile.service.ts"],"names":[],"mappings":"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","file":"views-profile-profile-module.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./index\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./index\"));\n","export class Content {\r\n  constructor(public id: string, public name: string) { }\r\n}\r\n\r\nexport interface Clients {\r\n  status: string;\r\n  statusCode: string;\r\n  content: Content[];\r\n}\r\n\r\nexport class ClientCreateReq {\r\n  constructor(\r\n    public name: string,\r\n    public description: string,\r\n    public clientLogo: string,\r\n    public users: UserData[],\r\n    public categories: CategoryData[],\r\n    public license: ClientLicenseData\r\n  ) { }\r\n}\r\n\r\nexport class ClientLicenseData {\r\n  constructor(\r\n    public tagCount: number,\r\n    public userCount: number,\r\n    public communityCount: number,\r\n    public feedbackCount: number,\r\n    public eventCount: number,\r\n    public promoCount: number\r\n  ) { }\r\n}\r\n\r\nexport class ClientUpdateReq {\r\n  constructor(\r\n    public name: string,\r\n    public description: string,\r\n    public clientLogo: string,\r\n    public primaryContactNo: string,\r\n    public addressLine1: string,\r\n    public addressLine2: string,\r\n    public city: string,\r\n    public state: string,\r\n    public zipCode: string,\r\n    public country: CountryData\r\n  ) { }\r\n}\r\n\r\nexport class CountryData {\r\n  constructor(\r\n    public id: string,\r\n    // public name: string,\r\n    // public code: string\r\n  ) { }\r\n}\r\n\r\nexport class UserData {\r\n  constructor(\r\n    public accountName: string,\r\n    public email: string,\r\n    public role: AdminRoleData,\r\n  ) { }\r\n}\r\n\r\nexport class AdminRoleData {\r\n  constructor(\r\n    public name: string,\r\n    public description: string,\r\n    public authorities: AuthorityData[],\r\n  ) { }\r\n}\r\n\r\nexport class AuthorityData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class UserCreateReq {\r\n  constructor(\r\n    public accountName: string,\r\n    public password: string,\r\n    public email: string,\r\n    public role: RoleData,\r\n    public client: ClientData,\r\n    public communities: CommunityData[],\r\n    public categories: CategoryData[],\r\n  ) { }\r\n}\r\n\r\nexport class UserUpdateReq {\r\n  constructor(\r\n    public accountName: string,\r\n    public email: string,\r\n    public role: RoleData,\r\n    public status : string\r\n  ) { }\r\n}\r\n\r\nexport class UserCategoryUpdateReq {\r\n  constructor(\r\n    public categories: CategoryData[]\r\n  ) { }\r\n}\r\n\r\nexport class UserCommunityUpdateRequest {\r\n  constructor(\r\n    public communities: CommunityData[]\r\n  ) { }\r\n}\r\n\r\n// export class UserCategoryUpdateReq {\r\n//   constructor(\r\n//     public accountName: string,\r\n//     public email: string,\r\n//     public role: RoleData,\r\n//     public categories: CategoryData[]\r\n//   ) { }\r\n// }\r\n\r\nexport class ClientCategoryUpdateReq {\r\n  constructor(\r\n    public categories: CategoryData[]\r\n  ) { }\r\n}\r\n\r\nexport class ClientData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class LicenseUpdateReq {\r\n  constructor(\r\n    public tagCount: number,\r\n    public userCount: number,\r\n    public communityCount: number,\r\n    public feedbackCount: number,\r\n    public eventCount: number,\r\n    public promoCount: number,\r\n    public client: ClientData,\r\n  ) { }\r\n}\r\n\r\nexport class RoleData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class CommunityData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class CategoryData {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class LicenseUpdateRequest {\r\n  constructor(\r\n    public id: string\r\n  ) { }\r\n}\r\n\r\nexport class profileUpdateReq {\r\n  constructor(\r\n    public id: string,\r\n    public accountName: string,\r\n    public email: string,\r\n  ) { }\r\n}\r\n\r\nexport class passwordUpdateReq {\r\n  constructor(\r\n    public id: string,\r\n    public password: string,\r\n    public newPassword: string,\r\n  ) { }\r\n}\r\n\r\nexport class userImageReq {\r\n  constructor(\r\n    public id: string,\r\n    public imageContent: string,\r\n    public profileImage: string,\r\n  ) { }\r\n}\r\n\r\nexport interface autoCompletableCategory {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface roleAuthority {\r\n  id: string;\r\n  name: string;\r\n  code: string;\r\n}\r\n","\r\n/**\r\n  * Buddhi\r\n  * DO NOT DELETE!\r\n  */\r\n\r\n\r\nexport class GlobalVariable {\r\n\r\n\r\n  public validators = {\r\n    regex: { _Letter: '^(?:[A-Za-z]+)(?:[A-Za-z _]*)$', _PosNumber: '^[+]?([1-9]+(?:[0-9]*)?|\\.[0-9]+)$', _PosNumberAndLetter: '^(?:[A-Za-z0-9]+)(?:[A-Za-z0-9 ._-]*)$' }\r\n  }\r\n\r\n\r\n  /**\r\n    * Client License Max Limits\r\n    */\r\n  public client = {\r\n    license: { tagCount: 1000000, userCount: 1000, comunityCount: 100, feedbackCount: 1000, eventCount: 1000, promoCount: 1000 }\r\n  }\r\n\r\n  public common = {\r\n    matChip: {\r\n      /**\r\n      * Colors\r\n      * primary / accent / warn / default\r\n      */\r\n      userStatusInUpdateUser: { true: \"primary\", false: \"default\" },\r\n      clientStatus: {\r\n        A: { status: \"Active\", style: \"primary\", opposite: { value: \"Inactive\", icon: \"block\" } },\r\n        I: { status: \"Inactive\", style: \"accent\", opposite: { value: \"Active\", icon: \"beenhere\" } },\r\n        D: { status: \"Deleted\", style: \"warn\", opposite: { value: \"Active\", icon: \"beenhere\" } }\r\n      },\r\n      userStatus: {\r\n        ACTIVE: { code: \"A\", display: \"ACTIVE\", style: \"primary\" },\r\n        INACTIVE: { code: \"I\", display: \"INACTIVE\", style: \"default\" },\r\n        DELETED: { code: \"D\", display: \"DELETED\", style: \"warn\" },\r\n        PENDING_ACTIVATION: { code: \"PEA\", display: \"PENDING\", style: \"default\" },\r\n        TEMP_LOCKED_BAD_CREDENTIALS: { code: \"TELBC\", display: \"LOCKED\", style: \"accent\" }\r\n      },\r\n      colorForStatus01: {\r\n        'ACTIVE': \"primary\",\r\n        'INACTIVE': \"default\"\r\n      },\r\n      colorForSurveyStatus01: {\r\n        0: { id: 0, status: \"On Premise\", style: \"accent\" },\r\n        1: { id: 1, status: \"Launched\", style: \"primary\" },\r\n        4: { id: 4, status: \"Offline\", style: \"default\" }\r\n      },\r\n      confirmPasswordStatus: {\r\n        // false : { id: 0, value: \"Passwords do not match!\", style: \"primary\" },\r\n        false: { id: 0, value: \"Passwords Mismatch!\", style: \"custom-text-red\" },\r\n        true: { id: 1, value: \"Password OK!\", style: \"custom-text-green\" }\r\n      },\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  <form [formGroup]=\\\"accountSettingsForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n    <mat-card-title>\\r\\n      <div class=\\\"card-title-text\\\">Account Details</div>\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n    </mat-card-title>\\r\\n    <mat-card-content class=\\\"mat-typography mt-2\\\">\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"clientName\\\" [formControl]=\\\"accountSettingsForm.controls['name']\\\" letterOnly\\r\\n              placeholder=\\\"Name\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <textarea matInput name=\\\"description\\\" placeholder=\\\"Description\\\"\\r\\n              [formControl]=\\\"accountSettingsForm.controls['description']\\\"></textarea>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"contactNo\\\" [formControl]=\\\"accountSettingsForm.controls['contactNo']\\\"\\r\\n              placeholder=\\\"Contact No\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"addressLine1\\\" [formControl]=\\\"accountSettingsForm.controls['addressLine1']\\\"\\r\\n              placeholder=\\\"Address Line 1\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"addressLine2\\\" [formControl]=\\\"accountSettingsForm.controls['addressLine2']\\\"\\r\\n              placeholder=\\\"Address Line 2\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"city\\\" [formControl]=\\\"accountSettingsForm.controls['city']\\\" letterOnly\\r\\n              placeholder=\\\"City\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"state\\\" [formControl]=\\\"accountSettingsForm.controls['state']\\\"\\r\\n              positiveNumberAndLetterOnly placeholder=\\\"State\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput name=\\\"zipCode\\\" [formControl]=\\\"accountSettingsForm.controls['zipCode']\\\" positiveNumberOnly\\r\\n              placeholder=\\\"ZipCode\\\" maxlength=\\\"6\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput [formControl]=\\\"accountSettingsForm.controls['country']\\\" placeholder=\\\"Country\\\"  (focus)='loadCountryDD()'\\r\\n              [matAutocomplete]=\\\"auto\\\" (blur)=\\\"onBlurCountry()\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n              <mat-option *ngFor=\\\"let option of filteredCountries | async\\\" [value]=\\\"option.name\\\">\\r\\n                {{option.name}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- --------- hidden file input --------- -->\\r\\n        <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" style=\\\"display: none\\\"\\r\\n          [formControl]=\\\"accountSettingsForm.controls['profilePic']\\\" base-sixty-four-input>\\r\\n\\r\\n\\r\\n        <!-- --------- file input click button --------- -->\\r\\n        <!-- <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n          <div layout-margin layout-padding>\\r\\n            <button mat-raised-button class=\\\"mr-1 mb-1\\\" (click)=\\\"productImgs.click()\\\" type=\\\"button\\\">\\r\\n              Browse Images</button>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n        <div layout-margin layout-padding class=\\\"pr-1\\\">\\r\\n          <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"productImgs.click()\\\" type=\\\"button\\\">\\r\\n            Browse Images</button>\\r\\n          <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"removeSelectedImg()\\\" type=\\\"button\\\" *ngIf=\\\"url\\\">\\r\\n            Clear Images</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- --------- start images preview container --------- -->\\r\\n        <div id=\\\"client_create_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n          <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngIf=\\\"url\\\" fxFlex=\\\"100\\\" style=\\\"display: flex;\\\">\\r\\n\\r\\n            <img class=\\\"clientProfilePic\\\" [src]=\\\"url\\\" (error)=\\\"removeSelectedImg()\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- --------- end images preview container --------- -->\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n          <!-- <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"\\\">Save</button> -->\\r\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"accountSettingsForm.invalid || !url\\\">Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { ProfileService } from '../profile.service';\r\nimport { ClientData, profileUpdateReq, autoCompletableCategory, CountryData, ClientUpdateReq } from 'app/model/ClientModel.model';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { AppErrorService } from 'app/shared/services/app-error/app-error.service';\r\nimport { MatSnackBar, MatAutocomplete, MatAutocompleteSelectedEvent, MatChipInputEvent } from '@angular/material';\r\nimport { egretAnimations } from \"app/shared/animations/egret-animations\";\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { CountryDB } from 'app/shared/helpers/countries';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\n\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.component.html',\r\n  animations: egretAnimations,\r\n})\r\nexport class AccountSettingsComponent implements OnInit {\r\n\r\n  public countries;\r\n  filteredCountries: Observable<string[]>;\r\n  public selectedCountry;\r\n\r\n  public uploader: FileUploader = new FileUploader({ url: 'upload_url' });\r\n\r\n  public clientId;\r\n  public url;\r\n  imgBaseURL = 'http://localhost:10000/api/downloads/client/';\r\n\r\n  public accountSettingsForm: FormGroup;\r\n  filteredOptions: Observable<string[]>;\r\n\r\n\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private profileService: ProfileService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private errDialog: AppErrorService,\r\n    public snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let currentuser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.clientId = currentuser.userData.client.id;\r\n    this.buildItemForm();\r\n    this.getClient();\r\n    this.getCountry();\r\n  }\r\n\r\n  buildItemForm() {\r\n    this.accountSettingsForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      profilePic: [''],\r\n      contactNo: ['', Validators.required],\r\n      addressLine1: ['', Validators.required],\r\n      addressLine2: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      zipCode: ['', Validators.required],\r\n      country: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  getClient() {\r\n    this.profileService.getClient(this.clientId).subscribe(successResp => {\r\n      let data = successResp.content;\r\n      this.accountSettingsForm.patchValue({\r\n        name: data.name,\r\n        description: data.description,\r\n        contactNo: data.primaryContactNo,\r\n        addressLine1: data.addressLine1,\r\n        addressLine2: data.addressLine2,\r\n        city: data.city,\r\n        state: data.state,\r\n        zipCode: data.zipCode,\r\n        country: data.country != null ? data.country.name : ''\r\n      });\r\n      this.selectedCountry = data.country != null ? data.country.id : '';\r\n      this.onBlurCountry();\r\n      getBase64ImageFromUrl(this.imgBaseURL + this.clientId)\r\n        .then(result => this.url = result)\r\n        .catch(err => console.error(err));\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getCountry() {\r\n    this.profileService.getCountry().subscribe(successResp => {\r\n      this.countries = successResp.content;\r\n\r\n      this.filteredCountries = this.accountSettingsForm.get(\"country\").valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  submit() {\r\n    const country: CountryData = new CountryData(this.selectedCountry);\r\n    const req: ClientUpdateReq = new ClientUpdateReq(\r\n      this.accountSettingsForm.get('name').value,\r\n      this.accountSettingsForm.get('description').value,\r\n      this.url, this.accountSettingsForm.get('contactNo').value,\r\n      this.accountSettingsForm.get('addressLine1').value,\r\n      this.accountSettingsForm.get('addressLine2').value,\r\n      this.accountSettingsForm.get('city').value,\r\n      this.accountSettingsForm.get('state').value,\r\n      this.accountSettingsForm.get('zipCode').value,\r\n      country\r\n    );\r\n\r\n    this.profileService.updateClientDetails(this.clientId, req).subscribe(\r\n      response => {\r\n        this.snack.open(\"Client Details Updated!\", \"OK\", { duration: 4000 });\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //  ----------------------- Account Setting ---------------------------------------------------------\r\n\r\n  private _filter(value: string): any {\r\n    const filterValue = value.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n\r\n      let file = event.dataTransfer ? event.dataTransfer.files[0] : event.target.files[0];\r\n      let pattern = /image-*/;\r\n      let reader = new FileReader();\r\n      if (!file.type.match(pattern)) {\r\n        this.snackBar.open(\r\n          \"Invalid Format!\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n        return;\r\n      }\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n        console.log(this.url);\r\n\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n    } else {\r\n      this.snackBar.open(\r\n        \"Can't upload\",\r\n        \"close\",\r\n        { duration: 2000 }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  removeSelectedImg() {\r\n    this.url = null;\r\n    this.accountSettingsForm.controls['profilePic'].setValue('')\r\n  }\r\n\r\n  onBlurCountry(): void {\r\n    let value = this.accountSettingsForm.get(\"country\").value;\r\n    let status = true;\r\n    this.countries.forEach(element => {\r\n      if (element.name === value) {\r\n        this.selectedCountry = element.id;\r\n        status = false;\r\n      }\r\n    });\r\n\r\n    if (status) {\r\n      this.selectedCountry = null;\r\n      this.accountSettingsForm.get(\"country\").setValue(\"\");\r\n    }\r\n  }\r\n  //  -------------------------------------------------------------------------------------------------\r\n}\r\n\r\nasync function getBase64ImageFromUrl(imageUrl) {\r\n  var res = await fetch(imageUrl);\r\n  var blob = await res.blob();\r\n\r\n  return new Promise((resolve, reject) => {\r\n    var reader = new FileReader();\r\n    reader.addEventListener(\"load\", function () {\r\n      resolve(reader.result);\r\n    }, false);\r\n\r\n    reader.onerror = () => {\r\n      return reject(this);\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  })\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2ZpbGUvcHJvZmlsZS1ibGFuay9wcm9maWxlLWJsYW5rLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  profile-blank works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-blank',\r\n  templateUrl: './profile-blank.component.html',\r\n  styleUrls: ['./profile-blank.component.css']\r\n})\r\nexport class ProfileBlankComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<mat-card class=\\\"p-0\\\">\\r\\n  <mat-tab-group>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- <mat-tab label=\\\"Update License\\\">\\r\\n      <mat-card-content class=\\\"mt-3\\\">\\r\\n        <form [formGroup]=\\\"licenseFormGroup\\\"  (ngSubmit)=\\\"submitLicense()\\\" class=\\\"\\\">\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\" mt-1\\\">\\r\\n\\r\\n            <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"tagCount\\\" placeholder=\\\"Tag Count\\\" positiveNumberOnly\\r\\n                  [formControl]=\\\"licenseFormGroup.controls['tagCount']\\\">\\r\\n              </mat-form-field>\\r\\n              <span *ngIf=\\\"licenseFormGroup.controls['tagCount'].hasError('max')\\\" class=\\\"form-error-msg\\\">\\r\\n                {{this.license.tagCount}} max ! </span>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"userCount\\\" placeholder=\\\"User Count\\\" positiveNumberOnly\\r\\n                  [formControl]=\\\"licenseFormGroup.controls['userCount']\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"communityCount\\\" placeholder=\\\"Community Count\\\" positiveNumberOnly\\r\\n                  [formControl]=\\\"licenseFormGroup.controls['communityCount']\\\" (blur)=\\\"validateLicense()\\\"\\r\\n                  (focus)='setOldValue()'>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"feedbackCount\\\" placeholder=\\\"Feedback Count\\\" positiveNumberOnly\\r\\n                  [formControl]=\\\"licenseFormGroup.controls['feedbackCount']\\\" (blur)=\\\"setDefaultValue('feedbackCount')\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"eventkCount\\\" placeholder=\\\"Event Count\\\" positiveNumberOnly\\r\\n                  [formControl]=\\\"licenseFormGroup.controls['eventCount']\\\" (blur)=\\\"setDefaultValue('eventCount')\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"promoCount\\\" placeholder=\\\"Promo Count\\\" positiveNumberOnly\\r\\n                  [formControl]=\\\"licenseFormGroup.controls['promoCount']\\\" (blur)=\\\"setDefaultValue('promoCount')\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"licenseFormGroup.invalid\\\" (click)=\\\"updateLicense()\\\">Save</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-tab> -->\\r\\n\\r\\n\\r\\n    <mat-tab label=\\\"Category\\\">\\r\\n      <mat-card-content class=\\\"mt-3\\\">\\r\\n        <form [formGroup]=\\\"categoryFormGroup\\\">\\r\\n          <ng-template matStepLabel>Category</ng-template>\\r\\n\\r\\n          <mat-form-field class=\\\"matAutocomplete-chip-list\\\">\\r\\n\\r\\n            <mat-chip-list #chipList>\\r\\n              <mat-chip *ngFor=\\\"let category of selectedCategories\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\r\\n                (removed)=\\\"remove(category)\\\">\\r\\n                {{category.name}}\\r\\n                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n              </mat-chip>\\r\\n              <input matInput placeholder=\\\"Select category...\\\" #categoryInput [formControl]=\\\"categoryCtrl\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n                [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" (focus) = \\\"onFocusCategoryDD()\\\"\\r\\n                (matChipInputTokenEnd)=\\\"add($event)\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\" aria-label=\\\"Category\\\">\\r\\n            </mat-chip-list>    \\r\\n        \\r\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n              <mat-option *ngFor=\\\"let category of filteredCategories | async\\\" [value]=\\\"category.id\\\">\\r\\n                <span>{{category.name}}</span>\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        \\r\\n          </mat-form-field>\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" matStepperNext [disabled]='categoryFormStatus' (click)=\\\"updateCategory()\\\">Save</button>\\r\\n              <span fxFlex></span>\\r\\n              <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-tab>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </mat-tab-group>\\r\\n</mat-card>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { ProfileService } from '../profile.service';\r\nimport { ClientData, LicenseUpdateReq, ClientCategoryUpdateReq, CategoryData, autoCompletableCategory } from 'app/model/ClientModel.model';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { AppErrorService } from 'app/shared/services/app-error/app-error.service';\r\nimport { MatSnackBar, MatAutocomplete, MatAutocompleteSelectedEvent, MatChipInputEvent } from '@angular/material';\r\nimport { egretAnimations } from \"app/shared/animations/egret-animations\";\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { CountryDB } from 'app/shared/helpers/countries';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\n\r\n@Component({\r\n  selector: 'app-profile-license',\r\n  templateUrl: './profile-license.component.html'\r\n})\r\nexport class ProfileLicenseComponent implements OnInit {\r\n\r\n  // public globalVariable: GlobalVariable = new GlobalVariable();\r\n  // public license = this.globalVariable.client.license;\r\n  // public regex = this.globalVariable.validators.regex;\r\n\r\n  // public licenseFormGroup: FormGroup;\r\n  public formStatus = false;\r\n  public url;\r\n  public oldestValue = 0;\r\n  public clientId;\r\n  public license;\r\n  // public getItemSub: Subscription;\r\n\r\n  public categoryFormGroup: FormGroup;\r\n\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  categoryCtrl = new FormControl();\r\n  allCategories: autoCompletableCategory[] = [];\r\n  filteredCategories: Observable<autoCompletableCategory[]>;\r\n  selectedCategories: autoCompletableCategory[] = [];\r\n\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public snackBar: MatSnackBar,\r\n    private profileService: ProfileService,\r\n    private errDialog: AppErrorService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    let currentuser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.clientId = currentuser.userData.client.id;\r\n    this.getCategory();\r\n    this.getClientCategory();\r\n    this.buildItemForm()\r\n\r\n    // this.buildItemForm(this.data.payload.license)\r\n  }\r\n\r\n  buildItemForm() {\r\n\r\n    // this.licenseFormGroup = this.fb.group({\r\n    //   tagCount: ['', Validators.required],\r\n    //   userCount: ['', Validators.required],\r\n    //   communityCount: ['', Validators.required],\r\n    //   feedbackCount: ['', Validators.required],\r\n    //   eventCount: ['', Validators.required],\r\n    //   promoCount: ['', Validators.required]\r\n    // });\r\n\r\n    this.categoryFormGroup = this.fb.group({\r\n      category: this.categoryCtrl\r\n    });\r\n\r\n\r\n    // this.getClient();\r\n  }\r\n\r\n  getCategory() {\r\n    this.profileService.getCategory().subscribe(successResp => {\r\n      this.allCategories = successResp.content;\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getClientCategory() {\r\n    this.profileService.getClientCategories(this.clientId).subscribe(successResp => {\r\n      successResp.content.forEach(element => {\r\n        this.addSelectedCategory(element.id);\r\n      });\r\n    },\r\n      error => {\r\n        this.errDialog.showError(error);\r\n      });\r\n  }\r\n\r\n  // getClient() {\r\n  //   this.getItemSub = this.profileService.getClient(this.clientId).subscribe(successResp => {\r\n  //     this.license = successResp.content.license;\r\n\r\n  //     this.licenseFormGroup.patchValue({\r\n  //       tagCount: this.license.tagCount,\r\n  //       userCount: this.license.userCount,\r\n  //       communityCount: this.license.communityCount,\r\n  //       feedbackCount: this.license.feedbackCount,\r\n  //       eventCount: this.license.eventCount,\r\n  //       promoCount: this.license.promoCount\r\n  //     });\r\n\r\n  //   },\r\n  //     error => {\r\n  //       this.errDialog.showError({\r\n  //         title: \"Error\",\r\n  //         status: error.status,\r\n  //         type: \"http_error\"\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n\r\n  // setOldValue() {\r\n  //   this.oldestValue = this.licenseFormGroup.controls['communityCount'].value;\r\n  // }\r\n\r\n  // validateLicense() {\r\n  //   let form = this.licenseFormGroup;\r\n  //   if (form.controls['communityCount'].value !== '') {\r\n  //     let value = form.controls['communityCount'].value;\r\n  //     let diff;\r\n\r\n  //     if (value > this.oldestValue) {\r\n  //       diff = value - this.oldestValue;\r\n  //       form.controls['feedbackCount'].setValue(+(form.get('feedbackCount').value) + diff);\r\n  //       form.controls['eventCount'].setValue(+(form.get('eventCount').value) + diff);\r\n  //       form.controls['promoCount'].setValue(+(form.get('promoCount').value) + diff);\r\n  //     }\r\n  //   } else {\r\n  //     form.controls['communityCount'].setValue(1)\r\n  //     form.controls['feedbackCount'].setValue(1)\r\n  //     form.controls['eventCount'].setValue(1)\r\n  //     form.controls['promoCount'].setValue(1)\r\n  //   }\r\n  // }\r\n\r\n  // setDefaultValue(control) {\r\n  //   let form = this.licenseFormGroup;\r\n  //   if (form.controls[control].value === '') {\r\n  //     form.controls[control].setValue(1);\r\n  //   }\r\n  // }\r\n\r\n  // updateLicense() {\r\n  //   let form = this.licenseFormGroup;\r\n  //   let clientData: ClientData = new ClientData(this.clientId);\r\n  //   const req: LicenseUpdateReq = new LicenseUpdateReq(form.get('tagCount').value, form.get('userCount').value, form.get('communityCount').value, form.get('feedbackCount').value, form.get('eventCount').value, form.get('promoCount').value, clientData);\r\n\r\n  //   this.profileService.updateClientLicense(this.license.id, req).subscribe(\r\n  //     response => {\r\n  //       this.snack.open(\"License Data Updated !\", \"OK\", { duration: 4000 });\r\n  //       // this.getClients();\r\n  //       // this.clients = response;\r\n  //       // this.loader.close();\r\n  //       // this.snack.open(\"License Data Updated !\", \"OK\", { duration: 4000 });\r\n  //     },\r\n  //     error => {\r\n  //       this.errDialog.showError({\r\n  //         title: \"Error\",\r\n  //         status: error.status,\r\n  //         type: \"http_error\"\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n\r\n\r\n\r\n  //  ----------------------- Categoty Setting --------------------------------------------------------\r\n\r\n  onFocusCategoryDD() {\r\n    this.filteredCategories = this.categoryCtrl.valueChanges\r\n      .pipe(\r\n        startWith(null),\r\n        map(category => category ? this._filterCategories(category) : this.allCategories.slice())\r\n      );\r\n  }\r\n\r\n  updateCategory() {\r\n    console.log('---------------------- Category ', this.selectedCategories);\r\n\r\n    let categories: CategoryData[] = [];\r\n    this.selectedCategories.forEach(element => {\r\n      categories.push(new CategoryData(element.id));\r\n    });\r\n\r\n    const req: ClientCategoryUpdateReq = new ClientCategoryUpdateReq(categories);\r\n\r\n    this.loader.open();\r\n    this.profileService.updateClientCategory(this.clientId, req).subscribe(\r\n      response => {\r\n        this.loader.close();\r\n        this.snack.open(\"Client Category Updated!\", \"OK\", { duration: 4000 });\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // if we need to add custom texts as Chips,\r\n      // Add our category\r\n      // if ((value || '').trim()) {\r\n      //   this.categories.push(value.trim());\r\n      // }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.categoryCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.addSelectedCategory(event.option.value);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.categoryCtrl.setValue(null);\r\n  }\r\n\r\n  addSelectedCategory(id) {\r\n    this.allCategories.forEach((item, index) => {\r\n      if (item.id === id) {\r\n        this.selectedCategories.push(item);\r\n        this.allCategories.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  remove(category: autoCompletableCategory): void {\r\n    this.selectedCategories.forEach((item, index) => {\r\n      if (item.id === category.id) {\r\n        this.allCategories.push(category);\r\n        this.selectedCategories.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _filterCategories(value: string): autoCompletableCategory[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.allCategories.filter(category => category.name.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  //  -------------------------------------------------------------------------------------------------\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2ZpbGUvcHJvZmlsZS1vdmVydmlldy9wcm9maWxlLW92ZXJ2aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"50\\\">\\r\\n    <!-- Time line -->\\r\\n    <mat-card class=\\\"default\\\">\\r\\n      <mat-card-title>Timeline</mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"timeline\\\">\\r\\n          <div class=\\\"timeline-item\\\">\\r\\n            <div class=\\\"timeline-badge\\\">\\r\\n              <img src=\\\"assets/images/face-6.jpg\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div class=\\\"timeline-body\\\">\\r\\n              <div class=\\\"timeline-body-top\\\" fxLayout=\\\"row\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"timeline-body-title mr-1\\\"><b>Jhone Doe</b> updated his status</a>\\r\\n                <span class=\\\"text-muted\\\">1 hour ago</span>\\r\\n                <span fxFlex></span>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-content\\\">\\r\\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem necessitatibus natus fugit porro at sunt mollitia repellendus deserunt, libero similique.</p>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-actions\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"mr-1 text-muted\\\">Like</a>\\r\\n                <a href=\\\"#\\\" class=\\\"text-muted\\\">Comment</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"timeline-item\\\">\\r\\n            <div class=\\\"timeline-badge\\\">\\r\\n              <img src=\\\"assets/images/face-2.jpg\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            <div class=\\\"timeline-body\\\">\\r\\n              <div class=\\\"timeline-body-top\\\" fxLayout=\\\"row\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"timeline-body-title mr-1\\\"><b>Henry krick</b> added a new photo</a>\\r\\n                <span class=\\\"text-muted\\\">15 hours ago</span>\\r\\n                <span fxFlex></span>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-content\\\">\\r\\n                <img src=\\\"assets/images/photo-600_220.jpg\\\" alt=\\\"\\\">\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-actions\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"mr-1 text-muted\\\">Like</a>\\r\\n                <a href=\\\"#\\\" class=\\\"text-muted\\\">Comment</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"timeline-item\\\">\\r\\n            <div class=\\\"timeline-badge\\\">\\r\\n              <mat-icon class=\\\"icon-badge mat-bg-primary\\\">settings</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"timeline-body\\\">\\r\\n              <div class=\\\"timeline-body-top\\\" fxLayout=\\\"row\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"timeline-body-title mr-1\\\"><b>New follower</b></a>\\r\\n                <span class=\\\"text-muted\\\">2 days ago</span>\\r\\n                <span fxFlex></span>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-content\\\">\\r\\n                <p><a class=\\\"mat-color-primary\\\" href=\\\"\\\">Kevin Huyn</a> and 34 others followed you.</p>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-actions\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"mr-1 text-muted\\\">Like</a>\\r\\n                <a href=\\\"#\\\" class=\\\"text-muted\\\">Comment</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"timeline-item\\\">\\r\\n            <div class=\\\"timeline-badge\\\">\\r\\n              <mat-icon class=\\\"icon-badge mat-bg-warn\\\">settings</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"timeline-body\\\">\\r\\n              <div class=\\\"timeline-body-top\\\" fxLayout=\\\"row\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"timeline-body-title mr-1\\\"><b>Membership upgraded</b></a>\\r\\n                <span class=\\\"text-muted\\\">5 days ago</span>\\r\\n                <span fxFlex></span>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-content\\\">\\r\\n                <p>Membership has been upgraded to pro</p>\\r\\n              </div>\\r\\n              <div class=\\\"timeline-body-actions\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"mr-1 text-muted\\\">Like</a>\\r\\n                <a href=\\\"#\\\" class=\\\"text-muted\\\">Comment</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    <!-- End Time line -->\\r\\n\\r\\n    <mat-card class=\\\"default\\\">\\r\\n      <mat-card-title>Uploaded Photos</mat-card-title>\\r\\n      <mat-card-content class=\\\"p-0\\\">\\r\\n          <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"1:1\\\" class=\\\"app-gallery\\\">\\r\\n              <!-- Gallery item -->\\r\\n              <mat-grid-tile *ngFor=\\\"let photo of photos\\\">\\r\\n                <img [src]=\\\"photo.url\\\" alt=\\\"\\\">\\r\\n                <!-- item detail, show on hover -->\\r\\n                <div class=\\\"gallery-control-wrap\\\">\\r\\n                  <div class=\\\"gallery-control\\\">\\r\\n                    <h4 class=\\\"photo-detail fz-1\\\" [fxHide.lt-sm]=\\\"true\\\">{{photo.name}}</h4>\\r\\n                    <span fxFlex></span>\\r\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"photoMenu\\\" class=\\\"\\\">\\r\\n                      <mat-icon>more_vert</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-menu #photoMenu=\\\"matMenu\\\">\\r\\n                      <button mat-menu-item><mat-icon>send</mat-icon>Send as attachment</button>\\r\\n                      <button mat-menu-item><mat-icon>favorite</mat-icon>Favorite</button>\\r\\n                      <button mat-menu-item><mat-icon>delete</mat-icon>Delete</button>\\r\\n                    </mat-menu>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </mat-grid-tile>\\r\\n            </mat-grid-list>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"50\\\">\\r\\n    <mat-card class=\\\"default\\\">\\r\\n      <mat-card-title>Support Tickets</mat-card-title>\\r\\n      <mat-card-content class=\\\"p-0\\\">\\r\\n        <mat-list class=\\\"compact-list mb-1\\\">\\r\\n          <mat-list-item class=\\\"\\\" *ngFor=\\\"let t of tickets\\\">\\r\\n            <img mat-list-avatar class=\\\"mr-1\\\" [src]=\\\"t.img\\\" alt=\\\"\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\r\\n              <h6 class=\\\"m-0 mr-1\\\">{{t.name}}</h6>\\r\\n              <span fxFlex></span>\\r\\n              <div fxFlex=\\\"40\\\">{{t.text | excerpt:20 }}</div>\\r\\n              <span fxFlex></span>\\r\\n              <small class=\\\"text-muted mr-1 ml-1\\\">{{ t.date | relativeTime}}</small>\\r\\n            </div>\\r\\n            <mat-chip mat-sm-chip [color]=\\\"'warn'\\\" [selected]=\\\"t.isOpen\\\">{{t.isOpen ? 'active' : 'closed'}}</mat-chip>\\r\\n          </mat-list-item>\\r\\n        </mat-list>\\r\\n        <div class=\\\"text-right\\\">\\r\\n          <button mat-button class=\\\"full-width\\\">View all</button>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card class=\\\"default\\\">\\r\\n      <mat-card-title>Assigned Tasks</mat-card-title>\\r\\n      <mat-card-content class=\\\"p-0\\\">\\r\\n        <div class=\\\"list-tasktype\\\">\\r\\n          <div class=\\\"tasktype-item\\\" *ngFor=\\\"let t of tasks\\\">\\r\\n            <mat-checkbox class=\\\"mr-1\\\"></mat-checkbox>\\r\\n            <span>{{t.text}}</span>\\r\\n            <span fxFlex></span>\\r\\n            <mat-chip mat-sm-chip color=\\\"primary\\\" [selected]=\\\"t.status ? true : false\\\">{{t.status ? 'completed' : 'pending'}}</mat-chip>\\r\\n            <button mat-icon-button mat-sm-button [matMenuTriggerFor]=\\\"taskMenu\\\" class=\\\"tasktype-action ml-1\\\">\\r\\n                <mat-icon class=\\\"text-muted\\\">more_vert</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #taskMenu=\\\"matMenu\\\">\\r\\n              <button mat-menu-item>\\r\\n                <mat-icon>done</mat-icon>\\r\\n                <span>Completed</span>\\r\\n              </button>\\r\\n              <button mat-menu-item>\\r\\n                <mat-icon>edit</mat-icon>\\r\\n                <span>Edit</span>\\r\\n              </button>\\r\\n              <button mat-menu-item>\\r\\n                <mat-icon>delete</mat-icon>\\r\\n                <span>Delete</span>\\r\\n              </button>\\r\\n            </mat-menu>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <button mat-button class=\\\"full-width\\\">View all</button>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card class=\\\"default\\\">\\r\\n      <mat-card-title>Activity</mat-card-title>\\r\\n      <mat-card-content class=\\\"p-0\\\" fxLayout=\\\"column\\\">\\r\\n        <div class=\\\"activity-data\\\">\\r\\n          <ngx-datatable class=\\\"material bg-white\\\"\\r\\n          [columnMode]=\\\"'force'\\\"\\r\\n          [headerHeight]=\\\"50\\\"\\r\\n          [footerHeight]=\\\"50\\\"\\r\\n          [rowHeight]=\\\"50\\\"\\r\\n          [limit]=\\\"4\\\"\\r\\n          [rows]=\\\"activityData\\\">\\r\\n            <ngx-datatable-column name=\\\"Month\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                {{ row?.month }}\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Spent\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                {{ row?.spent }}\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Opened\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                {{ row?.opened }}\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n            <ngx-datatable-column name=\\\"Closed\\\" [flexGrow]=\\\"1\\\">\\r\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n                {{ row?.closed }}\\r\\n              </ng-template>\\r\\n            </ngx-datatable-column>\\r\\n          </ngx-datatable>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-overview',\r\n  templateUrl: './profile-overview.component.html',\r\n  styleUrls: ['./profile-overview.component.css']\r\n})\r\nexport class ProfileOverviewComponent implements OnInit {\r\n  activityData = [{\r\n    month: 'January',\r\n    spent: 240,\r\n    opened: 8,\r\n    closed: 30\r\n  }, {\r\n    month: 'February',\r\n    spent: 140,\r\n    opened: 6,\r\n    closed: 20\r\n  }, {\r\n    month: 'March',\r\n    spent: 220,\r\n    opened: 10,\r\n    closed: 20\r\n  }, {\r\n    month: 'April',\r\n    spent: 440,\r\n    opened: 40,\r\n    closed: 60\r\n  }, {\r\n    month: 'May',\r\n    spent: 340,\r\n    opened: 40,\r\n    closed: 60\r\n  }];\r\n\r\n  tasks = [{\r\n    text: 'Lorem, ipsum dolor sit amet',\r\n    status: 0\r\n  }, {\r\n    text: 'Lorem, ipsum dolor sit amet',\r\n    status: 0\r\n  }, {\r\n    text: 'Lorem, ipsum dolor sit amet',\r\n    status: 1\r\n  }, {\r\n    text: 'Lorem, ipsum dolor sit amet',\r\n    status: 1\r\n  }, {\r\n    text: 'Lorem, ipsum dolor sit amet',\r\n    status: 1\r\n  }]\r\n\r\n  tickets = [{\r\n    img: 'assets/images/face-1.jpg',\r\n    name: 'Mike Dake',\r\n    text: 'Excerpt pipe is used.',\r\n    date: new Date('07/12/2017'),\r\n    isOpen: true\r\n  }, {\r\n    img: 'assets/images/face-5.jpg',\r\n    name: 'Jhone Doe',\r\n    text: 'My dashboard is not working.',\r\n    date: new Date('07/7/2017'),\r\n    isOpen: false\r\n  }, {\r\n    img: 'assets/images/face-3.jpg',\r\n    name: 'Jhonson lee',\r\n    text: 'Fix stock issue',\r\n    date: new Date('04/10/2017'),\r\n    isOpen: false\r\n  }, {\r\n    img: 'assets/images/face-4.jpg',\r\n    name: 'Mikie Jyni',\r\n    text: 'Renew my subscription.',\r\n    date: new Date('07/7/2017'),\r\n    isOpen: false\r\n  }, {\r\n    img: 'assets/images/face-5.jpg',\r\n    name: 'Jhone Dake',\r\n    text: 'Payment confirmation.',\r\n    date: new Date('04/10/2017'),\r\n    isOpen: false\r\n  }]\r\n\r\n  photos = [{\r\n    name: 'Photo 1',\r\n    url: 'assets/images/sq-15.jpg'\r\n  }, {\r\n    name: 'Photo 2',\r\n    url: 'assets/images/sq-8.jpg'\r\n  }, {\r\n    name: 'Photo 3',\r\n    url: 'assets/images/sq-9.jpg'\r\n  }, {\r\n    name: 'Photo 4',\r\n    url: 'assets/images/sq-10.jpg'\r\n  }, {\r\n    name: 'Photo 5',\r\n    url: 'assets/images/sq-11.jpg'\r\n  }, {\r\n    name: 'Photo 6',\r\n    url: 'assets/images/sq-12.jpg'\r\n  }]\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"p-0\\\">\\r\\n  <mat-tab-group>\\r\\n\\r\\n    <mat-tab label=\\\"Profile Settings\\\">\\r\\n      <mat-card-content class=\\\"mt-3\\\">\\r\\n        <form [formGroup]=\\\"profileSettingsForm\\\" (ngSubmit)=\\\"updateProfile()\\\" class=\\\"userProfileForm\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"accountName\\\" [formControl]=\\\"profileSettingsForm.controls['accountName']\\\"\\r\\n                  positiveNumberAndLetterOnly placeholder=\\\"Name\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"pr-1 mb-3\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"email\\\" [formControl]=\\\"profileSettingsForm.controls['email']\\\" placeholder=\\\"Email\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"profileSettingsForm.invalid\\\">Save</button>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab label=\\\"Password Settings\\\">\\r\\n      <mat-card-content class=\\\"mt-3\\\">\\r\\n        <form [formGroup]=\\\"passwordSettingsForm\\\" (ngSubmit)=\\\"changePassword()\\\" class=\\\"userProfileForm\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"password\\\" type=\\\"password\\\"\\r\\n                  [formControl]=\\\"passwordSettingsForm.controls['currentPassword']\\\" positiveNumberAndLetterOnly\\r\\n                  placeholder=\\\"Current Password\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"password\\\" type=\\\"password\\\"\\r\\n                  [formControl]=\\\"passwordSettingsForm.controls['password']\\\" positiveNumberAndLetterOnly\\r\\n                  placeholder=\\\"Password\\\" (keyup)=checkConfirmPassword()>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"pr-1 mb-3\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"confirmPassword\\\" type=\\\"password\\\"\\r\\n                  [formControl]=\\\"passwordSettingsForm.controls['confirmPassword']\\\" positiveNumberAndLetterOnly\\r\\n                  placeholder=\\\"Confirm Password\\\" (keyup)=checkConfirmPassword()>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <span class=\\\"input-bottom-msg\\\"><span *ngIf=\\\"passwordStatus !== null\\\"\\r\\n                  class=\\\"{{statusArray[passwordStatus].style}}\\\">{{statusArray[passwordStatus].value}}</span></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button mat-raised-button color=\\\"primary\\\"\\r\\n            [disabled]=\\\"passwordSettingsForm.invalid || passwordStatus !== true\\\">Save</button>\\r\\n\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-tab>\\r\\n\\r\\n\\r\\n    <mat-tab label=\\\"Profile Picture\\\">\\r\\n      <mat-card-content class=\\\"mt-3\\\">\\r\\n        <form class=\\\"userProfileForm\\\">\\r\\n          <div class=\\\"mb-1\\\">\\r\\n\\r\\n            <!-- --------- hidden file input --------- -->\\r\\n            <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" style=\\\"display: none\\\" base-sixty-four-input>\\r\\n\\r\\n            <!-- --------- file input click button --------- -->\\r\\n            <div layout-margin layout-padding class=\\\"mb-2\\\">\\r\\n              <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"productImgs.click()\\\" type=\\\"button\\\">\\r\\n                Browse Images</button>\\r\\n              <!-- <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"removeSelectedImg()\\\" type=\\\"button\\\" *ngIf=\\\"url\\\">\\r\\n                Clear Images</button> -->\\r\\n              <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"updateProfilePic()\\\" type=\\\"button\\\"\\r\\n                *ngIf=\\\"url && imageName\\\">\\r\\n                Save</button>\\r\\n            </div>\\r\\n\\r\\n            <!-- --------- start images preview container --------- -->\\r\\n            <div id=\\\"client_create_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n              <!-- --------- start card --------- -->\\r\\n              <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngIf=\\\"url\\\" fxFlex=\\\"100\\\"\\r\\n                style=\\\"display: flex;\\\">\\r\\n\\r\\n                <img id=\\\"userProfilePic\\\" [src]=\\\"url\\\">\\r\\n\\r\\n              </div>\\r\\n              <!-- --------- end card --------- -->\\r\\n\\r\\n            </div>\\r\\n            <!-- --------- end images preview container --------- -->\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-tab>\\r\\n\\r\\n  </mat-tab-group>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { ProfileService } from '../profile.service';\r\nimport { profileUpdateReq, passwordUpdateReq, userImageReq } from 'app/model/ClientModel.model';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { AppErrorService } from 'app/shared/services/app-error/app-error.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { egretAnimations } from \"app/shared/animations/egret-animations\";\r\nimport { GlobalVariable } from 'app/shared/helpers/global-variable';\r\nimport { Router } from '@angular/router';\r\nimport { InteractionService } from 'app/shared/services/app-profile/interaction.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-settings',\r\n  templateUrl: './profile-settings.component.html',\r\n  animations: egretAnimations,\r\n})\r\nexport class ProfileSettingsComponent implements OnInit {\r\n  public uploader: FileUploader = new FileUploader({ url: 'upload_url' });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  public clientId;\r\n  public userId;\r\n  public url;\r\n  public imageName;\r\n  public currentUser;\r\n  public passwordStatus = null;\r\n  public statusArray = new GlobalVariable().common.matChip.confirmPasswordStatus;\r\n\r\n  public profileSettingsForm: FormGroup;\r\n  public passwordSettingsForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private profileService: ProfileService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private errDialog: AppErrorService,\r\n    public snackBar: MatSnackBar,\r\n    public r: Router,\r\n    private _interactionService: InteractionService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.userId = this.currentUser.userData.id;\r\n    this.buildItemForm(this.currentUser.userData);\r\n\r\n    // ---------------------------------- UserProfile -------------------------------\r\n\r\n    this._interactionService.changeProfilePicture$.subscribe(\r\n      url => {\r\n        this.url = url;\r\n      }\r\n    );\r\n\r\n    // ------------------------------------------------------------------------------\r\n\r\n  }\r\n\r\n  buildItemForm(data) {\r\n\r\n    this.profileSettingsForm = this.fb.group({\r\n      accountName: new FormControl(data.accountName || '', Validators.required),\r\n      email: new FormControl(data.email || '', [Validators.required, Validators.email]),\r\n    })\r\n\r\n    this.passwordSettingsForm = this.fb.group({\r\n      currentPassword: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      confirmPassword: new FormControl('', Validators.required)\r\n    })\r\n\r\n  }\r\n\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n    console.log(event);\r\n\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n\r\n      let file = event.dataTransfer ? event.dataTransfer.files[0] : event.target.files[0];\r\n      let pattern = /image-*/;\r\n      let reader = new FileReader();\r\n      if (!file.type.match(pattern)) {\r\n        this.snackBar.open(\r\n          \"Invalid Format!\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n        return;\r\n      }\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n        this.imageName = file.name;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n    } else {\r\n      this.snackBar.open(\r\n        \"Can't upload\",\r\n        \"close\",\r\n        { duration: 2000 }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  removeSelectedImg() {\r\n    this.url = null;\r\n  }\r\n\r\n  updateProfile() {\r\n    const itemForm = this.profileSettingsForm.value;\r\n    const req: profileUpdateReq = new profileUpdateReq(this.userId, itemForm.accountName, itemForm.email);\r\n\r\n    this.profileService.updateUser(req).subscribe(\r\n      response => {\r\n        this.loader.close();\r\n        this.snack.open(\"Profile Updated!\", \"OK\", { duration: 4000 });\r\n\r\n        this.currentUser.userData.accountName = this.currentUser.accountName = response.content.accountName;\r\n        this.currentUser.userData.email = response.content.email;\r\n        localStorage.setItem('currentUser', JSON.stringify(this.currentUser));\r\n        this.changeProfileDetails(response.content.accountName);\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  changeProfileDetails(userName) {\r\n    this._interactionService.changeProfileDetails(userName);\r\n  }\r\n\r\n  checkConfirmPassword() {\r\n    const itemForm = this.passwordSettingsForm.value\r\n    if (itemForm.password !== null && itemForm.confirmPassword !== null && itemForm.password !== '' && itemForm.confirmPassword !== '') {\r\n      if (itemForm.password !== itemForm.confirmPassword) { this.passwordStatus = false; }\r\n      else { this.passwordStatus = true; }\r\n    } else {\r\n      this.passwordStatus = null;\r\n    }\r\n\r\n  }\r\n\r\n  changePassword() {\r\n\r\n    const itemForm = this.passwordSettingsForm.value\r\n\r\n    const req: passwordUpdateReq = new passwordUpdateReq(this.userId, itemForm.currentPassword, itemForm.confirmPassword);\r\n    this.profileService.updateUserPassword(req).subscribe(\r\n      response => {\r\n        this.loader.close();\r\n        this.snack.open(\"Password Updated!\", \"OK\", { duration: 4000 });\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  updateProfilePic() {\r\n    const req: userImageReq = new userImageReq(this.userId, this.url, this.imageName);\r\n    this.profileService.updateProfilePic(req).subscribe(\r\n      response => {\r\n        this.loader.close();\r\n        this.snack.open(\"Profile Picture Updated!\", \"OK\", { duration: 4000 });\r\n        this._interactionService.changeProfilePicture(this.userId);\r\n        this.imageName = null;\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\r\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\r\\n      <div class=\\\"propic text-center\\\">\\r\\n        <img src=\\\"{{this.profileImg}}\\\" alt=\\\"\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"profile-title text-center mb-1\\\">\\r\\n        <div class=\\\"main-title\\\">{{this.userDisplayName}}</div>\\r\\n        <div class=\\\"subtitle mb-05\\\">{{ currentUser.company }}</div>\\r\\n        <div class=\\\"text-muted\\\">\\r\\n          Hi {{this.userDisplayName}}! Hope you are doing great at\\r\\n          {{ currentUser.company }}\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"profile-actions text-center mb-1\\\">\\r\\n        <button color=\\\"primary\\\" mat-raised-button=\\\"\\\" class=\\\"mat-raised-button mat-primary mr-1\\\">\\r\\n          <span class=\\\"mat-button-wrapper\\\">Message</span>\\r\\n          <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\r\\n          <div class=\\\"mat-button-focus-overlay\\\"></div>\\r\\n        </button><button color=\\\"accent\\\" mat-raised-button=\\\"\\\" class=\\\"mat-raised-button mat-accent\\\">\\r\\n          <span class=\\\"mat-button-wrapper\\\">Follow</span>\\r\\n          <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\r\\n          <div class=\\\"mat-button-focus-overlay\\\"></div>\\r\\n        </button>\\r\\n      </div> -->\\r\\n      <div class=\\\"profile-nav\\\">\\r\\n        <mat-nav-list>\\r\\n          <!--\\r\\n            <mat-list-item routerLink=\\\"/profile/overview\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n              <mat-icon>home</mat-icon>\\r\\n              Overview\\r\\n            </mat-list-item>\\r\\n            <mat-divider></mat-divider>\\r\\n          -->\\r\\n          <mat-list-item routerLink=\\\"/profile/profile-settings\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>portrait</mat-icon>\\r\\n            Profile Settings\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n          <mat-list-item routerLink=\\\"/profile/account-settings\\\" routerLinkActive=\\\"list-item-active\\\"\\r\\n            [roleAuthorization]=\\\"'isPredefined'\\\">\\r\\n            <mat-icon>work</mat-icon>\\r\\n            Account Settings\\r\\n          </mat-list-item>\\r\\n          <mat-divider></mat-divider>\\r\\n\\r\\n          <mat-list-item routerLink=\\\"/profile/general-settings\\\" routerLinkActive=\\\"list-item-active\\\"\\r\\n            [roleAuthorization]=\\\"'isPredefined'\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n            General Settings\\r\\n          </mat-list-item>\\r\\n          <!-- <mat-list-item routerLink=\\\"/profile/blank\\\" routerLinkActive=\\\"list-item-active\\\">\\r\\n            <mat-icon>content_paste</mat-icon>\\r\\n            Blank\\r\\n          </mat-list-item> -->\\r\\n\\r\\n        </mat-nav-list>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n  <!-- Profile Views -->\\r\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-md=\\\"calc(100% - 300px)\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { LocalStorageHandler } from \"../../shared/helpers/local-storage\";\r\nimport { AuthenticationService } from \"../sessions/authentication.service\";\r\nimport { InteractionService } from \"app/shared/services/app-profile/interaction.service\";\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.component.html\"\r\n})\r\nexport class ProfileComponent extends LocalStorageHandler implements OnInit {\r\n\r\n  activeView: string = \"overview\";\r\n  public currentUser;\r\n  public userDisplayName\r\n\r\n  public userId;\r\n  public profileImg;\r\n\r\n  // Doughnut\r\n  doughnutChartColors: any[] = [\r\n    {\r\n      backgroundColor: [\"#fff\", \"rgba(0, 0, 0, .24)\"]\r\n    }\r\n  ];\r\n\r\n  total1: number = 500;\r\n  data1: number = 200;\r\n  doughnutChartData1: number[] = [this.data1, this.total1 - this.data1];\r\n\r\n  total2: number = 1000;\r\n  data2: number = 400;\r\n  doughnutChartData2: number[] = [this.data2, this.total2 - this.data2];\r\n\r\n  doughnutChartType = \"doughnut\";\r\n  doughnutOptions: any = {\r\n    cutoutPercentage: 85,\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      display: false,\r\n      position: \"bottom\"\r\n    },\r\n    elements: {\r\n      arc: {\r\n        borderWidth: 0\r\n      }\r\n    },\r\n    tooltips: {\r\n      enabled: false\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private router: ActivatedRoute,\r\n    private authService: AuthenticationService,\r\n    private _interactionService: InteractionService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activeView = this.router.snapshot.params[\"view\"];\r\n\r\n\r\n    // ---------------------------------- UserProfile -------------------------------\r\n\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.userDisplayName = this.currentUser.accountName;\r\n\r\n    this._interactionService.changeProfileDetails$.subscribe(\r\n      userName => {\r\n        this.userDisplayName = userName;\r\n      }\r\n    );\r\n\r\n    this._interactionService.changeProfilePicture$.subscribe(\r\n      url => {\r\n        this.profileImg = url;\r\n      }\r\n    );\r\n\r\n    // ------------------------------------------------------------------------------\r\n\r\n\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatListModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatSlideToggleModule,\r\n  MatGridListModule,\r\n  MatChipsModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatTabsModule,\r\n  MatInputModule,\r\n  MatProgressBarModule,\r\n  MatAutocompleteModule\r\n} from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { ProfileComponent } from \"./profile.component\";\r\nimport { ProfileOverviewComponent } from './profile-overview/profile-overview.component';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\nimport { AccountSettingsComponent } from './account-settings/account-settings.component';\r\nimport { ProfileLicenseComponent } from './profile-license/profile-license.component';\r\nimport { ProfileBlankComponent } from './profile-blank/profile-blank.component';\r\nimport { ProfileRoutes } from \"./profile.routing\";\r\nimport { ProfileService } from \"./profile.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatProgressBarModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    ChartsModule,\r\n    FileUploadModule,\r\n    SharedModule,\r\n    MatAutocompleteModule,\r\n    RouterModule.forChild(ProfileRoutes)\r\n  ],\r\n  providers: [ProfileService],\r\n  declarations: [ProfileComponent, ProfileOverviewComponent, ProfileSettingsComponent, AccountSettingsComponent, ProfileLicenseComponent, ProfileBlankComponent]\r\n})\r\nexport class ProfileModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ProfileComponent } from \"./profile.component\";\r\nimport { ProfileOverviewComponent } from \"./profile-overview/profile-overview.component\";\r\nimport { ProfileSettingsComponent } from \"./profile-settings/profile-settings.component\";\r\nimport { AccountSettingsComponent } from \"./account-settings/account-settings.component\";\r\nimport { ProfileBlankComponent } from \"./profile-blank/profile-blank.component\";\r\nimport { ProfileLicenseComponent } from \"./profile-license/profile-license.component\";\r\n\r\nexport const ProfileRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfileComponent,\r\n    children: [{\r\n      path: 'overview',\r\n      component: ProfileOverviewComponent,\r\n      data: { title: 'Overview', breadcrumb: 'OVERVIEW' }\r\n    }, \r\n    {\r\n      path: 'profile-settings',\r\n      component: ProfileSettingsComponent,\r\n      data: { title: 'Profile Settings', breadcrumb: 'PROFILE SETTINGS' }\r\n    }, \r\n    {\r\n      path: 'account-settings',\r\n      component: AccountSettingsComponent,\r\n      data: { title: 'Account Settings', breadcrumb: 'ACCOUNT SETTINGS' }\r\n    }, \r\n    {\r\n      path: 'general-settings',\r\n      component: ProfileLicenseComponent,\r\n      data: { title: 'General Settings', breadcrumb: 'GENERAL SETTINGS' }\r\n    }, \r\n    {\r\n      path: 'blank',\r\n      component: ProfileBlankComponent,\r\n      data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n    }]\r\n  }\r\n];","import { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map, tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment.prod\";\r\n\r\n@Injectable()\r\nexport class ProfileService {\r\n\r\n  public userUrl: string = environment.userApiUrl + \"platform-users\";\r\n  public userProfileUrl: string = environment.userApiUrl + \"platform-user-profiles\";\r\n  public clientUrl: string = environment.userApiUrl + \"clients\";\r\n  public licenseUrl: string = this.clientUrl + \"/license\";\r\n  public specsUrl: string = environment.userApiUrl + \"spec\";\r\n  public geoUrl: string = environment.userApiUrl + \"geo\";\r\n  public imgBaseURL = environment.userApiUrl + 'downloads';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateUser(item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userProfileUrl, item)\r\n      .pipe(catchError(this.handleError));\r\n    // return this.http\r\n    //   .put<any>(this.userProfileUrl +\"/\"+ id, item)\r\n    //   .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateUserPassword(item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.userProfileUrl + \"/change-password\", item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateProfilePic(item): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.userUrl + \"/profileImage\", item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  getClient(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getCategory(): Observable<any> {\r\n    return this.http.get(this.specsUrl + \"/categories\").pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getCountry(): Observable<any> {\r\n    return this.http.get(this.geoUrl + \"/countries\").pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getClientCategories(id): Observable<any> {\r\n    return this.http.get(this.clientUrl + \"/categories/\" + id).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientLicense(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.licenseUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientCategory(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientUrl + \"/categories/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateClientDetails(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientUrl + \"/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    console.log(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n"],"sourceRoot":""}