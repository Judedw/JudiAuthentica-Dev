{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/Observable.js","webpack:///./node_modules/rxjs-compat/_esm5/Subject.js","webpack:///./node_modules/rxjs-compat/_esm5/observable/merge.js","webpack:///./node_modules/rxjs-compat/_esm5/operators/distinctUntilChanged.js","webpack:///./node_modules/rxjs-compat/_esm5/operators/filter.js","webpack:///./node_modules/rxjs-compat/_esm5/operators/map.js","webpack:///./node_modules/rxjs-compat/_esm5/operators/take.js","webpack:///./src/app/views/community/community.service.ts","webpack:///./src/app/views/evote/evote-service.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export { Observable } from 'rxjs';\n//# sourceMappingURL=Observable.js.map","export { Subject } from 'rxjs';\n//# sourceMappingURL=Subject.js.map","export { merge } from 'rxjs';\n//# sourceMappingURL=merge.js.map","export { distinctUntilChanged } from 'rxjs/operators';\n//# sourceMappingURL=distinctUntilChanged.js.map","export { filter } from 'rxjs/operators';\n//# sourceMappingURL=filter.js.map","export { map } from 'rxjs/operators';\n//# sourceMappingURL=map.js.map","export { take } from 'rxjs/operators';\n//# sourceMappingURL=take.js.map","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"./../../../environments/environment.prod\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { throwError } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ComunityService {\r\n  public userApiUrl = environment.userApiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /*\r\n   * Get download url for events,promotion posters\r\n   * 12-04-2019\r\n   * Raveen Sankalpa\r\n   */\r\n\r\n  getPosterDownloadUrl(context) {\r\n    const commonUrl = this.userApiUrl + \"downloads/\";\r\n    if (context === \"event\") {\r\n      return commonUrl + \"event/\";\r\n    }\r\n    if (context === \"promo\") {\r\n      return commonUrl + \"promo/\";\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Create community\r\n   * 05-03-2019\r\n   * Prasad Kumara\r\n   */\r\n  createCommunity(createCommunityData) {\r\n    return this.http\r\n      .post(this.userApiUrl + \"communities\", createCommunityData)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n   * Fetch all communities\r\n   * 05-03-2019\r\n   * Prasad Kumara\r\n   */\r\n  fetchAllComunities(clientId, userId, pageNumber, pageSize) {\r\n    return this.http\r\n      .get(\r\n        this.userApiUrl +\r\n          \"communities/client/\" +\r\n          clientId +\r\n          \"/\" +\r\n          userId +\r\n          \"?pageNumber=\" +\r\n          pageNumber +\r\n          \"&pageSize=\" +\r\n          pageSize\r\n      )\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n   * get community using community id\r\n   * 05-03-2019\r\n   * Prasad Kumara\r\n   */\r\n  getCommunityById(communityId) {\r\n    return this.http.get(this.userApiUrl + \"communities/\" + communityId).pipe(\r\n      map(data => {\r\n        const resData: any = data;\r\n        return resData.content;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  /*\r\n   * Update community using community id\r\n   * 05-03-2019\r\n   * Prasad Kumara\r\n   */\r\n  updateCommunityById(communityId, communityData) {\r\n    return this.http\r\n      .put(this.userApiUrl + \"communities/\" + communityId, communityData)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n   * Delete community using community id\r\n   * 05-03-2019\r\n   * Prasad Kumara\r\n   */\r\n  deleteCommunityById(communityId) {\r\n    return this.http\r\n      .delete(this.userApiUrl + \"communities/\" + communityId)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  licenseExpireState(clientId, moduleName) {\r\n    return this.http\r\n      .get(this.userApiUrl + \"clients/license/\" + clientId + \"/\" + moduleName)\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  /*\r\n   * Handle http response error\r\n   * 05-03-2019\r\n   * Prasad Kumara\r\n   */\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class EvoteService {\r\n  surveyApiUrl: string = environment.surveyApiURL + \"evotes/\";\r\n  populateVoterUrl: string = environment.surveyApiURL + \"voters\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllEvotesSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get(this.surveyApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAllEvotes(): Observable<any> {\r\n    return this.http.get(this.surveyApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // --------- BH ----------\r\n  getPageEvotes(pageNumber, pageSize): Observable<any> {\r\n    return this.http.get(this.surveyApiUrl + \"?pageNumber=\" + pageNumber + \"&pageSize=\" + pageSize).pipe(catchError(this.handleError));\r\n  }\r\n  // --------- BH ----------\r\n\r\n\r\n  removeEvotes(row, items): Observable<any> {\r\n    return this.http.delete(this.surveyApiUrl + row.id).pipe(\r\n      // map(data => {\r\n      //   console.log(items);\r\n      //   let i = items.indexOf(row);\r\n      //   console.log('I : ' + i);\r\n      //   items.splice(i, 1);\r\n      //   return items;\r\n      // }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  addEvote(evoteObj, items): Observable<any> {\r\n    return this.http.post<any>(this.surveyApiUrl, evoteObj).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateEvote(id, item) {\r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  populateVoters(voteObj): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.populateVoterUrl, voteObj)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getEvoteById(evoteId): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + evoteId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getEvoteDetails(evoteId) {\r\n    return this.http\r\n      .get<any>(environment.surveyApiURL + \"eVoterDetails/\" + evoteId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    return throwError(error);\r\n  }\r\n}\r\n"],"sourceRoot":""}