{"version":3,"sources":["webpack:///./src/app/views/evote/evote-table/evote-popup/evote-popup.component.html","webpack:///./src/app/views/evote/evote-table/evote-popup/evote-popup.component.ts","webpack:///./src/app/views/evote/evote-table/evote-table.component.html","webpack:///./src/app/views/evote/evote-table/evote-table.component.ts","webpack:///./src/app/views/evote/evote.module.ts","webpack:///./src/app/views/evote/evote.routing.ts","webpack:///./src/app/views/evote/voter-popup/voter-popup.component.html","webpack:///./src/app/views/evote/voter-popup/voter-popup.component.ts"],"names":[],"mappings":"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","file":"views-evote-evote-module.js","sourcesContent":["module.exports = \"<form  [formGroup]=\\\"evoteForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content  [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" class=\\\"mat-typography mt-1\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n      <!-- <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Choose a client\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"evoteForm.controls['client']\\\" >\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\" >\\r\\n                    <mat-option *ngFor=\\\"let user of (filteredClient | async)?.content\\\" [value]=\\\"user\\\">\\r\\n                      <span>{{ user.name }}</span>\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n            </div> -->\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput [formControl]=\\\"evoteForm.controls['topic']\\\" required name=\\\"topic\\\" positiveNumberAndLetterOnly\\r\\n            placeholder=\\\"Topic\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select *ngIf='data.isNew' [formControl]=\\\"evoteForm.controls['clientId']\\\" required placeholder=\\\"Select A Client\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-select *ngIf='!data.isNew' [formControl]=\\\"evoteForm.controls['clientId']\\\"\\r\\n            required placeholder=\\\"Select A Client\\\">\\r\\n            <mat-option *ngFor='let client of clients | arrayFilter : evoteForm.controls[\\\"clientId\\\"].value : \\\"clients\\\"'\\r\\n              [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput [formControl]=\\\"evoteForm.controls['code']\\\" required name=\\\"proCode\\\"\\r\\n            positiveNumberAndLetterOnly placeholder=\\\"E-Vote Code\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"desc\\\" [formControl]=\\\"evoteForm.controls['description']\\\" required name=\\\"description\\\"\\r\\n            positiveNumberAndLetterOnly placeholder=\\\"Description\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"expireDate\\\" [min]=\\\"tomorrow\\\" [matDatepicker]=\\\"picker\\\" [formControl]=\\\"evoteForm.controls['expireDate']\\\"\\r\\n            required placeholder=\\\"Expire Date\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput name=\\\"batchNumber\\\" [formControl]=\\\"evoteForm.controls['batchNumber']\\\"\\r\\n            positiveNumberAndLetterOnly required placeholder=\\\"Batch Number\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [formControl]=\\\"evoteForm.controls['surveyId']\\\" placeholder=\\\"Select A Feedback\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let survey of surveyRows\\\" [value]=\\\"survey.id\\\">{{survey.topic}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <!-- --------- Old Code --------- -->\\r\\n\\r\\n      <!-- <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-card-content>\\r\\n          <input (change)=\\\"onSelectFile($event)\\\" id=\\\"imageAvatar\\\" type=\\\"file\\\" [formControl]=\\\"evoteForm.controls['file']\\\" />\\r\\n        </mat-card-content>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <p>Image Preview</p>\\r\\n        <img width=\\\"200px\\\" height=\\\"250px\\\" src=\\\"\\\" src=\\\"{{ imageUrl}}\\\" id=\\\"dishPhoto\\\">\\r\\n      </div> -->\\r\\n\\r\\n\\r\\n\\r\\n     <!-- --------- New Code --------- -->\\r\\n      <!-- --------- hidden file input --------- -->\\r\\n      <input (change)=\\\"onSelectFile($event)\\\" #productImgs type=\\\"file\\\" [formControl]=\\\"evoteForm.controls['file']\\\"\\r\\n        multiple style=\\\"display: none\\\" />\\r\\n\\r\\n\\r\\n      <!-- --------- file input click button --------- -->\\r\\n      <!-- *ngIf=\\\"data.isNew\\\"  -->\\r\\n      <div layout-margin layout-padding>\\r\\n        <button mat-raised-button class=\\\"mr-1\\\" (click)=\\\"productImgs.click()\\\"\\r\\n        [disabled]=\\\"this.maxUploadableFileCount === null || this.maxUploadableFileCount < 1 ?\\r\\n        (false) :\\r\\n        (this.currentTotalImageCount === this.maxUploadableFileCount)\\\"\\r\\n          type=\\\"button\\\">\\r\\n          Browse Images\\r\\n          <span *ngIf=\\\"this.maxUploadableFileCount === null || this.maxUploadableFileCount < 1 ?\\r\\n          (false) :\\r\\n          (this.currentTotalImageCount > 0)\\\"> ({{this.currentTotalImageCount}} / 4)</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <!-- --------- start images preview container --------- -->\\r\\n      <div id=\\\"cp_image_preview_container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\" layout-align=\\\"center\\\">\\r\\n\\r\\n        <!-- --------- start card --------- -->\\r\\n        <div [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" *ngFor='let url of urls; let i = index' fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex.sm=\\\"50\\\" style=\\\"display: flex;\\\">\\r\\n          <mat-card    class=\\\"p-0\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"removeSelectedImg(i)\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n            <img [src]=\\\"url\\\">\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <!-- --------- end card --------- -->\\r\\n\\r\\n      </div>\\r\\n      <!-- --------- end images preview container --------- -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <!-- <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n              <mat-card-content>\\r\\n\\r\\n                <div class=\\\"mb-1 mt-1\\\">\\r\\n                  <p>Upload a Product Image</p>\\r\\n                  <input (change)=\\\"onSelectFile($event)\\\" type=\\\"file\\\" [formControl]=\\\"evoteForm.controls['file']\\\" ng2FileSelect [uploader]=\\\"uploader\\\"\\r\\n                  />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"mb-1\\\">\\r\\n                  <div ng2FileDrop [ngClass]=\\\"{'dz-file-over': hasBaseDropZoneOver}\\\" [uploader]=\\\"uploader\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n                    class=\\\"fileupload-drop-zone\\\">\\r\\n                    Drop png/jpeg file here\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <table class=\\\"default-table mat-box-shadow\\\" style=\\\"width: 100%\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th width=\\\"50%\\\">Name</th>\\r\\n                      <th>Size</th>\\r\\n                      <th>Actions</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody *ngIf=\\\"uploader.queue.length; else tableNoData\\\">\\r\\n                    <tr>\\r\\n                      <td>{{ imageObject.file.name }}</td>\\r\\n                      <td nowrap>{{ imageObject.file.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                      <td nowrap>\\r\\n                        <button mat-raised-button class=\\\"mat-warn\\\" type='button' (click)=\\\"imageObject.remove()\\\">Remove</button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                  <ng-template #tableNoData>\\r\\n                    <p [ngStyle]=\\\"{padding: '0 1.2rem'}\\\">Queue is empty</p>\\r\\n                  </ng-template>\\r\\n                </table>\\r\\n\\r\\n              </mat-card-content>\\r\\n            </div> -->\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"evoteForm.invalid\\\">Save</button>\\r\\n    <span fxFlex></span>\\r\\n    <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n  </mat-dialog-actions>\\r\\n\\r\\n\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MAT_DATE_FORMATS,\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE,\r\n  MatSnackBar\r\n} from \"../../../../../../node_modules/@angular/material\";\r\nimport { Subscription } from \"../../../../../../node_modules/rxjs\";\r\nimport { EvoteService } from \"../../evote-service.service\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport { CrudService } from \"../../../cruds/crud.service\";\r\nimport { ResponseModel } from \"../../../../model/ResponseModel.model\";\r\nimport { FileUploader } from \"ng2-file-upload\";\r\nimport * as moment from \"moment\";\r\nimport { SurveyService } from '../../../survey/survey.service';\r\nimport { DateValidator } from \"app/utility/dateValidator\";\r\nimport { environment } from 'environments/environment.prod';\r\nimport { egretAnimations } from '../../../../shared/animations/egret-animations';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\"\r\n  },\r\n  display: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"YYYY-MM-DD\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"app-evote-popup\",\r\n  templateUrl: \"./evote-popup.component.html\",\r\n  animations : egretAnimations,\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ]\r\n})\r\nexport class EvotePopupComponent implements OnInit {\r\n  public evoteForm: FormGroup;\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n  tomorrow: Date;\r\n  public clients: any[];\r\n  imageFile: File;\r\n\r\n  // image uploader related properties\r\n  public uploader: FileUploader = new FileUploader({ url: \"upload_url\" });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  imageObject: any;\r\n  imageUrl: any = \"assets/images/placeholder.jpg\";\r\n\r\n  //------- new --------\r\n  maxUploadableFileCount: number = null; // IF THIS IS NULL, THERE IS NO IMAGE LIMIT FOR FILE UPLOADER\r\n  urls = [];\r\n  newlySelectedFileList = [];\r\n  remainImagesID = []\r\n  currentTotalImageCount: number = 0;\r\n\r\n\r\n\r\n  getAllSurveySub: Subscription;\r\n  surveyRows: any[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private evoteService: EvoteService,\r\n    private clientService: CrudService,\r\n    private surveyService: SurveyService,\r\n    public snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<EvotePopupComponent>\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    if (!this.data.isNew) {\r\n      console.log(\"---------- IN -------------\");\r\n      let images: any[] = this.data.payload.imageObjects;\r\n      images.forEach(image => {\r\n        let img = environment.evoteimageUrl + \"downloadFile/\" + image.id;\r\n        this.remainImagesID.push(image.id);\r\n        this.urls.push(img);\r\n      });\r\n\r\n      this.currentTotalImageCount = this.remainImagesID.length;\r\n\r\n      this.printTest();\r\n    }\r\n\r\n    this.getAllSurvey();\r\n    this.tomorrow = DateValidator.getTomorrow();\r\n    this.buildEvoteForm(this.data.payload);\r\n    this.getClientSuggestions();\r\n    this.getAllSurvey();\r\n    // console.log(this.data.payload);\r\n  }\r\n\r\n  getClientSuggestions() {\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n      });\r\n  }\r\n\r\n  // image uploader related functions from here\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n\r\n  // --------- Old Code -----------------\r\n\r\n  // onSelectFile(event) {\r\n  //   let x = this.uploader.queue.length - 1;\r\n  //   this.imageObject = this.uploader.queue[x];\r\n\r\n  //   let reader = new FileReader();\r\n  //   if (event.target.files && event.target.files.length > 0) {\r\n  //     this.imageFile = event.target.files[0];\r\n  //     reader.readAsDataURL(this.imageFile);\r\n  //     reader.onload = (event: any) => {\r\n  //       this.imageUrl = event.target.result;\r\n  //       console.log(\"IMAGE URL  : \" + this.imageUrl);\r\n  //     };\r\n  //   }\r\n  // }\r\n\r\n\r\n// --------- New Code -----------------\r\n  // File uploader validation and upload\r\n  onSelectFile(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      if (\r\n        this.maxUploadableFileCount == null || this.maxUploadableFileCount < 1\r\n          ? true\r\n          : this.currentTotalImageCount + filesAmount <=\r\n          this.maxUploadableFileCount\r\n      ) {\r\n        for (let i = 0; i < filesAmount; i++) {\r\n          var reader = new FileReader();\r\n\r\n          reader.onload = (event: any) => {\r\n            this.urls.push(event.target.result);\r\n          };\r\n\r\n          reader.readAsDataURL(event.target.files[i]);\r\n          this.newlySelectedFileList.push(event.target.files[i]);\r\n        }\r\n        this.currentTotalImageCount += filesAmount;\r\n      } else {\r\n        // alert for file uploa limit\r\n        this.snackBar.open(\r\n          \"Can't upload more than \" + this.maxUploadableFileCount + \" photos\",\r\n          \"close\",\r\n          { duration: 2000 }\r\n        );\r\n      }\r\n\r\n      this.printTest();\r\n    }\r\n  }\r\n\r\n  // --------- For Testing -----------------\r\n\r\n  printTest() {\r\n    console.log(\"--------------- start ------------------\");\r\n    console.log(\"UPDATE URLS ...............................\");\r\n    console.log(this.urls);\r\n    console.log(\"REMAIN IMAGE ID ARRAY ....................................\");\r\n    console.log(this.remainImagesID);\r\n    console.log(\"TOTAL IMAGE COUNT ....................................\");\r\n    console.log(this.currentTotalImageCount);\r\n    console.log(\"NEWLY SELECTED FILE ARRAY  ....................................\");\r\n    console.log(this.newlySelectedFileList);\r\n    console.log(\"--------------- end ------------------\");\r\n  }\r\n\r\n  removeSelectedImg(index: number) {\r\n    console.log(\"remove -- \" + index);\r\n    console.log(\"remainImagesID.length -- \" +this.remainImagesID.length);\r\n    console.log(\"remove -- \" + index);\r\n    this.urls.splice(index, 1);\r\n    this.currentTotalImageCount -= 1;\r\n\r\n    if (this.remainImagesID.length < index + 1) {\r\n      this.newlySelectedFileList.splice(index - this.remainImagesID.length, 1);\r\n    } else {\r\n      this.remainImagesID.splice(index,1);\r\n    }\r\n    this.printTest();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  buildEvoteForm(fieldItem) {\r\n    this.evoteForm = this.fb.group({\r\n      topic: [fieldItem.topic || \"\", Validators.required],\r\n      clientId: [fieldItem.clientId || \"\",{disabled: !this.data.isNew}],\r\n      code: [fieldItem.code || \"\", Validators.required],\r\n      description: [fieldItem.description || \"\", Validators.required],\r\n      expireDate: [fieldItem.expireDate || \"\", Validators.required],\r\n      batchNumber: [fieldItem.batchNumber || \"\", Validators.required],\r\n      surveyId: [fieldItem.surveyId || null],\r\n      file: [fieldItem.file || \"\"]\r\n    });\r\n  }\r\n  submit() {\r\n    console.log(\"PRODUCT FORM VALUES \");\r\n    console.log(this.evoteForm.value);\r\n\r\n    let evoteRequest: EvoteCreationRequest = new EvoteCreationRequest(\r\n      this.evoteForm.value\r\n    );\r\n\r\n    console.log(\"EVOTE CreationRequest\" + JSON.stringify(evoteRequest));\r\n\r\n    let formData;\r\n\r\n    console.log(\"NEW SAVE CONTEXT\");\r\n    console.log(this.prepareToSave(evoteRequest));\r\n    formData = this.prepareToSave(evoteRequest);\r\n\r\n    //console.log(this.evoteForm.value)\r\n    console.log(\"prepared form data \");\r\n    console.log(formData);\r\n    this.dialogRef.close(formData);\r\n  }\r\n\r\n\r\n  prepareToSave(formvalue): FormData {\r\n    let input: FormData = new FormData();\r\n\r\n    if (formvalue.surveyId) {\r\n      input.append(\"surveyId\", formvalue.surveyId);\r\n    }\r\n\r\n    input.append(\"code\", formvalue.code);\r\n    input.append(\"quantity\", formvalue.quantity);\r\n    input.append(\r\n      \"expireDate\",\r\n      moment(formvalue.expireDate).format(\"YYYY-MM-DD\")\r\n    );\r\n    input.append(\"topic\", formvalue.topic);\r\n    input.append(\"description\", formvalue.description);\r\n    input.append(\"batchNumber\", formvalue.batchNumber);\r\n    input.append(\"clientId\", formvalue.clientId.id);\r\n\r\n\r\n\r\n    if(this.remainImagesID != null && this.remainImagesID.length > 0){\r\n      input.append(\"remainImagesID\", this.remainImagesID.toString());\r\n    }\r\n\r\n    for (let i = 0; i < this.newlySelectedFileList.length; i++) {\r\n      let selectedFile: File = this.newlySelectedFileList[i];\r\n      let type = selectedFile.type.split(\"/\");\r\n      let imageName = \"image_\" + i + \".\" + type[1];\r\n      input.append(\"file\", selectedFile, imageName);\r\n    }\r\n    return input;\r\n  }\r\n\r\n  getAllSurvey() {\r\n    this.getAllSurveySub = this.surveyService\r\n      .getAllSurveys()\r\n      .subscribe(successResp => {\r\n        this.surveyRows = successResp.content;\r\n      });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport class EvoteCreationRequest {\r\n  code: string;\r\n  quantity: string;\r\n  expireDate: string;\r\n  topic: string;\r\n  description: string;\r\n  batchNumber: string;\r\n  surveyId: string;\r\n  clientId: ClientSub;\r\n  file: any;\r\n\r\n\r\n  constructor(public formValue: any) {\r\n    this.code = formValue.code;\r\n    this.quantity = formValue.quantity;\r\n    this.expireDate = formValue.expireDate;\r\n    this.topic = formValue.topic;\r\n    this.description = formValue.description;\r\n    this.batchNumber = formValue.batchNumber;\r\n    this.surveyId = formValue.surveyId;\r\n    this.clientId = new ClientSub(formValue.clientId);\r\n    this.file = formValue.file;\r\n\r\n  }\r\n}\r\n\r\nclass ClientSub {\r\n  constructor(public id: string) { }\r\n}\r\n","module.exports = \"<!-- -------- JA Sprint 1 - MVP -------- -->\\r\\n<!-- --------- Buddhi Hasanka ---------- -->\\r\\n\\r\\n\\r\\n\\r\\n<mat-form-field class=\\\"margin-333\\\" style=\\\"width: 99%\\\">\\r\\n  <input matInput placeholder=\\\"Type to filter all columns\\\" value=\\\"\\\" (keyup)='updateFilter($event)'>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"m-333\\\">\\r\\n  <p class=\\\"mat-select-lable\\\"> Page Size: </p>\\r\\n  <mat-select class=\\\"mat-raised-select\\\" [(value)]=\\\"pageSize\\\" (selectionChange)=\\\"changeValue()\\\" placeholder=\\\"Favorite food\\\">\\r\\n    <mat-option [value]=\\\"10\\\">10</mat-option>\\r\\n    <mat-option [value]=\\\"20\\\">20</mat-option>\\r\\n  </mat-select>\\r\\n  <span fxFlex></span>\\r\\n  <button mat-raised-button class=\\\"mr-1 mb-05\\\" (click)=\\\"openEvotePopup({}, true)\\\" color=\\\"accent\\\">Add E-Vote</button>\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" (click)=\\\"openVoterPopup({})\\\" color=\\\"primary\\\">Add Voters</button>\\r\\n</div>\\r\\n\\r\\n<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n\\r\\n\\r\\n    <!-- <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\" [rows]=\\\"rows\\\" [columns]=\\\"\\\">\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Topic\\\"  [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.topic }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Client\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <span *ngFor='let client of clients | arrayFilter : row?.clientId : \\\"clients\\\"' >{{ client.name }}</span>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Code\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.code }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Expire Date\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.expireDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Batch Number\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.batchNumber }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" (click)=\\\"openEvotePopup(row)\\\" class=\\\"mr-1\\\"><mat-icon>edit</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"mr-1\\\" (click)=\\\"deleteEvote(row)\\\"><mat-icon>delete</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button   (click)=\\\"downloadCsv(row)\\\"><mat-icon>file_download</mat-icon></button>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable> -->\\r\\n\\r\\n\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"pl-1\\\">Topic</th>\\r\\n          <th>Client</th>\\r\\n          <th>Code</th>\\r\\n          <th>Description</th>\\r\\n          <th>Expire Date</th>\\r\\n          <th>Batch Number</th>\\r\\n          <th width=\\\"150px\\\" class=\\\"\\\">Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let row of rows;\\\">\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">{{ row?.topic }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">\\r\\n            <span *ngFor='let client of clients | arrayFilter : row?.clientId : \\\"clients\\\"'>{{\\r\\n              client.name }}</span></td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.code }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.description }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.expireDate }}</td>\\r\\n          <td class=\\\"pt-1 pb-1\\\">{{ row?.batchNumber }}</td>\\r\\n          <td class=\\\"pt-1 pb-1 pr-1\\\">\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button color=\\\"primary\\\" (click)=\\\"openEvotePopup(row)\\\" class=\\\"mr-1\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"mr-1\\\" (click)=\\\"deleteEvote(row)\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 col-sm-4 col-xs-4\\\">\\r\\n                <button mat-icon-button mat-sm-button (click)=\\\"downloadCsv(row)\\\">\\r\\n                  <mat-icon>file_download</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td class=\\\"pt-1 pb-1 pl-1\\\">\\r\\n            <div class=\\\"pagination\\\"> Total {{totalRecords}}</div>\\r\\n          </td>\\r\\n          <td colspan=\\\"7\\\">\\r\\n\\r\\n            <nav aria-label=\\\"Page navigation example\\\">\\r\\n              <ul class=\\\"pagination\\\" *ngIf=\\\"totalPages.length > 1\\\">\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber <= 1}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageEvote(pageNumber-1);\\\" aria-label=\\\"Previous\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Previous</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" *ngFor=\\\"let page of totalPages\\\" [ngClass]=\\\"{'active':pageNumber === page}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageEvote(page);\\\">\\r\\n                    {{page}}\\r\\n                  </a>\\r\\n                </li>\\r\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled':pageNumber >= totalPages.length}\\\">\\r\\n                  <a class=\\\"page-link\\\" (click)=\\\"this.getPageEvote(pageNumber+1);\\\" aria-label=\\\"Next\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                    <span class=\\\"sr-only\\\">Next</span>\\r\\n                  </a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </nav>\\r\\n\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tfoot>\\r\\n    </table>\\r\\n\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { EvoteService } from \"../evote-service.service\";\r\nimport { Subscription } from \"../../../../../node_modules/rxjs\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  DateAdapter\r\n} from \"../../../../../node_modules/@angular/material\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { AppFileDownloadService } from \"../../../shared/services/file-download.service\";\r\nimport { AppDataConversionService } from \"../../../shared/services/data-conversion.service\";\r\nimport { EvotePopupComponent } from \"../../evote/evote-table/evote-popup/evote-popup.component\";\r\nimport { VoterPopupComponent } from \"../voter-popup/voter-popup.component\";\r\nimport { ResponseModel } from \"../../../model/ResponseModel.model\";\r\nimport { CrudService } from \"../../cruds/crud.service\";\r\n\r\n@Component({\r\n  selector: \"app-evote-table\",\r\n  templateUrl: \"./evote-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class EvoteTableComponent implements OnInit, OnDestroy {\r\n  rows: any[];\r\n  columns = [];\r\n  temp = [];\r\n\r\n  // pagination\r\n  pageNumber = 1;\r\n  pageSize = 10;\r\n  totalPages = [];\r\n  totalRecords = 0;\r\n\r\n  public clients: any[];\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n\r\n  public getEvoteSub: Subscription;\r\n  constructor(\r\n    private evoteService: EvoteService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private confirmService: AppConfirmService,\r\n    private downloadService: AppFileDownloadService,\r\n    private conversionService: AppDataConversionService,\r\n    private dialog: MatDialog,\r\n    private clientService: CrudService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllEvote();\r\n    this.getClientSuggestions();\r\n  }\r\n\r\n  downloadCsv(selectedRow) {\r\n    console.log(\"SELECTED RAW : \" + selectedRow.id);\r\n    this.evoteService.getEvoteDetails(selectedRow.id).subscribe(successResp => {\r\n      let auths = successResp.content;\r\n      const fileName =\r\n        selectedRow.topic +\r\n        \"_\" +\r\n        selectedRow.code +\r\n        \"_\" +\r\n        selectedRow.batchNumber;\r\n      const csvData = this.conversionService.convertToCsv(auths);\r\n\r\n      this.downloadService.downloadFile({\r\n        name: fileName,\r\n        type: \"csv\",\r\n        data: csvData\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getClientSub) {\r\n      this.getClientSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // downloadCsv(selectedRow) {\r\n  //   const fileName  =  selectedRow.topic + '_' + selectedRow.code + '_' + selectedRow.batchNumber;\r\n  //   const csvData =  this.conversionService.convertToCsv(selectedRow.productDetails);\r\n  //   this.downloadService.downloadFile({ name: fileName, type : 'csv' , data : csvData });\r\n  // }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    let columns = Object.keys(this.temp[0]);\r\n    columns.splice(columns.length - 1);\r\n\r\n    if (!columns.length) return;\r\n\r\n    const rows = this.temp.filter(function(data) {\r\n      for (let i = 0; i <= columns.length; i++) {\r\n        let column = columns[i];\r\n        if (\r\n          data[column] &&\r\n          data[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(val) > -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    this.rows = rows;\r\n  }\r\n\r\n  getClientSuggestions() {\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n        console.log(this.clients);\r\n      });\r\n  }\r\n\r\n  getAllEvote() {\r\n    this.getEvoteSub = this.evoteService.getAllEvotes().subscribe(\r\n      successResp => {\r\n        this.rows = successResp.content;\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        this.errDialog.showError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  // --------- BH ----------\r\n  getPageEvote(pageNumber) {\r\n    if (pageNumber === 1 || (0 < pageNumber && pageNumber <= this.totalPages.length)) {\r\n      this.pageNumber = pageNumber;\r\n\r\n      this.getEvoteSub = this.evoteService.getPageEvotes(pageNumber, this.pageSize).subscribe(\r\n        successResp => {\r\n          this.rows = this.temp = successResp.content;\r\n          let totalPages = successResp.pagination.totalPages;\r\n          let totalPagesArray = [];\r\n\r\n          if (totalPages > 1) {\r\n            for (let i = 1; i <= totalPages; i++) {\r\n              totalPagesArray.push(i);\r\n            }\r\n          }\r\n          this.totalPages = totalPagesArray;\r\n          this.totalRecords = successResp.pagination.totalRecords;\r\n\r\n        },\r\n        error => {\r\n          this.loader.close();\r\n          console.log(error);\r\n          console.log(error.status);\r\n          this.errDialog.showError(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  changeValue() {\r\n    this.pageNumber = 1;\r\n    this.getPageEvote(this.pageNumber);\r\n  }\r\n  // --------- BH ----------\r\n\r\n\r\n  deleteEvote(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.description}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.evoteService.removeEvotes(row, this.rows).subscribe(\r\n            data => {\r\n              this.getAllEvote();\r\n              this.loader.close();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError(error);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openEvotePopup(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add New E-Vote\" : \"Update E-Vote\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(EvotePopupComponent, {\r\n      width: \"720px\",\r\n      disableClose: true,\r\n      data: { title: title, payload: data, isNew: isNew }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n\r\n      if (isNew) {\r\n        this.evoteService.addEvote(res, this.rows).subscribe(\r\n          data => {\r\n            this.rows = data;\r\n            this.loader.close();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            let backEndError = error.error.validationFailures[0].field;\r\n\r\n            console.log(backEndError);\r\n\r\n            if (backEndError == \"eVote\") {\r\n              this.errDialog.showError({\r\n                title: \"Client Error !\",\r\n                clientError:\r\n                  \" Voters are not exists for entered batch number !\",\r\n                type: \"client_error\"\r\n              });\r\n            } else {\r\n              this.errDialog.showError(error);\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        this.evoteService.updateEvote(data.id, res).subscribe(\r\n          response => {\r\n            console.log(response.content);\r\n            this.rows = this.rows.map(i => {\r\n              if (i.id === data.id) {\r\n                return Object.assign({}, i, response.content);\r\n              }\r\n              return i;\r\n            });\r\n\r\n            this.loader.close();\r\n            return this.rows.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError(error);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  openVoterPopup(data: any = {}) {\r\n    let title = \"Populate Voters \";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(VoterPopupComponent, {\r\n      width: \"400px\",\r\n      disableClose: true,\r\n      data: { title: title, payload: data }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n      this.evoteService.populateVoters(res).subscribe(\r\n        response => {\r\n          console.log('RESPONSE : ');\r\n          console.log(response)\r\n          this.loader.close();\r\n        },\r\n        error => {\r\n          this.loader.close();\r\n          this.errDialog.showError(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EvoteRouts } from './evote.routing';\r\nimport { EvoteService } from './evote-service.service';\r\nimport {\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatAutocompleteModule,\r\n  MatToolbarModule} from '@angular/material';\r\nimport { EvoteTableComponent } from './evote-table/evote-table.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { EvotePopupComponent } from './evote-table/evote-popup/evote-popup.component';\r\nimport { VoterPopupComponent } from './voter-popup/voter-popup.component';\r\nimport { CrudService } from '../cruds/crud.service';\r\nimport { ArrayFilter } from '../../shared/pipes/array-filter.pipe';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { FileUploadModule } from \"ng2-file-upload\";\r\nimport { SurveyService } from '../survey/survey.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatCardModule,\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatAutocompleteModule,\r\n    SharedModule,\r\n    FileUploadModule,\r\n    MatToolbarModule,\r\n    RouterModule.forChild(EvoteRouts)\r\n  ],\r\n  providers: [EvoteService,CrudService,SurveyService],\r\n  declarations: [\r\n    EvoteTableComponent,\r\n    EvotePopupComponent,\r\n    VoterPopupComponent,\r\n  ],\r\n  entryComponents: [EvotePopupComponent,VoterPopupComponent]\r\n})\r\nexport class EvoteModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { EvoteTableComponent } from './evote-table/evote-table.component';\r\n\r\n\r\nexport const EvoteRouts: Routes = [\r\n  {\r\n    path: 'showEvote',\r\n    component: EvoteTableComponent,\r\n    data: { title: 'E-Vote', breadcrumb: 'E vote' }\r\n  }\r\n];\r\n","module.exports = \"<form [formGroup]=\\\"voterForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <mat-toolbar matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{data.title}}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n  <mat-dialog-content class=\\\"mat-typography mt-1\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\" class=\\\"mt-1\\\">\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-select [formControl]=\\\"voterForm.controls['client']\\\" required placeholder=\\\"Select A Client\\\">\\r\\n            <mat-option>none</mat-option>\\r\\n            <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <input type='file' (change)=\\\"handleFileInput($event.target.files)\\\" [formControl]=\\\"voterForm.controls['file']\\\"\\r\\n          required name=\\\"file\\\">\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"voterForm.invalid\\\">Save</button>\\r\\n        <span fxFlex></span>\\r\\n        <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRefVote.close(false)\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Inject, OnDestroy } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { EvoteService } from \"../evote-service.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { CrudService } from \"../../cruds/crud.service\";\r\nimport { ResponseModel } from \"../../../model/ResponseModel.model\";\r\n\r\n@Component({\r\n  selector: \"app-voter-popup\",\r\n  templateUrl: \"./voter-popup.component.html\"\r\n})\r\nexport class VoterPopupComponent implements OnInit, OnDestroy {\r\n  public voterForm: FormGroup;\r\n\r\n  public clients: any[];\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n  fileObject: File = null;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private evoteService: EvoteService,\r\n    private clientService: CrudService,\r\n    public dialogRefVote: MatDialogRef<VoterPopupComponent>\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getClients();\r\n    this.buildVoterForm(this.data.payload);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getClientSub) {\r\n      this.getClientSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getClients() {\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n      });\r\n  }\r\n\r\n  buildVoterForm(fieldItem) {\r\n    this.voterForm = this.fb.group({\r\n      client: [fieldItem.client || \"\", Validators.required],\r\n      file: [fieldItem.file || \"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(\"called submit \");\r\n    this.dialogRefVote.close(this.prepareToSave(this.voterForm.value));\r\n  }\r\n\r\n  prepareToSave(formValue): any {\r\n    let formData: FormData = new FormData();\r\n    formData.append(\"client\", formValue.client);\r\n    formData.append(\"file\", this.fileObject);\r\n    return formData;\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    console.log(\"called hande file \");\r\n    let fileItem = files.item(0);\r\n    console.log(\"file input has changed. The file is\", fileItem);\r\n    this.fileObject = fileItem;\r\n  }\r\n}\r\n"],"sourceRoot":""}