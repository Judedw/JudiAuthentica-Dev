{"version":3,"sources":["webpack:///./src/app/views/interaction-view/interaction-view.component.html","webpack:///./src/app/views/interaction-view/interaction-view.component.ts","webpack:///./src/app/views/interaction-view/interaction-view.module.ts","webpack:///./src/app/views/interaction-view/interaction-view.routing.ts","webpack:///./src/app/views/interaction-view/interaction-view.service.ts"],"names":[],"mappings":"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","file":"views-interaction-view-interaction-view-module.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"interactForm\\\">\\r\\n  <div class=\\\"page-wrap height-100 background-survey-signin\\\" *ngIf=\\\"showLogin\\\">\\r\\n    <div class=\\\"session-form-hold\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"text-center pb-1\\\">\\r\\n            <img src=\\\"assets/images/signin/logo.jpg\\\" alt=\\\"\\\">\\r\\n            <p class=\\\"text-muted m-0\\\">Sign in to your account</p>\\r\\n            <small *ngIf=\\\"!loginResult\\\" class=\\\" m-0 form-error-msg\\\"> Invalid Access Code ! </small>\\r\\n          </div>\\r\\n\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" matInput placeholder=\\\"Access Code\\\" value=\\\"\\\" [formControl]=\\\"interactForm.controls['password']\\\"\\r\\n              required name=\\\"password\\\">\\r\\n          </mat-form-field>\\r\\n          <small *ngIf=\\\"interactForm.controls['password'].hasError('required') && interactForm.controls['password'].touched\\\"\\r\\n            class=\\\"form-error-msg\\\">\\r\\n            Access code is required </small>\\r\\n\\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" (click)=\\\"doLog()\\\" [disabled]=\\\"interactForm.invalid\\\">Login\\r\\n            to Survey</button>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n<div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\" id=\\\"survey-view-survey\\\" class=\\\"background-survey-form\\\">\\r\\n  <mat-toolbar fxLayoutAlign=\\\"center center\\\" matDialogTitle class=\\\"mat-primary m-0\\\">\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <span class=\\\"title dialog-title\\\">{{ surveyTitle }}</span>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n\\r\\n\\r\\n  <div class=\\\"survey-page-wrap height-100\\\" *ngIf=\\\"!showLogin\\\">\\r\\n    <div class=\\\"survey-form-hold\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-content>\\r\\n          <div id=\\\"surveyElement\\\"></div>\\r\\n          <div id=\\\"surveyResult\\\"></div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div id=\\\"survey-view-footer\\\">\\r\\n    <div class=\\\"container custom-center\\\">\\r\\n      <span>Powered by</span>\\r\\n      <img src=\\\"assets/images/cp_logo_text.png\\\" alt=\\\"\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<script>\\r\\n  $.material.init();\\r\\n</script>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { egretAnimations } from \"../../shared/animations/egret-animations\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { InteractionViewService } from \"./interaction-view.service\";\r\nimport * as Survey from \"survey-angular\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-interaction-view\",\r\n  templateUrl: \"./interaction-view.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class InteractionViewComponent implements OnInit {\r\n  public sub: any;\r\n  public futureSurveyObj: any;\r\n  public surveyTitle: any;\r\n\r\n  public interactionId;\r\n  public surveyId;\r\n  public preview;\r\n  public showLogin: boolean = false;\r\n  public loginResult = true;\r\n  // public showDetails = false;\r\n\r\n  jsonContent: any;\r\n  pageJson;\r\n\r\n\r\n  public interactForm: FormGroup;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private interactionViewService: InteractionViewService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildInteractForm();\r\n    this.interactForm = this.fb.group({\r\n      password: [\"\", Validators.required]\r\n    });\r\n\r\n    console.log(\"NG ON INIT CALLED\");\r\n\r\n    this.sub = this.route.queryParams.subscribe(params => {\r\n      this.interactionId = params[\"interactionId\"];\r\n      this.surveyId = params[\"surveyId\"];\r\n      this.preview = params[\"preview\"];\r\n    });\r\n\r\n    if (this.interactionId) {\r\n      this.viewInteraction(this.interactionId);\r\n    }\r\n    if (this.surveyId) {\r\n      console.log(\"SURVEY ID : \" + this.surveyId);\r\n      this.retrieveSurvey(this.surveyId);\r\n    }\r\n  }\r\n\r\n  viewInteraction(interactionId) {\r\n    this.interactionViewService\r\n      .getInteractionById(interactionId)\r\n      .subscribe(response => {\r\n        console.log(\"interaction response \");\r\n        console.log(response);\r\n        this.futureSurveyObj = response.content.futureSurvey;\r\n        this.surveyTitle = this.futureSurveyObj.title;\r\n        this.showLogin = true;\r\n        console.log(\"ID : \" + this.futureSurveyObj.id);\r\n        console.log(\"title : \" + this.surveyTitle);\r\n        console.log(\"FUTURE SURVEY OBJ\");\r\n      });\r\n  }\r\n\r\n  retrieveSurvey(surveyId) {\r\n    console.log(\" retrieveSurvey SURVEY ID : \" + surveyId);\r\n    this.interactionViewService\r\n      .getFutureSurveyById(surveyId)\r\n      .subscribe(response => {\r\n        this.showLogin = false;\r\n        // this.showSurvey = true;\r\n        this.futureSurveyObj = response.content;\r\n        this.jsonContent = JSON.parse(this.futureSurveyObj.jsonContent);\r\n        this.surveyTitle = this.futureSurveyObj.title;\r\n        this.pageJson = JSON.parse(this.jsonContent).pages;\r\n\r\n        this.viewSurvey();\r\n        this.setuptheme();\r\n      });\r\n  }\r\n\r\n  buildInteractForm() {\r\n    this.interactForm = this.fb.group({\r\n      password: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  // ........... Survey Respond view should be re architecturing with following certin Angular techniquees .............\r\n  viewSurvey() {\r\n    let pageArray: any[] = this.pageJson;\r\n    let resultArray = [];\r\n\r\n    let htmlValue =\r\n      \"<h3>Thank you for completing the survey!</h3>\" +\r\n      '<div class=\"panel-footer card-footer survey-page-footer\">' +\r\n      \"</div>\" +\r\n      '<div class=\"sv_container\">';\r\n\r\n    if (pageArray.length != 0) {\r\n      pageArray.forEach(element => {\r\n        const elementArray: any[] = element.elements;\r\n        console.log(elementArray);\r\n        if (elementArray) {\r\n          elementArray.forEach(element => {\r\n            htmlValue +=\r\n              \"<div class='sv_row'>\" +\r\n              \"<div class='sv_qstn'>\" +\r\n              \"<h5>\" +\r\n              \"<span class='survey-form-question'>Q :- \" +\r\n              element.title +\r\n              \"</span>\" +\r\n              \"</h5>\" +\r\n              \"<span class='survey-form-answer'>A :- {\" +\r\n              element.name +\r\n              \"} </span>\" +\r\n              \"</div>\" +\r\n              \"</div></br>\";\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    htmlValue += \"</div>\";\r\n\r\n    let jsonc = JSON.parse(this.jsonContent);\r\n    // jsonc.completedHtml = htmlValue;\r\n\r\n    const surveyModel = new Survey.Model(jsonc);\r\n\r\n    Survey.StylesManager.applyTheme(\"bootstrap\");\r\n\r\n    surveyModel.onUpdateQuestionCssClasses.add(function (survey, options) {\r\n      var classes = options.cssClasses;\r\n\r\n      if (options.question.getType() === \"rating\") {\r\n        classes.item = \"btn btn-default btn-secondary\";\r\n      }\r\n\r\n      if (options.question.getType() === \"radiogroup\") {\r\n        classes.item = \"radio sv-q-col-1\";\r\n      }\r\n\r\n      if (options.question.getType() === \"checkbox\") {\r\n        classes.item = \"checkbox sv-q-col-1\";\r\n      }\r\n    });\r\n\r\n    Survey.SurveyNG.render(\"surveyElement\", { model: surveyModel });\r\n\r\n    // .............. ON COMPLET START HERE ..........................\r\n    surveyModel.onComplete.add(function (result) {\r\n\r\n      localStorage.setItem(\"surveyResult\", JSON.stringify(result.data));\r\n\r\n      document.getElementById(\"surveyResult\").innerHTML = \"<a class='btn sv_preview_btn' href='\" + window.location.href + \"&preview=true' >View Summary</a>\";\r\n\r\n\r\n      console.log(\"..............SURVEY ANSWER RESULR/.............\");\r\n      console.log(result);\r\n\r\n      // ------- new start --------\r\n      pageArray.forEach(element => {\r\n        // console.log(element.elements);\r\n        element.elements.forEach(element => {\r\n          const elementArray = {};\r\n\r\n          const eleType: string = element.type;\r\n          console.log(\"..........ELEMENT TYPE...........\");\r\n\r\n          console.log(eleType);\r\n          if (eleType != \"html\") {\r\n            const valueArray: any[] = [];\r\n            const qCode = element.qcode;\r\n            if (qCode != null) {\r\n              elementArray[\"type\"] = eleType;\r\n              elementArray[\"qcode\"] = qCode;\r\n\r\n              const answerObj = result.data[element.name];\r\n              if (answerObj != null) {\r\n                // ..... Matrix question answer wrapping section.............\r\n                if (eleType === \"matrix\") {\r\n                  console.log(\"MATRIX ANSWR OB \");\r\n                  for (let answer in answerObj) {\r\n                    valueArray.push(\r\n                      new MatrixBaseTemplate(answer, answerObj[answer])\r\n                    );\r\n                  }\r\n                  elementArray[\"matrixValues\"] = valueArray;\r\n                } else {\r\n                  // ..... Non Matrix question answer wrapping section.............\r\n                  if (answerObj instanceof Array) {\r\n                    answerObj.forEach(ans => {\r\n                      valueArray.push(new ValueTemplate(ans));\r\n                    });\r\n                  } else {\r\n                    valueArray.push(new ValueTemplate(answerObj));\r\n                  }\r\n                  elementArray[\"values\"] = valueArray;\r\n                }\r\n              } else {\r\n                // YS : manage non required answering situations\r\n                if (eleType === \"matrix\") {\r\n                  valueArray.push(new MatrixBaseTemplate(null, null));\r\n                  elementArray[\"matrixValues\"] = valueArray;\r\n                } else {\r\n                  valueArray.push(new ValueTemplate(null));\r\n                  elementArray[\"values\"] = valueArray;\r\n                }\r\n              }\r\n\r\n              resultArray.push(elementArray);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      // ------- new end --------\r\n\r\n      console.log(\"...............ANSWER ARRAY.................\");\r\n      console.log(resultArray);\r\n      console.log(JSON.stringify(resultArray));\r\n\r\n      const interactService: InteractionViewService = new InteractionViewService();\r\n\r\n      interactService.submitAnswers(resultArray).subscribe(\r\n        response => {\r\n          console.log(\"SUCCESS\");\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(\"ERROR\");\r\n          console.log(error);\r\n          //alert(\"Something went wrong !\");\r\n        }\r\n      );\r\n    });\r\n\r\n    // ................. ON COMPLETE END HERE .........\r\n\r\n    if (this.preview) {\r\n      surveyModel.data = JSON.parse(localStorage.getItem(\"surveyResult\"))\r\n      surveyModel.mode = 'display';\r\n    }\r\n\r\n\r\n  }\r\n\r\n  setuptheme() {\r\n    const mainColor = \"#0684C0\";\r\n    const mainHoverColor = \"#5DAAD2\";\r\n    const textColor = \"#4a4a4a\";\r\n    const headerColor = \"#b7b7b7\";\r\n    const headerBackgroundColor = \"#000000\";\r\n    const bodyContainerBackgroundColor = \"#f8f8f8\";\r\n\r\n    const defaultThemeColorsSurvey =\r\n      Survey.StylesManager.ThemeColors[\"default\"];\r\n    defaultThemeColorsSurvey[\"$main-color\"] = mainColor;\r\n    defaultThemeColorsSurvey[\"$main-hover-color\"] = mainHoverColor;\r\n    defaultThemeColorsSurvey[\"$text-color\"] = textColor;\r\n    defaultThemeColorsSurvey[\"$header-color\"] = headerColor;\r\n    defaultThemeColorsSurvey[\r\n      \"$header-background-color\"\r\n    ] = headerBackgroundColor;\r\n    defaultThemeColorsSurvey[\r\n      \"$body-container-background-color\"\r\n    ] = bodyContainerBackgroundColor;\r\n\r\n    // console.log(\"--- theme color setting---\");\r\n    // console.log(defaultThemeColorsSurvey);\r\n    // console.log(Survey.StylesManager.ThemeColors);\r\n    // console.log(Survey);\r\n\r\n    Survey.StylesManager.applyTheme();\r\n  }\r\n\r\n  doLog() {\r\n    console.log(\"CALLED METHOD\");\r\n\r\n    let password = this.interactForm.get(\"password\").value;\r\n\r\n    let fsPart: FSurveyPart = new FSurveyPart(this.futureSurveyObj.id);\r\n\r\n    let loginReq: LoginRequest = new LoginRequest(\r\n      this.interactionId,\r\n      password,\r\n      fsPart\r\n    );\r\n\r\n    console.log(\"Login REQUEST \");\r\n    console.log(loginReq);\r\n\r\n    this.interactionViewService\r\n      .interactLoginPost(loginReq)\r\n      .subscribe(response => {\r\n        this.showLogin = false;\r\n        this.loginResult = true;\r\n\r\n        const loggedInteraction = response;\r\n        console.log(\"LOGGED INTERACTION RESPONSE\");\r\n        console.log(loggedInteraction);\r\n\r\n        if (loggedInteraction != null) {\r\n          if (loggedInteraction.responStatus == 1) {\r\n            // Situation all ready responded to survey\r\n          } else {\r\n            this.showLogin = false;\r\n            this.retrieveSurvey(loggedInteraction.futureSurvey.id);\r\n          }\r\n        } else {\r\n          // could not find a record for password and interaction id\r\n        }\r\n      }, error => {\r\n        // this.errors = error;\r\n        this.loginResult = false;\r\n      });\r\n  }\r\n}\r\n\r\nexport class LoginRequest {\r\n  constructor(public id, public password, public futureSurvey: any) { }\r\n}\r\n\r\nexport class FSurveyPart {\r\n  constructor(public id) { }\r\n}\r\n\r\nexport class ValueTemplate {\r\n  constructor(public value: any) { }\r\n}\r\n\r\nexport class MatrixBaseTemplate {\r\n  constructor(public rowValue, public columnValue: any) { }\r\n}\r\n","import { NgModule, Injector } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { InteractionViewComponent } from \"./interaction-view.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { InteractionViewRoute } from \"./interaction-view.routing\";\nimport { MatCardModule, MatToolbarModule, MatFormFieldModule, MatInputModule, MatButtonModule } from \"@angular/material\";\nimport { InteractionViewService } from \"./interaction-view.service\";\nimport { FutureSurveyService } from '../future-survey/future-survey.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nexport let InjectorInstance2: Injector;\n\n@NgModule({\n  declarations: [InteractionViewComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    RouterModule.forChild(InteractionViewRoute)\n  ],\n  providers: [InteractionViewService, FutureSurveyService]\n})\nexport class InteractionViewModule {\n  constructor(private injector: Injector) {\n    InjectorInstance2 = this.injector;\n  }\n}\n","import { Routes } from '@angular/router';\r\nimport { InteractionViewComponent } from './interaction-view.component';\r\n;\r\n\r\n\r\nexport const InteractionViewRoute: Routes = [\r\n  {\r\n    path: 'viewInteraction',\r\n    component: InteractionViewComponent,\r\n    data: { title: 'Interaction View', breadcrumb: 'Interaction View' }\r\n  }\r\n];\r\n","import {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"../../../environments/environment.prod\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { InjectorInstance2 } from \"./interaction-view.module\";\r\n\r\n@Injectable()\r\nexport class InteractionViewService {\r\n  surveyApiUrl: string = environment.surveyApiURL;\r\n  private http: HttpClient;\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n\r\n  constructor() {\r\n    this.http = InjectorInstance2.get<HttpClient>(HttpClient);\r\n  }\r\n\r\n  getInteractionById(interactionId): Observable<any> {\r\n    return this.http\r\n      .get<any>(\r\n        this.surveyApiUrl + \"surveys/futureSurveyInteraction/\" + interactionId\r\n      )\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getFutureSurveyById(surveyId): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurvey/\" + surveyId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    return throwError(error);\r\n  }\r\n\r\n  submitAnswers(answers): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyAnswer\", answers)\r\n      .pipe(\r\n        map(data => {\r\n          console.log(data);\r\n          return data.content;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n  interactLogin(loginReq){\r\n    return this.http\r\n    .get<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyInteraction/login/\" + loginReq.password)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  interactLoginPost(loginReq){\r\n    return this.http\r\n    .post<any>(this.surveyApiUrl + \"surveys\" + \"/futureSurveyInteraction/login/\",loginReq )\r\n    .pipe(\r\n      map(data => {\r\n        console.log(data);\r\n        return data.content;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}